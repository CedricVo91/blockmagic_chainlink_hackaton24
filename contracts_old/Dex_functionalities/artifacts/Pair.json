{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"goerli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"functionDebugData": {
				"@_966": {
					"entryPoint": null,
					"id": 966,
					"parameterSlots": 5,
					"returnSlots": 0
				},
				"abi_decode_t_address_fromMemory": {
					"entryPoint": 463,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_addresst_addresst_addresst_addresst_address_fromMemory": {
					"entryPoint": 485,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 5
				},
				"allocate_unbounded": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"cleanup_t_address": {
					"entryPoint": 419,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_uint160": {
					"entryPoint": 388,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
					"entryPoint": 384,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"validator_revert_t_address": {
					"entryPoint": 438,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 0
				}
			},
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:1825:8",
						"statements": [
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "47:35:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "57:19:8",
											"value": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "73:2:8",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "67:5:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "67:9:8"
											},
											"variableNames": [
												{
													"name": "memPtr",
													"nodeType": "YulIdentifier",
													"src": "57:6:8"
												}
											]
										}
									]
								},
								"name": "allocate_unbounded",
								"nodeType": "YulFunctionDefinition",
								"returnVariables": [
									{
										"name": "memPtr",
										"nodeType": "YulTypedName",
										"src": "40:6:8",
										"type": ""
									}
								],
								"src": "7:75:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "177:28:8",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "194:1:8",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "197:1:8",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "187:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "187:12:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "187:12:8"
										}
									]
								},
								"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
								"nodeType": "YulFunctionDefinition",
								"src": "88:117:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "300:28:8",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "317:1:8",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "320:1:8",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "310:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "310:12:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "310:12:8"
										}
									]
								},
								"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
								"nodeType": "YulFunctionDefinition",
								"src": "211:117:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "379:81:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "389:65:8",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "404:5:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "411:42:8",
														"type": "",
														"value": "0xffffffffffffffffffffffffffffffffffffffff"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "400:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "400:54:8"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "389:7:8"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint160",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "361:5:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "371:7:8",
										"type": ""
									}
								],
								"src": "334:126:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "511:51:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "521:35:8",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "550:5:8"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint160",
													"nodeType": "YulIdentifier",
													"src": "532:17:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "532:24:8"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "521:7:8"
												}
											]
										}
									]
								},
								"name": "cleanup_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "493:5:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "503:7:8",
										"type": ""
									}
								],
								"src": "466:96:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "611:79:8",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "668:16:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "677:1:8",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "680:1:8",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "670:6:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "670:12:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "670:12:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "634:5:8"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "659:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "641:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "641:24:8"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "631:2:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "631:35:8"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "624:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "624:43:8"
											},
											"nodeType": "YulIf",
											"src": "621:63:8"
										}
									]
								},
								"name": "validator_revert_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "604:5:8",
										"type": ""
									}
								],
								"src": "568:122:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "759:80:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "769:22:8",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "784:6:8"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "778:5:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "778:13:8"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "769:5:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "827:5:8"
													}
												],
												"functionName": {
													"name": "validator_revert_t_address",
													"nodeType": "YulIdentifier",
													"src": "800:26:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "800:33:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "800:33:8"
										}
									]
								},
								"name": "abi_decode_t_address_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "737:6:8",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "745:3:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "753:5:8",
										"type": ""
									}
								],
								"src": "696:143:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "990:832:8",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "1037:83:8",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																"nodeType": "YulIdentifier",
																"src": "1039:77:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "1039:79:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "1039:79:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "1011:7:8"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1020:9:8"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "1007:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "1007:23:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1032:3:8",
														"type": "",
														"value": "160"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "1003:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "1003:33:8"
											},
											"nodeType": "YulIf",
											"src": "1000:120:8"
										},
										{
											"nodeType": "YulBlock",
											"src": "1130:128:8",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "1145:15:8",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1159:1:8",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "1149:6:8",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "1174:74:8",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1220:9:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1231:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1216:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1216:22:8"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "1240:7:8"
															}
														],
														"functionName": {
															"name": "abi_decode_t_address_fromMemory",
															"nodeType": "YulIdentifier",
															"src": "1184:31:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "1184:64:8"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "1174:6:8"
														}
													]
												}
											]
										},
										{
											"nodeType": "YulBlock",
											"src": "1268:129:8",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "1283:16:8",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1297:2:8",
														"type": "",
														"value": "32"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "1287:6:8",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "1313:74:8",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1359:9:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1370:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1355:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1355:22:8"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "1379:7:8"
															}
														],
														"functionName": {
															"name": "abi_decode_t_address_fromMemory",
															"nodeType": "YulIdentifier",
															"src": "1323:31:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "1323:64:8"
													},
													"variableNames": [
														{
															"name": "value1",
															"nodeType": "YulIdentifier",
															"src": "1313:6:8"
														}
													]
												}
											]
										},
										{
											"nodeType": "YulBlock",
											"src": "1407:129:8",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "1422:16:8",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1436:2:8",
														"type": "",
														"value": "64"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "1426:6:8",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "1452:74:8",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1498:9:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1509:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1494:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1494:22:8"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "1518:7:8"
															}
														],
														"functionName": {
															"name": "abi_decode_t_address_fromMemory",
															"nodeType": "YulIdentifier",
															"src": "1462:31:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "1462:64:8"
													},
													"variableNames": [
														{
															"name": "value2",
															"nodeType": "YulIdentifier",
															"src": "1452:6:8"
														}
													]
												}
											]
										},
										{
											"nodeType": "YulBlock",
											"src": "1546:129:8",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "1561:16:8",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1575:2:8",
														"type": "",
														"value": "96"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "1565:6:8",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "1591:74:8",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1637:9:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1648:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1633:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1633:22:8"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "1657:7:8"
															}
														],
														"functionName": {
															"name": "abi_decode_t_address_fromMemory",
															"nodeType": "YulIdentifier",
															"src": "1601:31:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "1601:64:8"
													},
													"variableNames": [
														{
															"name": "value3",
															"nodeType": "YulIdentifier",
															"src": "1591:6:8"
														}
													]
												}
											]
										},
										{
											"nodeType": "YulBlock",
											"src": "1685:130:8",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "1700:17:8",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1714:3:8",
														"type": "",
														"value": "128"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "1704:6:8",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "1731:74:8",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1777:9:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1788:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1773:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1773:22:8"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "1797:7:8"
															}
														],
														"functionName": {
															"name": "abi_decode_t_address_fromMemory",
															"nodeType": "YulIdentifier",
															"src": "1741:31:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "1741:64:8"
													},
													"variableNames": [
														{
															"name": "value4",
															"nodeType": "YulIdentifier",
															"src": "1731:6:8"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_address_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "928:9:8",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "939:7:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "951:6:8",
										"type": ""
									},
									{
										"name": "value1",
										"nodeType": "YulTypedName",
										"src": "959:6:8",
										"type": ""
									},
									{
										"name": "value2",
										"nodeType": "YulTypedName",
										"src": "967:6:8",
										"type": ""
									},
									{
										"name": "value3",
										"nodeType": "YulTypedName",
										"src": "975:6:8",
										"type": ""
									},
									{
										"name": "value4",
										"nodeType": "YulTypedName",
										"src": "983:6:8",
										"type": ""
									}
								],
								"src": "845:977:8"
							}
						]
					},
					"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
					"id": 8,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"linkReferences": {},
			"object": "608060405234801562000010575f80fd5b50604051620026c3380380620026c38339818101604052810190620000369190620001e5565b845f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050505062000269565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620001af8262000184565b9050919050565b620001c181620001a3565b8114620001cc575f80fd5b50565b5f81519050620001df81620001b6565b92915050565b5f805f805f60a0868803121562000201576200020062000180565b5b5f6200021088828901620001cf565b95505060206200022388828901620001cf565b94505060406200023688828901620001cf565b93505060606200024988828901620001cf565b92505060806200025c88828901620001cf565b9150509295509295909350565b61244c80620002775f395ff3fe608060405234801561000f575f80fd5b50600436106100f3575f3560e01c80635fcbd28511610095578063bff46a4c11610064578063bff46a4c14610250578063d0e7e07e14610281578063d21220a71461029d578063f140a35a146102bb576100f3565b80635fcbd285146101da57806364e7b85a146101f8578063729132f914610214578063a996944c14610232576100f3565b8063443cb4bc116100d1578063443cb4bc146101645780635444a39d1461018257806354b2a7691461019e5780635a76f25e146101bc576100f3565b80630902f1ac146100f75780630dfe16811461011657806341976e0914610134575b5f80fd5b6100ff6102eb565b60405161010d929190611b9a565b60405180910390f35b61011e6102fb565b60405161012b9190611c00565b60405180910390f35b61014e60048036038101906101499190611c47565b61031e565b60405161015b9190611c8a565b60405180910390f35b61016c6105b1565b6040516101799190611ca3565b60405180910390f35b61019c60048036038101906101979190611ce6565b6105b7565b005b6101a66107d3565b6040516101b39190611c8a565b60405180910390f35b6101c4610940565b6040516101d19190611ca3565b60405180910390f35b6101e2610946565b6040516101ef9190611d6c565b60405180910390f35b610212600480360381019061020d9190611ce6565b61096b565b005b61021c610a30565b6040516102299190611ca3565b60405180910390f35b61023a610aaa565b6040516102479190611ca3565b60405180910390f35b61026a60048036038101906102659190611c47565b610bfb565b604051610278929190611d85565b60405180910390f35b61029b60048036038101906102969190611dac565b610cc6565b005b6102a5611054565b6040516102b29190611c00565b60405180910390f35b6102d560048036038101906102d09190611dac565b611079565b6040516102e29190611ca3565b60405180910390f35b5f80600354600454915091509091565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614806103c5575060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b610404576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103fb90611e44565b60405180910390fd5b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036104fa5760055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156104c2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104e69190611edf565b909192935090915090505080915050610598565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610564573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105889190611edf565b9091929350909150905050809150505b6402540be400816105a99190611f83565b915050919050565b60035481565b5f6105e05f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661031e565b90505f61060d60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661031e565b90505f82600261061d9190611ff9565b670de0b6b3a7640000856106319190611ff9565b61063b9190612067565b90505f82600261064b9190611ff9565b670de0b6b3a76400008661065f9190611ff9565b6106699190612067565b90505f6107c060035460025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106dc573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107009190612097565b8561070b9190611ff9565b6107159190612067565b60045460025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610782573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107a69190612097565b856107b19190611ff9565b6107bb9190612067565b611225565b90506107cb8161123d565b505050505050565b5f8060055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561083f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108639190611edf565b5050509150505f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156108d4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108f89190611edf565b5050509150506402540be4008161090f9190611f83565b6305f5e1006402540be400846109259190611f83565b61092f9190611f83565b61093991906120c2565b9250505090565b60045481565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f6109945f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661031e565b90505f6109c160015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661031e565b90505f8260026109d19190611ff9565b670de0b6b3a7640000856109e59190611ff9565b6109ef9190612067565b90505f8260026109ff9190611ff9565b670de0b6b3a764000086610a139190611ff9565b610a1d9190612067565b9050610a29828261166e565b5050505050565b5f80600354118015610a4357505f600454115b610a82576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7990612174565b60405180910390fd5b600354670de0b6b3a7640000600454610a9b9190611ff9565b610aa59190612067565b905090565b5f8060055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610b16573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b3a9190611edf565b5050509150505f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610bab573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bcf9190611edf565b50505091505080670de0b6b3a764000083610bea9190611ff9565b610bf49190612067565b9250505090565b5f805f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b8152600401610c589190611c00565b602060405180830381865afa158015610c73573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c979190612097565b905060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16819250925050915091565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480610d6b575060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610daa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da190611e44565b60405180910390fd5b5f610dd35f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661031e565b90505f610e0060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661031e565b90505f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161490505f81610e7f575f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610ea2565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165b90505f82610eb05783610eb2565b845b90505f81670de0b6b3a764000089610eca9190611ff9565b610ed49190612067565b90505f610ee18289611079565b90508773ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610f2093929190612192565b6020604051808303815f875af1158015610f3c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f6091906121fc565b508373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610f9c929190611d85565b6020604051808303815f875af1158015610fb8573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610fdc91906121fc565b508415611018578160035f828254610ff49190612227565b925050819055508060045f82825461100c919061225a565b92505081905550611049565b8160045f8282546110299190612227565b925050819055508060035f828254611041919061225a565b925050819055505b505050505050505050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161480611120575060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b61115f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115690611e44565b60405180910390fd5b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161490505f816111bf576004546111c3565b6003545b90505f826111d3576003546111d7565b6004545b90505f6103e86103e5886111eb9190611ff9565b6111f59190612067565b905080836112039190612227565b828261120f9190611ff9565b6112199190612067565b94505050505092915050565b5f8183106112335781611235565b825b905092915050565b5f811161127f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611276906122d7565b60405180910390fd5b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112ea573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061130e9190612097565b6003548361131c9190611ff9565b6113269190612067565b90505f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611393573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113b79190612097565b600454846113c59190611ff9565b6113cf9190612067565b90505f821180156113df57505f81115b61141e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114159061233f565b60405180910390fd5b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639dc29fac33856040518363ffffffff1660e01b815260040161147a929190611d85565b5f604051808303815f87803b158015611491575f80fd5b505af11580156114a3573d5f803e3d5ffd5b505050505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401611501929190611d85565b6020604051808303815f875af115801561151d573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061154191906121fc565b5060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161159e929190611d85565b6020604051808303815f875af11580156115ba573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115de91906121fc565b508160035f8282546115f0919061225a565b925050819055508060045f828254611608919061225a565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f04f7e4f53152cb2cd0e424b2fc990199f0ed4255c7a97a848131f1eeff165f7b83838660035460045460405161166195949392919061235d565b60405180910390a2505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016116ca93929190612192565b6020604051808303815f875af11580156116e6573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061170a91906121fc565b5060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161176993929190612192565b6020604051808303815f875af1158015611785573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906117a991906121fc565b505f8060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611816573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061183a9190612097565b0361185a57611853828461184e9190611ff9565b611b0b565b90506119b1565b6119ae60035460025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156118ca573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118ee9190612097565b856118f99190611ff9565b6119039190612067565b60045460025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611970573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119949190612097565b8561199f9190611ff9565b6119a99190612067565b611225565b90505b5f81116119f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119ea906123f8565b60405180910390fd5b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b8152600401611a4f929190611d85565b5f604051808303815f87803b158015611a66575f80fd5b505af1158015611a78573d5f803e3d5ffd5b505050508260035f828254611a8d9190612227565b925050819055508160045f828254611aa59190612227565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f0103e5727ee41ce8741fbdf27e5e596deb21dbe5ae93901499306d10f28d1ef7848484600354600454604051611afe95949392919061235d565b60405180910390a2505050565b5f6003821115611b70578190505f6001600284611b289190612067565b611b329190612227565b90505b81811015611b6a578091506002818285611b4f9190612067565b611b599190612227565b611b639190612067565b9050611b35565b50611b7d565b5f8214611b7c57600190505b5b919050565b5f819050919050565b611b9481611b82565b82525050565b5f604082019050611bad5f830185611b8b565b611bba6020830184611b8b565b9392505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611bea82611bc1565b9050919050565b611bfa81611be0565b82525050565b5f602082019050611c135f830184611bf1565b92915050565b5f80fd5b611c2681611be0565b8114611c30575f80fd5b50565b5f81359050611c4181611c1d565b92915050565b5f60208284031215611c5c57611c5b611c19565b5b5f611c6984828501611c33565b91505092915050565b5f819050919050565b611c8481611c72565b82525050565b5f602082019050611c9d5f830184611c7b565b92915050565b5f602082019050611cb65f830184611b8b565b92915050565b611cc581611b82565b8114611ccf575f80fd5b50565b5f81359050611ce081611cbc565b92915050565b5f60208284031215611cfb57611cfa611c19565b5b5f611d0884828501611cd2565b91505092915050565b5f819050919050565b5f611d34611d2f611d2a84611bc1565b611d11565b611bc1565b9050919050565b5f611d4582611d1a565b9050919050565b5f611d5682611d3b565b9050919050565b611d6681611d4c565b82525050565b5f602082019050611d7f5f830184611d5d565b92915050565b5f604082019050611d985f830185611bf1565b611da56020830184611b8b565b9392505050565b5f8060408385031215611dc257611dc1611c19565b5b5f611dcf85828601611cd2565b9250506020611de085828601611c33565b9150509250929050565b5f82825260208201905092915050565b7f496e76616c696420696e70757420746f6b656e000000000000000000000000005f82015250565b5f611e2e601383611dea565b9150611e3982611dfa565b602082019050919050565b5f6020820190508181035f830152611e5b81611e22565b9050919050565b5f69ffffffffffffffffffff82169050919050565b611e8081611e62565b8114611e8a575f80fd5b50565b5f81519050611e9b81611e77565b92915050565b611eaa81611c72565b8114611eb4575f80fd5b50565b5f81519050611ec581611ea1565b92915050565b5f81519050611ed981611cbc565b92915050565b5f805f805f60a08688031215611ef857611ef7611c19565b5b5f611f0588828901611e8d565b9550506020611f1688828901611eb7565b9450506040611f2788828901611ecb565b9350506060611f3888828901611ecb565b9250506080611f4988828901611e8d565b9150509295509295909350565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611f8d82611c72565b9150611f9883611c72565b9250828202611fa681611c72565b91507f800000000000000000000000000000000000000000000000000000000000000084145f84121615611fdd57611fdc611f56565b5b8282058414831517611ff257611ff1611f56565b5b5092915050565b5f61200382611b82565b915061200e83611b82565b925082820261201c81611b82565b9150828204841483151761203357612032611f56565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61207182611b82565b915061207c83611b82565b92508261208c5761208b61203a565b5b828204905092915050565b5f602082840312156120ac576120ab611c19565b5b5f6120b984828501611ecb565b91505092915050565b5f6120cc82611c72565b91506120d783611c72565b9250826120e7576120e661203a565b5b60015f0383147f80000000000000000000000000000000000000000000000000000000000000008314161561211f5761211e611f56565b5b828205905092915050565b7f526573657276657320617265206e6f74207365740000000000000000000000005f82015250565b5f61215e601483611dea565b91506121698261212a565b602082019050919050565b5f6020820190508181035f83015261218b81612152565b9050919050565b5f6060820190506121a55f830186611bf1565b6121b26020830185611bf1565b6121bf6040830184611b8b565b949350505050565b5f8115159050919050565b6121db816121c7565b81146121e5575f80fd5b50565b5f815190506121f6816121d2565b92915050565b5f6020828403121561221157612210611c19565b5b5f61221e848285016121e8565b91505092915050565b5f61223182611b82565b915061223c83611b82565b925082820190508082111561225457612253611f56565b5b92915050565b5f61226482611b82565b915061226f83611b82565b925082820390508181111561228757612286611f56565b5b92915050565b7f496e73756666696369656e74206c6971756964697479000000000000000000005f82015250565b5f6122c1601683611dea565b91506122cc8261228d565b602082019050919050565b5f6020820190508181035f8301526122ee816122b5565b9050919050565b7f496e73756666696369656e74206c69717569646974792072656d6f76656400005f82015250565b5f612329601e83611dea565b9150612334826122f5565b602082019050919050565b5f6020820190508181035f8301526123568161231d565b9050919050565b5f60a0820190506123705f830188611b8b565b61237d6020830187611b8b565b61238a6040830186611b8b565b6123976060830185611b8b565b6123a46080830184611b8b565b9695505050505050565b7f496e73756666696369656e74206c69717569646974792070726f7669646564005f82015250565b5f6123e2601f83611dea565b91506123ed826123ae565b602082019050919050565b5f6020820190508181035f83015261240f816123d6565b905091905056fea264697066735822122037286150b3f20ff346ca5f29aefc1ebd02c24bc8a77673463ed48ad45eddef4b64736f6c63430008140033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x26C3 CODESIZE SUB DUP1 PUSH3 0x26C3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x1E5 JUMP JUMPDEST DUP5 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP PUSH3 0x269 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x1AF DUP3 PUSH3 0x184 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1C1 DUP2 PUSH3 0x1A3 JUMP JUMPDEST DUP2 EQ PUSH3 0x1CC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x1DF DUP2 PUSH3 0x1B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x201 JUMPI PUSH3 0x200 PUSH3 0x180 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x210 DUP9 DUP3 DUP10 ADD PUSH3 0x1CF JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH3 0x223 DUP9 DUP3 DUP10 ADD PUSH3 0x1CF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH3 0x236 DUP9 DUP3 DUP10 ADD PUSH3 0x1CF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH3 0x249 DUP9 DUP3 DUP10 ADD PUSH3 0x1CF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH3 0x25C DUP9 DUP3 DUP10 ADD PUSH3 0x1CF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x244C DUP1 PUSH3 0x277 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5FCBD285 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xBFF46A4C GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xBFF46A4C EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xD0E7E07E EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0xF140A35A EQ PUSH2 0x2BB JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x5FCBD285 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x64E7B85A EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x729132F9 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0xA996944C EQ PUSH2 0x232 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x443CB4BC GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x443CB4BC EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x5444A39D EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x54B2A769 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x5A76F25E EQ PUSH2 0x1BC JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x902F1AC EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x41976E09 EQ PUSH2 0x134 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFF PUSH2 0x2EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10D SWAP3 SWAP2 SWAP1 PUSH2 0x1B9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11E PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x1C00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x1C47 JUMP JUMPDEST PUSH2 0x31E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15B SWAP2 SWAP1 PUSH2 0x1C8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH2 0x5B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x1CE6 JUMP JUMPDEST PUSH2 0x5B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A6 PUSH2 0x7D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x1C8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH2 0x940 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E2 PUSH2 0x946 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0x1D6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x212 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x1CE6 JUMP JUMPDEST PUSH2 0x96B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21C PUSH2 0xA30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23A PUSH2 0xAAA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x1C47 JUMP JUMPDEST PUSH2 0xBFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP3 SWAP2 SWAP1 PUSH2 0x1D85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x1DAC JUMP JUMPDEST PUSH2 0xCC6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A5 PUSH2 0x1054 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x1C00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x1DAC JUMP JUMPDEST PUSH2 0x1079 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x3C5 JUMPI POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x404 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FB SWAP1 PUSH2 0x1E44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4FA JUMPI PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4C2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4E6 SWAP2 SWAP1 PUSH2 0x1EDF JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP SWAP1 SWAP2 POP SWAP1 POP POP DUP1 SWAP2 POP POP PUSH2 0x598 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x564 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x588 SWAP2 SWAP1 PUSH2 0x1EDF JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP SWAP1 SWAP2 POP SWAP1 POP POP DUP1 SWAP2 POP POP JUMPDEST PUSH5 0x2540BE400 DUP2 PUSH2 0x5A9 SWAP2 SWAP1 PUSH2 0x1F83 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x5E0 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x31E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x60D PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x31E JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0x2 PUSH2 0x61D SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x631 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x63B SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0x2 PUSH2 0x64B SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x65F SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x669 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x7C0 PUSH1 0x3 SLOAD PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6DC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x700 SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST DUP6 PUSH2 0x70B SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x715 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x782 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7A6 SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST DUP6 PUSH2 0x7B1 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x7BB SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST PUSH2 0x1225 JUMP JUMPDEST SWAP1 POP PUSH2 0x7CB DUP2 PUSH2 0x123D JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x83F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x863 SWAP2 SWAP1 PUSH2 0x1EDF JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8D4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8F8 SWAP2 SWAP1 PUSH2 0x1EDF JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH5 0x2540BE400 DUP2 PUSH2 0x90F SWAP2 SWAP1 PUSH2 0x1F83 JUMP JUMPDEST PUSH4 0x5F5E100 PUSH5 0x2540BE400 DUP5 PUSH2 0x925 SWAP2 SWAP1 PUSH2 0x1F83 JUMP JUMPDEST PUSH2 0x92F SWAP2 SWAP1 PUSH2 0x1F83 JUMP JUMPDEST PUSH2 0x939 SWAP2 SWAP1 PUSH2 0x20C2 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x994 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x31E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x9C1 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x31E JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0x2 PUSH2 0x9D1 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x9E5 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x9EF SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0x2 PUSH2 0x9FF SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0xA13 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0xA1D SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP PUSH2 0xA29 DUP3 DUP3 PUSH2 0x166E JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x3 SLOAD GT DUP1 ISZERO PUSH2 0xA43 JUMPI POP PUSH0 PUSH1 0x4 SLOAD GT JUMPDEST PUSH2 0xA82 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA79 SWAP1 PUSH2 0x2174 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0x4 SLOAD PUSH2 0xA9B SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0xAA5 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB16 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB3A SWAP2 SWAP1 PUSH2 0x1EDF JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBAB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBCF SWAP2 SWAP1 PUSH2 0x1EDF JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0xBEA SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0xBF4 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC58 SWAP2 SWAP1 PUSH2 0x1C00 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC73 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC97 SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xD6B JUMPI POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xDAA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDA1 SWAP1 PUSH2 0x1E44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xDD3 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x31E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xE00 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x31E JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP PUSH0 DUP2 PUSH2 0xE7F JUMPI PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH2 0xEB0 JUMPI DUP4 PUSH2 0xEB2 JUMP JUMPDEST DUP5 JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH8 0xDE0B6B3A7640000 DUP10 PUSH2 0xECA SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0xED4 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xEE1 DUP3 DUP10 PUSH2 0x1079 JUMP JUMPDEST SWAP1 POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF20 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2192 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF3C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF60 SWAP2 SWAP1 PUSH2 0x21FC JUMP JUMPDEST POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9C SWAP3 SWAP2 SWAP1 PUSH2 0x1D85 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFB8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFDC SWAP2 SWAP1 PUSH2 0x21FC JUMP JUMPDEST POP DUP5 ISZERO PUSH2 0x1018 JUMPI DUP2 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xFF4 SWAP2 SWAP1 PUSH2 0x2227 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x100C SWAP2 SWAP1 PUSH2 0x225A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1049 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1029 SWAP2 SWAP1 PUSH2 0x2227 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1041 SWAP2 SWAP1 PUSH2 0x225A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1120 JUMPI POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x115F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1156 SWAP1 PUSH2 0x1E44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP PUSH0 DUP2 PUSH2 0x11BF JUMPI PUSH1 0x4 SLOAD PUSH2 0x11C3 JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH2 0x11D3 JUMPI PUSH1 0x3 SLOAD PUSH2 0x11D7 JUMP JUMPDEST PUSH1 0x4 SLOAD JUMPDEST SWAP1 POP PUSH0 PUSH2 0x3E8 PUSH2 0x3E5 DUP9 PUSH2 0x11EB SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x11F5 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH2 0x1203 SWAP2 SWAP1 PUSH2 0x2227 JUMP JUMPDEST DUP3 DUP3 PUSH2 0x120F SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x1219 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 LT PUSH2 0x1233 JUMPI DUP2 PUSH2 0x1235 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x127F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1276 SWAP1 PUSH2 0x22D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12EA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x130E SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP4 PUSH2 0x131C SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x1326 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1393 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13B7 SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP5 PUSH2 0x13C5 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x13CF SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0x13DF JUMPI POP PUSH0 DUP2 GT JUMPDEST PUSH2 0x141E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1415 SWAP1 PUSH2 0x233F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9DC29FAC CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x147A SWAP3 SWAP2 SWAP1 PUSH2 0x1D85 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1491 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14A3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1501 SWAP3 SWAP2 SWAP1 PUSH2 0x1D85 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x151D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1541 SWAP2 SWAP1 PUSH2 0x21FC JUMP JUMPDEST POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x159E SWAP3 SWAP2 SWAP1 PUSH2 0x1D85 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15BA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15DE SWAP2 SWAP1 PUSH2 0x21FC JUMP JUMPDEST POP DUP2 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x15F0 SWAP2 SWAP1 PUSH2 0x225A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1608 SWAP2 SWAP1 PUSH2 0x225A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4F7E4F53152CB2CD0E424B2FC990199F0ED4255C7A97A848131F1EEFF165F7B DUP4 DUP4 DUP7 PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH2 0x1661 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x235D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16CA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2192 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16E6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x170A SWAP2 SWAP1 PUSH2 0x21FC JUMP JUMPDEST POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1769 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2192 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1785 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17A9 SWAP2 SWAP1 PUSH2 0x21FC JUMP JUMPDEST POP PUSH0 DUP1 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1816 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x183A SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST SUB PUSH2 0x185A JUMPI PUSH2 0x1853 DUP3 DUP5 PUSH2 0x184E SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x1B0B JUMP JUMPDEST SWAP1 POP PUSH2 0x19B1 JUMP JUMPDEST PUSH2 0x19AE PUSH1 0x3 SLOAD PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18CA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18EE SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST DUP6 PUSH2 0x18F9 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x1903 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1970 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1994 SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST DUP6 PUSH2 0x199F SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x19A9 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST PUSH2 0x1225 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH0 DUP2 GT PUSH2 0x19F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19EA SWAP1 PUSH2 0x23F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A4F SWAP3 SWAP2 SWAP1 PUSH2 0x1D85 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A66 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A78 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP3 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1A8D SWAP2 SWAP1 PUSH2 0x2227 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1AA5 SWAP2 SWAP1 PUSH2 0x2227 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x103E5727EE41CE8741FBDF27E5E596DEB21DBE5AE93901499306D10F28D1EF7 DUP5 DUP5 DUP5 PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH2 0x1AFE SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x235D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x1B70 JUMPI DUP2 SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x2 DUP5 PUSH2 0x1B28 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST PUSH2 0x1B32 SWAP2 SWAP1 PUSH2 0x2227 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B6A JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 PUSH2 0x1B4F SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST PUSH2 0x1B59 SWAP2 SWAP1 PUSH2 0x2227 JUMP JUMPDEST PUSH2 0x1B63 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B35 JUMP JUMPDEST POP PUSH2 0x1B7D JUMP JUMPDEST PUSH0 DUP3 EQ PUSH2 0x1B7C JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B94 DUP2 PUSH2 0x1B82 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1BAD PUSH0 DUP4 ADD DUP6 PUSH2 0x1B8B JUMP JUMPDEST PUSH2 0x1BBA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B8B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1BEA DUP3 PUSH2 0x1BC1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BFA DUP2 PUSH2 0x1BE0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C13 PUSH0 DUP4 ADD DUP5 PUSH2 0x1BF1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1C26 DUP2 PUSH2 0x1BE0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C30 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C41 DUP2 PUSH2 0x1C1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C5C JUMPI PUSH2 0x1C5B PUSH2 0x1C19 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C69 DUP5 DUP3 DUP6 ADD PUSH2 0x1C33 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C84 DUP2 PUSH2 0x1C72 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C9D PUSH0 DUP4 ADD DUP5 PUSH2 0x1C7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CB6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B8B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CC5 DUP2 PUSH2 0x1B82 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CCF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CE0 DUP2 PUSH2 0x1CBC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CFB JUMPI PUSH2 0x1CFA PUSH2 0x1C19 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D08 DUP5 DUP3 DUP6 ADD PUSH2 0x1CD2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D34 PUSH2 0x1D2F PUSH2 0x1D2A DUP5 PUSH2 0x1BC1 JUMP JUMPDEST PUSH2 0x1D11 JUMP JUMPDEST PUSH2 0x1BC1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D45 DUP3 PUSH2 0x1D1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D56 DUP3 PUSH2 0x1D3B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D66 DUP2 PUSH2 0x1D4C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D7F PUSH0 DUP4 ADD DUP5 PUSH2 0x1D5D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D98 PUSH0 DUP4 ADD DUP6 PUSH2 0x1BF1 JUMP JUMPDEST PUSH2 0x1DA5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B8B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DC2 JUMPI PUSH2 0x1DC1 PUSH2 0x1C19 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DCF DUP6 DUP3 DUP7 ADD PUSH2 0x1CD2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DE0 DUP6 DUP3 DUP7 ADD PUSH2 0x1C33 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420696E70757420746F6B656E00000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E2E PUSH1 0x13 DUP4 PUSH2 0x1DEA JUMP JUMPDEST SWAP2 POP PUSH2 0x1E39 DUP3 PUSH2 0x1DFA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E5B DUP2 PUSH2 0x1E22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E80 DUP2 PUSH2 0x1E62 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E8A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E9B DUP2 PUSH2 0x1E77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EAA DUP2 PUSH2 0x1C72 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EB4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1EC5 DUP2 PUSH2 0x1EA1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1ED9 DUP2 PUSH2 0x1CBC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1EF8 JUMPI PUSH2 0x1EF7 PUSH2 0x1C19 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F05 DUP9 DUP3 DUP10 ADD PUSH2 0x1E8D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1F16 DUP9 DUP3 DUP10 ADD PUSH2 0x1EB7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1F27 DUP9 DUP3 DUP10 ADD PUSH2 0x1ECB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1F38 DUP9 DUP3 DUP10 ADD PUSH2 0x1ECB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x1F49 DUP9 DUP3 DUP10 ADD PUSH2 0x1E8D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1F8D DUP3 PUSH2 0x1C72 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F98 DUP4 PUSH2 0x1C72 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1FA6 DUP2 PUSH2 0x1C72 JUMP JUMPDEST SWAP2 POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP5 EQ PUSH0 DUP5 SLT AND ISZERO PUSH2 0x1FDD JUMPI PUSH2 0x1FDC PUSH2 0x1F56 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1FF2 JUMPI PUSH2 0x1FF1 PUSH2 0x1F56 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2003 DUP3 PUSH2 0x1B82 JUMP JUMPDEST SWAP2 POP PUSH2 0x200E DUP4 PUSH2 0x1B82 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x201C DUP2 PUSH2 0x1B82 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2033 JUMPI PUSH2 0x2032 PUSH2 0x1F56 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2071 DUP3 PUSH2 0x1B82 JUMP JUMPDEST SWAP2 POP PUSH2 0x207C DUP4 PUSH2 0x1B82 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x208C JUMPI PUSH2 0x208B PUSH2 0x203A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20AC JUMPI PUSH2 0x20AB PUSH2 0x1C19 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20B9 DUP5 DUP3 DUP6 ADD PUSH2 0x1ECB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20CC DUP3 PUSH2 0x1C72 JUMP JUMPDEST SWAP2 POP PUSH2 0x20D7 DUP4 PUSH2 0x1C72 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x20E7 JUMPI PUSH2 0x20E6 PUSH2 0x203A JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH0 SUB DUP4 EQ PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP4 EQ AND ISZERO PUSH2 0x211F JUMPI PUSH2 0x211E PUSH2 0x1F56 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x526573657276657320617265206E6F7420736574000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x215E PUSH1 0x14 DUP4 PUSH2 0x1DEA JUMP JUMPDEST SWAP2 POP PUSH2 0x2169 DUP3 PUSH2 0x212A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x218B DUP2 PUSH2 0x2152 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x21A5 PUSH0 DUP4 ADD DUP7 PUSH2 0x1BF1 JUMP JUMPDEST PUSH2 0x21B2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1BF1 JUMP JUMPDEST PUSH2 0x21BF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B8B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21DB DUP2 PUSH2 0x21C7 JUMP JUMPDEST DUP2 EQ PUSH2 0x21E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x21F6 DUP2 PUSH2 0x21D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2211 JUMPI PUSH2 0x2210 PUSH2 0x1C19 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x221E DUP5 DUP3 DUP6 ADD PUSH2 0x21E8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2231 DUP3 PUSH2 0x1B82 JUMP JUMPDEST SWAP2 POP PUSH2 0x223C DUP4 PUSH2 0x1B82 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2254 JUMPI PUSH2 0x2253 PUSH2 0x1F56 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2264 DUP3 PUSH2 0x1B82 JUMP JUMPDEST SWAP2 POP PUSH2 0x226F DUP4 PUSH2 0x1B82 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2287 JUMPI PUSH2 0x2286 PUSH2 0x1F56 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206C697175696469747900000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22C1 PUSH1 0x16 DUP4 PUSH2 0x1DEA JUMP JUMPDEST SWAP2 POP PUSH2 0x22CC DUP3 PUSH2 0x228D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22EE DUP2 PUSH2 0x22B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206C69717569646974792072656D6F7665640000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2329 PUSH1 0x1E DUP4 PUSH2 0x1DEA JUMP JUMPDEST SWAP2 POP PUSH2 0x2334 DUP3 PUSH2 0x22F5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2356 DUP2 PUSH2 0x231D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2370 PUSH0 DUP4 ADD DUP9 PUSH2 0x1B8B JUMP JUMPDEST PUSH2 0x237D PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1B8B JUMP JUMPDEST PUSH2 0x238A PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1B8B JUMP JUMPDEST PUSH2 0x2397 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1B8B JUMP JUMPDEST PUSH2 0x23A4 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1B8B JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206C69717569646974792070726F766964656400 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23E2 PUSH1 0x1F DUP4 PUSH2 0x1DEA JUMP JUMPDEST SWAP2 POP PUSH2 0x23ED DUP3 PUSH2 0x23AE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x240F DUP2 PUSH2 0x23D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY 0x28 PUSH2 0x50B3 CALLCODE 0xF RETURN CHAINID 0xCA PUSH0 0x29 0xAE 0xFC 0x1E 0xBD MUL 0xC2 0x4B 0xC8 0xA7 PUSH23 0x73463ED48AD45EDDEF4B64736F6C634300081400330000 ",
			"sourceMap": "252:11024:7:-:0;;;1455:474;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1733:7;1724:6;;:16;;;;;;;;;;;;;;;;;;1760:7;1751:6;;:16;;;;;;;;;;;;;;;;;;1813:11;1778:10;;:47;;;;;;;;;;;;;;;;;;1871:11;1836:10;;:47;;;;;;;;;;;;;;;;;;1912:8;1894:7;;:27;;;;;;;;;;;;;;;;;;1455:474;;;;;252:11024;;88:117:8;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:977::-;951:6;959;967;975;983;1032:3;1020:9;1011:7;1007:23;1003:33;1000:120;;;1039:79;;:::i;:::-;1000:120;1159:1;1184:64;1240:7;1231:6;1220:9;1216:22;1184:64;:::i;:::-;1174:74;;1130:128;1297:2;1323:64;1379:7;1370:6;1359:9;1355:22;1323:64;:::i;:::-;1313:74;;1268:129;1436:2;1462:64;1518:7;1509:6;1498:9;1494:22;1462:64;:::i;:::-;1452:74;;1407:129;1575:2;1601:64;1657:7;1648:6;1637:9;1633:22;1601:64;:::i;:::-;1591:74;;1546:129;1714:3;1741:64;1797:7;1788:6;1777:9;1773:22;1741:64;:::i;:::-;1731:74;;1685:130;845:977;;;;;;;;:::o;252:11024:7:-;;;;;;;"
		},
		"deployedBytecode": {
			"functionDebugData": {
				"@addLiquidityInUSD_1130": {
					"entryPoint": 2411,
					"id": 1130,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"@addLiquidity_1072": {
					"entryPoint": 5742,
					"id": 1072,
					"parameterSlots": 2,
					"returnSlots": 0
				},
				"@getAmountOut_1456": {
					"entryPoint": 4217,
					"id": 1456,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"@getDAIperLinkMarketPrice_1636": {
					"entryPoint": 2730,
					"id": 1636,
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"@getDAIperLinkOurDEXPrice_1602": {
					"entryPoint": 2608,
					"id": 1602,
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"@getLPTokenDetails_1736": {
					"entryPoint": 3067,
					"id": 1736,
					"parameterSlots": 1,
					"returnSlots": 2
				},
				"@getPriceRatio_1395": {
					"entryPoint": 2003,
					"id": 1395,
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"@getPrice_1357": {
					"entryPoint": 798,
					"id": 1357,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"@getReserves_1308": {
					"entryPoint": 747,
					"id": 1308,
					"parameterSlots": 0,
					"returnSlots": 2
				},
				"@lpToken_887": {
					"entryPoint": 2374,
					"id": 887,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@min_1711": {
					"entryPoint": 4645,
					"id": 1711,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"@removeLiquidityInUSD_1295": {
					"entryPoint": 1463,
					"id": 1295,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"@removeLiquidity_1219": {
					"entryPoint": 4669,
					"id": 1219,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"@reserve0_889": {
					"entryPoint": 1457,
					"id": 889,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@reserve1_891": {
					"entryPoint": 2368,
					"id": 891,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@sqrt_1691": {
					"entryPoint": 6923,
					"id": 1691,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"@swapInUSD_1575": {
					"entryPoint": 3270,
					"id": 1575,
					"parameterSlots": 2,
					"returnSlots": 0
				},
				"@token0_882": {
					"entryPoint": 763,
					"id": 882,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@token1_884": {
					"entryPoint": 4180,
					"id": 884,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"abi_decode_t_address": {
					"entryPoint": 7219,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_t_bool_fromMemory": {
					"entryPoint": 8680,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_t_int256_fromMemory": {
					"entryPoint": 7863,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_t_uint256": {
					"entryPoint": 7378,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_t_uint256_fromMemory": {
					"entryPoint": 7883,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_t_uint80_fromMemory": {
					"entryPoint": 7821,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_address": {
					"entryPoint": 7239,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_bool_fromMemory": {
					"entryPoint": 8700,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_uint256": {
					"entryPoint": 7398,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_uint256_fromMemory": {
					"entryPoint": 8343,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_uint256t_address": {
					"entryPoint": 7596,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 2
				},
				"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
					"entryPoint": 7903,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 5
				},
				"abi_encode_t_address_to_t_address_fromStack": {
					"entryPoint": 7153,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 0
				},
				"abi_encode_t_contract$_LPToken_$875_to_t_address_fromStack": {
					"entryPoint": 7517,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 0
				},
				"abi_encode_t_int256_to_t_int256_fromStack": {
					"entryPoint": 7291,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 0
				},
				"abi_encode_t_stringliteral_20ad566edbd5d53cb1cde2112f5439aeea9b1d035ff04f86720a4c46f6412c00_to_t_string_memory_ptr_fromStack": {
					"entryPoint": 9174,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"abi_encode_t_stringliteral_27d5f3f66243758e6691dcd57e9bf312a7560459ee4acdda4b073260b5a54fc4_to_t_string_memory_ptr_fromStack": {
					"entryPoint": 8989,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"abi_encode_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad_to_t_string_memory_ptr_fromStack": {
					"entryPoint": 8885,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"abi_encode_t_stringliteral_8383d29ebbe792827fefa7997bfaff9ad7589c06cb05191eef1178dddc2412a2_to_t_string_memory_ptr_fromStack": {
					"entryPoint": 8530,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"abi_encode_t_stringliteral_84f0c120f9c89279530f293487f2886c10a3854abff7bba8786124cc26b0c21a_to_t_string_memory_ptr_fromStack": {
					"entryPoint": 7714,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"abi_encode_t_uint256_to_t_uint256_fromStack": {
					"entryPoint": 7051,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 0
				},
				"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
					"entryPoint": 7168,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
					"entryPoint": 8594,
					"id": null,
					"parameterSlots": 4,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
					"entryPoint": 7557,
					"id": null,
					"parameterSlots": 3,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_contract$_LPToken_$875__to_t_address__fromStack_reversed": {
					"entryPoint": 7532,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed": {
					"entryPoint": 7306,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_stringliteral_20ad566edbd5d53cb1cde2112f5439aeea9b1d035ff04f86720a4c46f6412c00__to_t_string_memory_ptr__fromStack_reversed": {
					"entryPoint": 9208,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_stringliteral_27d5f3f66243758e6691dcd57e9bf312a7560459ee4acdda4b073260b5a54fc4__to_t_string_memory_ptr__fromStack_reversed": {
					"entryPoint": 9023,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad__to_t_string_memory_ptr__fromStack_reversed": {
					"entryPoint": 8919,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_stringliteral_8383d29ebbe792827fefa7997bfaff9ad7589c06cb05191eef1178dddc2412a2__to_t_string_memory_ptr__fromStack_reversed": {
					"entryPoint": 8564,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_stringliteral_84f0c120f9c89279530f293487f2886c10a3854abff7bba8786124cc26b0c21a__to_t_string_memory_ptr__fromStack_reversed": {
					"entryPoint": 7748,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
					"entryPoint": 7331,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
					"entryPoint": 7066,
					"id": null,
					"parameterSlots": 3,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
					"entryPoint": 9053,
					"id": null,
					"parameterSlots": 6,
					"returnSlots": 1
				},
				"allocate_unbounded": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
					"entryPoint": 7658,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"checked_add_t_uint256": {
					"entryPoint": 8743,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"checked_div_t_int256": {
					"entryPoint": 8386,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"checked_div_t_uint256": {
					"entryPoint": 8295,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"checked_mul_t_int256": {
					"entryPoint": 8067,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"checked_mul_t_uint256": {
					"entryPoint": 8185,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"checked_sub_t_uint256": {
					"entryPoint": 8794,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"cleanup_t_address": {
					"entryPoint": 7136,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_bool": {
					"entryPoint": 8647,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_int256": {
					"entryPoint": 7282,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_uint160": {
					"entryPoint": 7105,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_uint256": {
					"entryPoint": 7042,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_uint80": {
					"entryPoint": 7778,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"convert_t_contract$_LPToken_$875_to_t_address": {
					"entryPoint": 7500,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"convert_t_uint160_to_t_address": {
					"entryPoint": 7483,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"convert_t_uint160_to_t_uint160": {
					"entryPoint": 7450,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"identity": {
					"entryPoint": 7441,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"panic_error_0x11": {
					"entryPoint": 8022,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"panic_error_0x12": {
					"entryPoint": 8250,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
					"entryPoint": 7193,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"store_literal_in_memory_20ad566edbd5d53cb1cde2112f5439aeea9b1d035ff04f86720a4c46f6412c00": {
					"entryPoint": 9134,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"store_literal_in_memory_27d5f3f66243758e6691dcd57e9bf312a7560459ee4acdda4b073260b5a54fc4": {
					"entryPoint": 8949,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"store_literal_in_memory_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad": {
					"entryPoint": 8845,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"store_literal_in_memory_8383d29ebbe792827fefa7997bfaff9ad7589c06cb05191eef1178dddc2412a2": {
					"entryPoint": 8490,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"store_literal_in_memory_84f0c120f9c89279530f293487f2886c10a3854abff7bba8786124cc26b0c21a": {
					"entryPoint": 7674,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"validator_revert_t_address": {
					"entryPoint": 7197,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"validator_revert_t_bool": {
					"entryPoint": 8658,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"validator_revert_t_int256": {
					"entryPoint": 7841,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"validator_revert_t_uint256": {
					"entryPoint": 7356,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"validator_revert_t_uint80": {
					"entryPoint": 7799,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 0
				}
			},
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:16430:8",
						"statements": [
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "52:32:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "62:16:8",
											"value": {
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "73:5:8"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "62:7:8"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "34:5:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "44:7:8",
										"type": ""
									}
								],
								"src": "7:77:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "155:53:8",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "172:3:8"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "195:5:8"
															}
														],
														"functionName": {
															"name": "cleanup_t_uint256",
															"nodeType": "YulIdentifier",
															"src": "177:17:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "177:24:8"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "165:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "165:37:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "165:37:8"
										}
									]
								},
								"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "143:5:8",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "150:3:8",
										"type": ""
									}
								],
								"src": "90:118:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "340:206:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "350:26:8",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "362:9:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "373:2:8",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "358:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "358:18:8"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "350:4:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "430:6:8"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "443:9:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "454:1:8",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "439:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "439:17:8"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
													"nodeType": "YulIdentifier",
													"src": "386:43:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "386:71:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "386:71:8"
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value1",
														"nodeType": "YulIdentifier",
														"src": "511:6:8"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "524:9:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "535:2:8",
																"type": "",
																"value": "32"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "520:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "520:18:8"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
													"nodeType": "YulIdentifier",
													"src": "467:43:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "467:72:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "467:72:8"
										}
									]
								},
								"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "304:9:8",
										"type": ""
									},
									{
										"name": "value1",
										"nodeType": "YulTypedName",
										"src": "316:6:8",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "324:6:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "335:4:8",
										"type": ""
									}
								],
								"src": "214:332:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "597:81:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "607:65:8",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "622:5:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "629:42:8",
														"type": "",
														"value": "0xffffffffffffffffffffffffffffffffffffffff"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "618:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "618:54:8"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "607:7:8"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint160",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "579:5:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "589:7:8",
										"type": ""
									}
								],
								"src": "552:126:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "729:51:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "739:35:8",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "768:5:8"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint160",
													"nodeType": "YulIdentifier",
													"src": "750:17:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "750:24:8"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "739:7:8"
												}
											]
										}
									]
								},
								"name": "cleanup_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "711:5:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "721:7:8",
										"type": ""
									}
								],
								"src": "684:96:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "851:53:8",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "868:3:8"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "891:5:8"
															}
														],
														"functionName": {
															"name": "cleanup_t_address",
															"nodeType": "YulIdentifier",
															"src": "873:17:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "873:24:8"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "861:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "861:37:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "861:37:8"
										}
									]
								},
								"name": "abi_encode_t_address_to_t_address_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "839:5:8",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "846:3:8",
										"type": ""
									}
								],
								"src": "786:118:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1008:124:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1018:26:8",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1030:9:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1041:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1026:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "1026:18:8"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "1018:4:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "1098:6:8"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1111:9:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1122:1:8",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1107:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "1107:17:8"
													}
												],
												"functionName": {
													"name": "abi_encode_t_address_to_t_address_fromStack",
													"nodeType": "YulIdentifier",
													"src": "1054:43:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "1054:71:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1054:71:8"
										}
									]
								},
								"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "980:9:8",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "992:6:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "1003:4:8",
										"type": ""
									}
								],
								"src": "910:222:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1178:35:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1188:19:8",
											"value": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1204:2:8",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "1198:5:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "1198:9:8"
											},
											"variableNames": [
												{
													"name": "memPtr",
													"nodeType": "YulIdentifier",
													"src": "1188:6:8"
												}
											]
										}
									]
								},
								"name": "allocate_unbounded",
								"nodeType": "YulFunctionDefinition",
								"returnVariables": [
									{
										"name": "memPtr",
										"nodeType": "YulTypedName",
										"src": "1171:6:8",
										"type": ""
									}
								],
								"src": "1138:75:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1308:28:8",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1325:1:8",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1328:1:8",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "1318:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "1318:12:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1318:12:8"
										}
									]
								},
								"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
								"nodeType": "YulFunctionDefinition",
								"src": "1219:117:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1431:28:8",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1448:1:8",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1451:1:8",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "1441:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "1441:12:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1441:12:8"
										}
									]
								},
								"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
								"nodeType": "YulFunctionDefinition",
								"src": "1342:117:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1508:79:8",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "1565:16:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "1574:1:8",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "1577:1:8",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "1567:6:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "1567:12:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "1567:12:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1531:5:8"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1556:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1538:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1538:24:8"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "1528:2:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "1528:35:8"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "1521:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "1521:43:8"
											},
											"nodeType": "YulIf",
											"src": "1518:63:8"
										}
									]
								},
								"name": "validator_revert_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1501:5:8",
										"type": ""
									}
								],
								"src": "1465:122:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1645:87:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1655:29:8",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "1677:6:8"
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
													"src": "1664:12:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "1664:20:8"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "1655:5:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "1720:5:8"
													}
												],
												"functionName": {
													"name": "validator_revert_t_address",
													"nodeType": "YulIdentifier",
													"src": "1693:26:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "1693:33:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1693:33:8"
										}
									]
								},
								"name": "abi_decode_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "1623:6:8",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "1631:3:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1639:5:8",
										"type": ""
									}
								],
								"src": "1593:139:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1804:263:8",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "1850:83:8",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																"nodeType": "YulIdentifier",
																"src": "1852:77:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "1852:79:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "1852:79:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "1825:7:8"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1834:9:8"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "1821:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "1821:23:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1846:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "1817:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "1817:32:8"
											},
											"nodeType": "YulIf",
											"src": "1814:119:8"
										},
										{
											"nodeType": "YulBlock",
											"src": "1943:117:8",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "1958:15:8",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1972:1:8",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "1962:6:8",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "1987:63:8",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2022:9:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2033:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2018:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2018:22:8"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "2042:7:8"
															}
														],
														"functionName": {
															"name": "abi_decode_t_address",
															"nodeType": "YulIdentifier",
															"src": "1997:20:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "1997:53:8"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "1987:6:8"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1774:9:8",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "1785:7:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "1797:6:8",
										"type": ""
									}
								],
								"src": "1738:329:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2117:32:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2127:16:8",
											"value": {
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "2138:5:8"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "2127:7:8"
												}
											]
										}
									]
								},
								"name": "cleanup_t_int256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2099:5:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "2109:7:8",
										"type": ""
									}
								],
								"src": "2073:76:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2218:52:8",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "2235:3:8"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2257:5:8"
															}
														],
														"functionName": {
															"name": "cleanup_t_int256",
															"nodeType": "YulIdentifier",
															"src": "2240:16:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "2240:23:8"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "2228:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "2228:36:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2228:36:8"
										}
									]
								},
								"name": "abi_encode_t_int256_to_t_int256_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2206:5:8",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "2213:3:8",
										"type": ""
									}
								],
								"src": "2155:115:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2372:122:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2382:26:8",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "2394:9:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2405:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "2390:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "2390:18:8"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "2382:4:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "2460:6:8"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "2473:9:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2484:1:8",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2469:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "2469:17:8"
													}
												],
												"functionName": {
													"name": "abi_encode_t_int256_to_t_int256_fromStack",
													"nodeType": "YulIdentifier",
													"src": "2418:41:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "2418:69:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2418:69:8"
										}
									]
								},
								"name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "2344:9:8",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "2356:6:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "2367:4:8",
										"type": ""
									}
								],
								"src": "2276:218:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2598:124:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2608:26:8",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "2620:9:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2631:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "2616:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "2616:18:8"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "2608:4:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "2688:6:8"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "2701:9:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2712:1:8",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2697:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "2697:17:8"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
													"nodeType": "YulIdentifier",
													"src": "2644:43:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "2644:71:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2644:71:8"
										}
									]
								},
								"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "2570:9:8",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "2582:6:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "2593:4:8",
										"type": ""
									}
								],
								"src": "2500:222:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2771:79:8",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "2828:16:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "2837:1:8",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "2840:1:8",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "2830:6:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "2830:12:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "2830:12:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2794:5:8"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2819:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2801:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2801:24:8"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "2791:2:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "2791:35:8"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "2784:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "2784:43:8"
											},
											"nodeType": "YulIf",
											"src": "2781:63:8"
										}
									]
								},
								"name": "validator_revert_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2764:5:8",
										"type": ""
									}
								],
								"src": "2728:122:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2908:87:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2918:29:8",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "2940:6:8"
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
													"src": "2927:12:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "2927:20:8"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "2918:5:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "2983:5:8"
													}
												],
												"functionName": {
													"name": "validator_revert_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "2956:26:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "2956:33:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2956:33:8"
										}
									]
								},
								"name": "abi_decode_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "2886:6:8",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "2894:3:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2902:5:8",
										"type": ""
									}
								],
								"src": "2856:139:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3067:263:8",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "3113:83:8",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																"nodeType": "YulIdentifier",
																"src": "3115:77:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "3115:79:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "3115:79:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "3088:7:8"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "3097:9:8"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "3084:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "3084:23:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3109:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "3080:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "3080:32:8"
											},
											"nodeType": "YulIf",
											"src": "3077:119:8"
										},
										{
											"nodeType": "YulBlock",
											"src": "3206:117:8",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "3221:15:8",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3235:1:8",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "3225:6:8",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "3250:63:8",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3285:9:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3296:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3281:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3281:22:8"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "3305:7:8"
															}
														],
														"functionName": {
															"name": "abi_decode_t_uint256",
															"nodeType": "YulIdentifier",
															"src": "3260:20:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "3260:53:8"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "3250:6:8"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "3037:9:8",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "3048:7:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "3060:6:8",
										"type": ""
									}
								],
								"src": "3001:329:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3368:28:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "3378:12:8",
											"value": {
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "3385:5:8"
											},
											"variableNames": [
												{
													"name": "ret",
													"nodeType": "YulIdentifier",
													"src": "3378:3:8"
												}
											]
										}
									]
								},
								"name": "identity",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "3354:5:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "ret",
										"nodeType": "YulTypedName",
										"src": "3364:3:8",
										"type": ""
									}
								],
								"src": "3336:60:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3462:82:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "3472:66:8",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3530:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3512:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3512:24:8"
															}
														],
														"functionName": {
															"name": "identity",
															"nodeType": "YulIdentifier",
															"src": "3503:8:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "3503:34:8"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint160",
													"nodeType": "YulIdentifier",
													"src": "3485:17:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "3485:53:8"
											},
											"variableNames": [
												{
													"name": "converted",
													"nodeType": "YulIdentifier",
													"src": "3472:9:8"
												}
											]
										}
									]
								},
								"name": "convert_t_uint160_to_t_uint160",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "3442:5:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "converted",
										"nodeType": "YulTypedName",
										"src": "3452:9:8",
										"type": ""
									}
								],
								"src": "3402:142:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3610:66:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "3620:50:8",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "3664:5:8"
													}
												],
												"functionName": {
													"name": "convert_t_uint160_to_t_uint160",
													"nodeType": "YulIdentifier",
													"src": "3633:30:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "3633:37:8"
											},
											"variableNames": [
												{
													"name": "converted",
													"nodeType": "YulIdentifier",
													"src": "3620:9:8"
												}
											]
										}
									]
								},
								"name": "convert_t_uint160_to_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "3590:5:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "converted",
										"nodeType": "YulTypedName",
										"src": "3600:9:8",
										"type": ""
									}
								],
								"src": "3550:126:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3757:66:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "3767:50:8",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "3811:5:8"
													}
												],
												"functionName": {
													"name": "convert_t_uint160_to_t_address",
													"nodeType": "YulIdentifier",
													"src": "3780:30:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "3780:37:8"
											},
											"variableNames": [
												{
													"name": "converted",
													"nodeType": "YulIdentifier",
													"src": "3767:9:8"
												}
											]
										}
									]
								},
								"name": "convert_t_contract$_LPToken_$875_to_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "3737:5:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "converted",
										"nodeType": "YulTypedName",
										"src": "3747:9:8",
										"type": ""
									}
								],
								"src": "3682:141:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3909:81:8",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "3926:3:8"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3977:5:8"
															}
														],
														"functionName": {
															"name": "convert_t_contract$_LPToken_$875_to_t_address",
															"nodeType": "YulIdentifier",
															"src": "3931:45:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "3931:52:8"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "3919:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "3919:65:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3919:65:8"
										}
									]
								},
								"name": "abi_encode_t_contract$_LPToken_$875_to_t_address_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "3897:5:8",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "3904:3:8",
										"type": ""
									}
								],
								"src": "3829:161:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "4109:139:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "4119:26:8",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4131:9:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4142:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4127:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "4127:18:8"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "4119:4:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "4214:6:8"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "4227:9:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4238:1:8",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "4223:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "4223:17:8"
													}
												],
												"functionName": {
													"name": "abi_encode_t_contract$_LPToken_$875_to_t_address_fromStack",
													"nodeType": "YulIdentifier",
													"src": "4155:58:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "4155:86:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "4155:86:8"
										}
									]
								},
								"name": "abi_encode_tuple_t_contract$_LPToken_$875__to_t_address__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "4081:9:8",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "4093:6:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "4104:4:8",
										"type": ""
									}
								],
								"src": "3996:252:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "4380:206:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "4390:26:8",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4402:9:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4413:2:8",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4398:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "4398:18:8"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "4390:4:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "4470:6:8"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "4483:9:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4494:1:8",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "4479:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "4479:17:8"
													}
												],
												"functionName": {
													"name": "abi_encode_t_address_to_t_address_fromStack",
													"nodeType": "YulIdentifier",
													"src": "4426:43:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "4426:71:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "4426:71:8"
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value1",
														"nodeType": "YulIdentifier",
														"src": "4551:6:8"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "4564:9:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4575:2:8",
																"type": "",
																"value": "32"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "4560:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "4560:18:8"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
													"nodeType": "YulIdentifier",
													"src": "4507:43:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "4507:72:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "4507:72:8"
										}
									]
								},
								"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "4344:9:8",
										"type": ""
									},
									{
										"name": "value1",
										"nodeType": "YulTypedName",
										"src": "4356:6:8",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "4364:6:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "4375:4:8",
										"type": ""
									}
								],
								"src": "4254:332:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "4675:391:8",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "4721:83:8",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																"nodeType": "YulIdentifier",
																"src": "4723:77:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "4723:79:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "4723:79:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "4696:7:8"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "4705:9:8"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "4692:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "4692:23:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4717:2:8",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "4688:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "4688:32:8"
											},
											"nodeType": "YulIf",
											"src": "4685:119:8"
										},
										{
											"nodeType": "YulBlock",
											"src": "4814:117:8",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "4829:15:8",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4843:1:8",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "4833:6:8",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "4858:63:8",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4893:9:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4904:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4889:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4889:22:8"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "4913:7:8"
															}
														],
														"functionName": {
															"name": "abi_decode_t_uint256",
															"nodeType": "YulIdentifier",
															"src": "4868:20:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "4868:53:8"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "4858:6:8"
														}
													]
												}
											]
										},
										{
											"nodeType": "YulBlock",
											"src": "4941:118:8",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "4956:16:8",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4970:2:8",
														"type": "",
														"value": "32"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "4960:6:8",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "4986:63:8",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5021:9:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5032:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5017:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5017:22:8"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "5041:7:8"
															}
														],
														"functionName": {
															"name": "abi_decode_t_address",
															"nodeType": "YulIdentifier",
															"src": "4996:20:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "4996:53:8"
													},
													"variableNames": [
														{
															"name": "value1",
															"nodeType": "YulIdentifier",
															"src": "4986:6:8"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_uint256t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "4637:9:8",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "4648:7:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "4660:6:8",
										"type": ""
									},
									{
										"name": "value1",
										"nodeType": "YulTypedName",
										"src": "4668:6:8",
										"type": ""
									}
								],
								"src": "4592:474:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "5168:73:8",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "5185:3:8"
													},
													{
														"name": "length",
														"nodeType": "YulIdentifier",
														"src": "5190:6:8"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "5178:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "5178:19:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "5178:19:8"
										},
										{
											"nodeType": "YulAssignment",
											"src": "5206:29:8",
											"value": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "5225:3:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5230:4:8",
														"type": "",
														"value": "0x20"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "5221:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "5221:14:8"
											},
											"variableNames": [
												{
													"name": "updated_pos",
													"nodeType": "YulIdentifier",
													"src": "5206:11:8"
												}
											]
										}
									]
								},
								"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "5140:3:8",
										"type": ""
									},
									{
										"name": "length",
										"nodeType": "YulTypedName",
										"src": "5145:6:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "updated_pos",
										"nodeType": "YulTypedName",
										"src": "5156:11:8",
										"type": ""
									}
								],
								"src": "5072:169:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "5353:63:8",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "5375:6:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5383:1:8",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "5371:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "5371:14:8"
													},
													{
														"hexValue": "496e76616c696420696e70757420746f6b656e",
														"kind": "string",
														"nodeType": "YulLiteral",
														"src": "5387:21:8",
														"type": "",
														"value": "Invalid input token"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "5364:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "5364:45:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "5364:45:8"
										}
									]
								},
								"name": "store_literal_in_memory_84f0c120f9c89279530f293487f2886c10a3854abff7bba8786124cc26b0c21a",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "memPtr",
										"nodeType": "YulTypedName",
										"src": "5345:6:8",
										"type": ""
									}
								],
								"src": "5247:169:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "5568:220:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "5578:74:8",
											"value": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "5644:3:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5649:2:8",
														"type": "",
														"value": "19"
													}
												],
												"functionName": {
													"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
													"nodeType": "YulIdentifier",
													"src": "5585:58:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "5585:67:8"
											},
											"variableNames": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "5578:3:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "5750:3:8"
													}
												],
												"functionName": {
													"name": "store_literal_in_memory_84f0c120f9c89279530f293487f2886c10a3854abff7bba8786124cc26b0c21a",
													"nodeType": "YulIdentifier",
													"src": "5661:88:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "5661:93:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "5661:93:8"
										},
										{
											"nodeType": "YulAssignment",
											"src": "5763:19:8",
											"value": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "5774:3:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5779:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "5770:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "5770:12:8"
											},
											"variableNames": [
												{
													"name": "end",
													"nodeType": "YulIdentifier",
													"src": "5763:3:8"
												}
											]
										}
									]
								},
								"name": "abi_encode_t_stringliteral_84f0c120f9c89279530f293487f2886c10a3854abff7bba8786124cc26b0c21a_to_t_string_memory_ptr_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "5556:3:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "5564:3:8",
										"type": ""
									}
								],
								"src": "5422:366:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "5965:248:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "5975:26:8",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "5987:9:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5998:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "5983:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "5983:18:8"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "5975:4:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "6022:9:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6033:1:8",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "6018:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "6018:17:8"
													},
													{
														"arguments": [
															{
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "6041:4:8"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "6047:9:8"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "6037:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "6037:20:8"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "6011:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "6011:47:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "6011:47:8"
										},
										{
											"nodeType": "YulAssignment",
											"src": "6067:139:8",
											"value": {
												"arguments": [
													{
														"name": "tail",
														"nodeType": "YulIdentifier",
														"src": "6201:4:8"
													}
												],
												"functionName": {
													"name": "abi_encode_t_stringliteral_84f0c120f9c89279530f293487f2886c10a3854abff7bba8786124cc26b0c21a_to_t_string_memory_ptr_fromStack",
													"nodeType": "YulIdentifier",
													"src": "6075:124:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "6075:131:8"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "6067:4:8"
												}
											]
										}
									]
								},
								"name": "abi_encode_tuple_t_stringliteral_84f0c120f9c89279530f293487f2886c10a3854abff7bba8786124cc26b0c21a__to_t_string_memory_ptr__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "5945:9:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "5960:4:8",
										"type": ""
									}
								],
								"src": "5794:419:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "6263:61:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "6273:45:8",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "6288:5:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "6295:22:8",
														"type": "",
														"value": "0xffffffffffffffffffff"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "6284:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "6284:34:8"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "6273:7:8"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint80",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "6245:5:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "6255:7:8",
										"type": ""
									}
								],
								"src": "6219:105:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "6372:78:8",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "6428:16:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "6437:1:8",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "6440:1:8",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "6430:6:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "6430:12:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "6430:12:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6395:5:8"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6419:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint80",
																	"nodeType": "YulIdentifier",
																	"src": "6402:16:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6402:23:8"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "6392:2:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "6392:34:8"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "6385:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "6385:42:8"
											},
											"nodeType": "YulIf",
											"src": "6382:62:8"
										}
									]
								},
								"name": "validator_revert_t_uint80",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "6365:5:8",
										"type": ""
									}
								],
								"src": "6330:120:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "6518:79:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "6528:22:8",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "6543:6:8"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "6537:5:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "6537:13:8"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "6528:5:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "6585:5:8"
													}
												],
												"functionName": {
													"name": "validator_revert_t_uint80",
													"nodeType": "YulIdentifier",
													"src": "6559:25:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "6559:32:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "6559:32:8"
										}
									]
								},
								"name": "abi_decode_t_uint80_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "6496:6:8",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "6504:3:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "6512:5:8",
										"type": ""
									}
								],
								"src": "6456:141:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "6645:78:8",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "6701:16:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "6710:1:8",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "6713:1:8",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "6703:6:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "6703:12:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "6703:12:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6668:5:8"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6692:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "6675:16:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6675:23:8"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "6665:2:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "6665:34:8"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "6658:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "6658:42:8"
											},
											"nodeType": "YulIf",
											"src": "6655:62:8"
										}
									]
								},
								"name": "validator_revert_t_int256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "6638:5:8",
										"type": ""
									}
								],
								"src": "6603:120:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "6791:79:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "6801:22:8",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "6816:6:8"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "6810:5:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "6810:13:8"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "6801:5:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "6858:5:8"
													}
												],
												"functionName": {
													"name": "validator_revert_t_int256",
													"nodeType": "YulIdentifier",
													"src": "6832:25:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "6832:32:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "6832:32:8"
										}
									]
								},
								"name": "abi_decode_t_int256_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "6769:6:8",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "6777:3:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "6785:5:8",
										"type": ""
									}
								],
								"src": "6729:141:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "6939:80:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "6949:22:8",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "6964:6:8"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "6958:5:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "6958:13:8"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "6949:5:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "7007:5:8"
													}
												],
												"functionName": {
													"name": "validator_revert_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "6980:26:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "6980:33:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "6980:33:8"
										}
									]
								},
								"name": "abi_decode_t_uint256_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "6917:6:8",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "6925:3:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "6933:5:8",
										"type": ""
									}
								],
								"src": "6876:143:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "7167:829:8",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "7214:83:8",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																"nodeType": "YulIdentifier",
																"src": "7216:77:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "7216:79:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "7216:79:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "7188:7:8"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "7197:9:8"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "7184:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "7184:23:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7209:3:8",
														"type": "",
														"value": "160"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "7180:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "7180:33:8"
											},
											"nodeType": "YulIf",
											"src": "7177:120:8"
										},
										{
											"nodeType": "YulBlock",
											"src": "7307:127:8",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "7322:15:8",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7336:1:8",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "7326:6:8",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "7351:73:8",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7396:9:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7407:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7392:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7392:22:8"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "7416:7:8"
															}
														],
														"functionName": {
															"name": "abi_decode_t_uint80_fromMemory",
															"nodeType": "YulIdentifier",
															"src": "7361:30:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "7361:63:8"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "7351:6:8"
														}
													]
												}
											]
										},
										{
											"nodeType": "YulBlock",
											"src": "7444:128:8",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "7459:16:8",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7473:2:8",
														"type": "",
														"value": "32"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "7463:6:8",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "7489:73:8",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7534:9:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7545:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7530:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7530:22:8"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "7554:7:8"
															}
														],
														"functionName": {
															"name": "abi_decode_t_int256_fromMemory",
															"nodeType": "YulIdentifier",
															"src": "7499:30:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "7499:63:8"
													},
													"variableNames": [
														{
															"name": "value1",
															"nodeType": "YulIdentifier",
															"src": "7489:6:8"
														}
													]
												}
											]
										},
										{
											"nodeType": "YulBlock",
											"src": "7582:129:8",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "7597:16:8",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7611:2:8",
														"type": "",
														"value": "64"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "7601:6:8",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "7627:74:8",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7673:9:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7684:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7669:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7669:22:8"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "7693:7:8"
															}
														],
														"functionName": {
															"name": "abi_decode_t_uint256_fromMemory",
															"nodeType": "YulIdentifier",
															"src": "7637:31:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "7637:64:8"
													},
													"variableNames": [
														{
															"name": "value2",
															"nodeType": "YulIdentifier",
															"src": "7627:6:8"
														}
													]
												}
											]
										},
										{
											"nodeType": "YulBlock",
											"src": "7721:129:8",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "7736:16:8",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7750:2:8",
														"type": "",
														"value": "96"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "7740:6:8",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "7766:74:8",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7812:9:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7823:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7808:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7808:22:8"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "7832:7:8"
															}
														],
														"functionName": {
															"name": "abi_decode_t_uint256_fromMemory",
															"nodeType": "YulIdentifier",
															"src": "7776:31:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "7776:64:8"
													},
													"variableNames": [
														{
															"name": "value3",
															"nodeType": "YulIdentifier",
															"src": "7766:6:8"
														}
													]
												}
											]
										},
										{
											"nodeType": "YulBlock",
											"src": "7860:129:8",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "7875:17:8",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7889:3:8",
														"type": "",
														"value": "128"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "7879:6:8",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "7906:73:8",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7951:9:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7962:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7947:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7947:22:8"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "7971:7:8"
															}
														],
														"functionName": {
															"name": "abi_decode_t_uint80_fromMemory",
															"nodeType": "YulIdentifier",
															"src": "7916:30:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "7916:63:8"
													},
													"variableNames": [
														{
															"name": "value4",
															"nodeType": "YulIdentifier",
															"src": "7906:6:8"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "7105:9:8",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "7116:7:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "7128:6:8",
										"type": ""
									},
									{
										"name": "value1",
										"nodeType": "YulTypedName",
										"src": "7136:6:8",
										"type": ""
									},
									{
										"name": "value2",
										"nodeType": "YulTypedName",
										"src": "7144:6:8",
										"type": ""
									},
									{
										"name": "value3",
										"nodeType": "YulTypedName",
										"src": "7152:6:8",
										"type": ""
									},
									{
										"name": "value4",
										"nodeType": "YulTypedName",
										"src": "7160:6:8",
										"type": ""
									}
								],
								"src": "7025:971:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "8030:152:8",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "8047:1:8",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "8050:77:8",
														"type": "",
														"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "8040:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "8040:88:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "8040:88:8"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "8144:1:8",
														"type": "",
														"value": "4"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "8147:4:8",
														"type": "",
														"value": "0x11"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "8137:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "8137:15:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "8137:15:8"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "8168:1:8",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "8171:4:8",
														"type": "",
														"value": "0x24"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "8161:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "8161:15:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "8161:15:8"
										}
									]
								},
								"name": "panic_error_0x11",
								"nodeType": "YulFunctionDefinition",
								"src": "8002:180:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "8235:509:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "8245:24:8",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "8267:1:8"
													}
												],
												"functionName": {
													"name": "cleanup_t_int256",
													"nodeType": "YulIdentifier",
													"src": "8250:16:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "8250:19:8"
											},
											"variableNames": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "8245:1:8"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "8278:24:8",
											"value": {
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "8300:1:8"
													}
												],
												"functionName": {
													"name": "cleanup_t_int256",
													"nodeType": "YulIdentifier",
													"src": "8283:16:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "8283:19:8"
											},
											"variableNames": [
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "8278:1:8"
												}
											]
										},
										{
											"nodeType": "YulVariableDeclaration",
											"src": "8311:28:8",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "8334:1:8"
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "8337:1:8"
													}
												],
												"functionName": {
													"name": "mul",
													"nodeType": "YulIdentifier",
													"src": "8330:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "8330:9:8"
											},
											"variables": [
												{
													"name": "product_raw",
													"nodeType": "YulTypedName",
													"src": "8315:11:8",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "8348:40:8",
											"value": {
												"arguments": [
													{
														"name": "product_raw",
														"nodeType": "YulIdentifier",
														"src": "8376:11:8"
													}
												],
												"functionName": {
													"name": "cleanup_t_int256",
													"nodeType": "YulIdentifier",
													"src": "8359:16:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "8359:29:8"
											},
											"variableNames": [
												{
													"name": "product",
													"nodeType": "YulIdentifier",
													"src": "8348:7:8"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "8515:22:8",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x11",
																"nodeType": "YulIdentifier",
																"src": "8517:16:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "8517:18:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "8517:18:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "x",
																"nodeType": "YulIdentifier",
																"src": "8433:1:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8436:1:8",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "slt",
															"nodeType": "YulIdentifier",
															"src": "8429:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "8429:9:8"
													},
													{
														"arguments": [
															{
																"name": "y",
																"nodeType": "YulIdentifier",
																"src": "8443:1:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8446:66:8",
																"type": "",
																"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "8440:2:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "8440:73:8"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "8425:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "8425:89:8"
											},
											"nodeType": "YulIf",
											"src": "8422:115:8"
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "8715:22:8",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x11",
																"nodeType": "YulIdentifier",
																"src": "8717:16:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "8717:18:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "8717:18:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8647:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8640:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8640:9:8"
															},
															{
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8670:1:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "product",
																				"nodeType": "YulIdentifier",
																				"src": "8678:7:8"
																			},
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "8687:1:8"
																			}
																		],
																		"functionName": {
																			"name": "sdiv",
																			"nodeType": "YulIdentifier",
																			"src": "8673:4:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8673:16:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "8667:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8667:23:8"
															}
														],
														"functionName": {
															"name": "or",
															"nodeType": "YulIdentifier",
															"src": "8620:2:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "8620:84:8"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "8600:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "8600:114:8"
											},
											"nodeType": "YulIf",
											"src": "8597:140:8"
										}
									]
								},
								"name": "checked_mul_t_int256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "x",
										"nodeType": "YulTypedName",
										"src": "8218:1:8",
										"type": ""
									},
									{
										"name": "y",
										"nodeType": "YulTypedName",
										"src": "8221:1:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "product",
										"nodeType": "YulTypedName",
										"src": "8227:7:8",
										"type": ""
									}
								],
								"src": "8188:556:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "8798:362:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "8808:25:8",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "8831:1:8"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "8813:17:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "8813:20:8"
											},
											"variableNames": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "8808:1:8"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "8842:25:8",
											"value": {
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "8865:1:8"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "8847:17:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "8847:20:8"
											},
											"variableNames": [
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "8842:1:8"
												}
											]
										},
										{
											"nodeType": "YulVariableDeclaration",
											"src": "8876:28:8",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "8899:1:8"
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "8902:1:8"
													}
												],
												"functionName": {
													"name": "mul",
													"nodeType": "YulIdentifier",
													"src": "8895:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "8895:9:8"
											},
											"variables": [
												{
													"name": "product_raw",
													"nodeType": "YulTypedName",
													"src": "8880:11:8",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "8913:41:8",
											"value": {
												"arguments": [
													{
														"name": "product_raw",
														"nodeType": "YulIdentifier",
														"src": "8942:11:8"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "8924:17:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "8924:30:8"
											},
											"variableNames": [
												{
													"name": "product",
													"nodeType": "YulIdentifier",
													"src": "8913:7:8"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "9131:22:8",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x11",
																"nodeType": "YulIdentifier",
																"src": "9133:16:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "9133:18:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "9133:18:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9064:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9057:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9057:9:8"
															},
															{
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9087:1:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "product",
																				"nodeType": "YulIdentifier",
																				"src": "9094:7:8"
																			},
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "9103:1:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "9090:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9090:15:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "9084:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9084:22:8"
															}
														],
														"functionName": {
															"name": "or",
															"nodeType": "YulIdentifier",
															"src": "9037:2:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "9037:83:8"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "9017:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "9017:113:8"
											},
											"nodeType": "YulIf",
											"src": "9014:139:8"
										}
									]
								},
								"name": "checked_mul_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "x",
										"nodeType": "YulTypedName",
										"src": "8781:1:8",
										"type": ""
									},
									{
										"name": "y",
										"nodeType": "YulTypedName",
										"src": "8784:1:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "product",
										"nodeType": "YulTypedName",
										"src": "8790:7:8",
										"type": ""
									}
								],
								"src": "8750:410:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "9194:152:8",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "9211:1:8",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "9214:77:8",
														"type": "",
														"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "9204:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "9204:88:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "9204:88:8"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "9308:1:8",
														"type": "",
														"value": "4"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "9311:4:8",
														"type": "",
														"value": "0x12"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "9301:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "9301:15:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "9301:15:8"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "9332:1:8",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "9335:4:8",
														"type": "",
														"value": "0x24"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "9325:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "9325:15:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "9325:15:8"
										}
									]
								},
								"name": "panic_error_0x12",
								"nodeType": "YulFunctionDefinition",
								"src": "9166:180:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "9394:143:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "9404:25:8",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "9427:1:8"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "9409:17:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "9409:20:8"
											},
											"variableNames": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "9404:1:8"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "9438:25:8",
											"value": {
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "9461:1:8"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "9443:17:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "9443:20:8"
											},
											"variableNames": [
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "9438:1:8"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "9485:22:8",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x12",
																"nodeType": "YulIdentifier",
																"src": "9487:16:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "9487:18:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "9487:18:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "9482:1:8"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "9475:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "9475:9:8"
											},
											"nodeType": "YulIf",
											"src": "9472:35:8"
										},
										{
											"nodeType": "YulAssignment",
											"src": "9517:14:8",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "9526:1:8"
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "9529:1:8"
													}
												],
												"functionName": {
													"name": "div",
													"nodeType": "YulIdentifier",
													"src": "9522:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "9522:9:8"
											},
											"variableNames": [
												{
													"name": "r",
													"nodeType": "YulIdentifier",
													"src": "9517:1:8"
												}
											]
										}
									]
								},
								"name": "checked_div_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "x",
										"nodeType": "YulTypedName",
										"src": "9383:1:8",
										"type": ""
									},
									{
										"name": "y",
										"nodeType": "YulTypedName",
										"src": "9386:1:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "r",
										"nodeType": "YulTypedName",
										"src": "9392:1:8",
										"type": ""
									}
								],
								"src": "9352:185:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "9620:274:8",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "9666:83:8",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																"nodeType": "YulIdentifier",
																"src": "9668:77:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "9668:79:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "9668:79:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "9641:7:8"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "9650:9:8"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "9637:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "9637:23:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "9662:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "9633:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "9633:32:8"
											},
											"nodeType": "YulIf",
											"src": "9630:119:8"
										},
										{
											"nodeType": "YulBlock",
											"src": "9759:128:8",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "9774:15:8",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "9788:1:8",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "9778:6:8",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "9803:74:8",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9849:9:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9860:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9845:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9845:22:8"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "9869:7:8"
															}
														],
														"functionName": {
															"name": "abi_decode_t_uint256_fromMemory",
															"nodeType": "YulIdentifier",
															"src": "9813:31:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "9813:64:8"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "9803:6:8"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_uint256_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "9590:9:8",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "9601:7:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "9613:6:8",
										"type": ""
									}
								],
								"src": "9543:351:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "9941:344:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "9951:24:8",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "9973:1:8"
													}
												],
												"functionName": {
													"name": "cleanup_t_int256",
													"nodeType": "YulIdentifier",
													"src": "9956:16:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "9956:19:8"
											},
											"variableNames": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "9951:1:8"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "9984:24:8",
											"value": {
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "10006:1:8"
													}
												],
												"functionName": {
													"name": "cleanup_t_int256",
													"nodeType": "YulIdentifier",
													"src": "9989:16:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "9989:19:8"
											},
											"variableNames": [
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "9984:1:8"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "10030:22:8",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x12",
																"nodeType": "YulIdentifier",
																"src": "10032:16:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "10032:18:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "10032:18:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "10027:1:8"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "10020:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "10020:9:8"
											},
											"nodeType": "YulIf",
											"src": "10017:35:8"
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "10232:22:8",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x11",
																"nodeType": "YulIdentifier",
																"src": "10234:16:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "10234:18:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "10234:18:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "x",
																"nodeType": "YulIdentifier",
																"src": "10121:1:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10124:66:8",
																"type": "",
																"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "10118:2:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "10118:73:8"
													},
													{
														"arguments": [
															{
																"name": "y",
																"nodeType": "YulIdentifier",
																"src": "10208:1:8"
															},
															{
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10215:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10218:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10211:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10211:9:8"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "10205:2:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "10205:16:8"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "10101:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "10101:130:8"
											},
											"nodeType": "YulIf",
											"src": "10098:156:8"
										},
										{
											"nodeType": "YulAssignment",
											"src": "10264:15:8",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "10274:1:8"
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "10277:1:8"
													}
												],
												"functionName": {
													"name": "sdiv",
													"nodeType": "YulIdentifier",
													"src": "10269:4:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "10269:10:8"
											},
											"variableNames": [
												{
													"name": "r",
													"nodeType": "YulIdentifier",
													"src": "10264:1:8"
												}
											]
										}
									]
								},
								"name": "checked_div_t_int256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "x",
										"nodeType": "YulTypedName",
										"src": "9930:1:8",
										"type": ""
									},
									{
										"name": "y",
										"nodeType": "YulTypedName",
										"src": "9933:1:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "r",
										"nodeType": "YulTypedName",
										"src": "9939:1:8",
										"type": ""
									}
								],
								"src": "9900:385:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "10397:64:8",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "10419:6:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10427:1:8",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "10415:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "10415:14:8"
													},
													{
														"hexValue": "526573657276657320617265206e6f7420736574",
														"kind": "string",
														"nodeType": "YulLiteral",
														"src": "10431:22:8",
														"type": "",
														"value": "Reserves are not set"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "10408:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "10408:46:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "10408:46:8"
										}
									]
								},
								"name": "store_literal_in_memory_8383d29ebbe792827fefa7997bfaff9ad7589c06cb05191eef1178dddc2412a2",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "memPtr",
										"nodeType": "YulTypedName",
										"src": "10389:6:8",
										"type": ""
									}
								],
								"src": "10291:170:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "10613:220:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "10623:74:8",
											"value": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "10689:3:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "10694:2:8",
														"type": "",
														"value": "20"
													}
												],
												"functionName": {
													"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
													"nodeType": "YulIdentifier",
													"src": "10630:58:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "10630:67:8"
											},
											"variableNames": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "10623:3:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "10795:3:8"
													}
												],
												"functionName": {
													"name": "store_literal_in_memory_8383d29ebbe792827fefa7997bfaff9ad7589c06cb05191eef1178dddc2412a2",
													"nodeType": "YulIdentifier",
													"src": "10706:88:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "10706:93:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "10706:93:8"
										},
										{
											"nodeType": "YulAssignment",
											"src": "10808:19:8",
											"value": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "10819:3:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "10824:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "10815:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "10815:12:8"
											},
											"variableNames": [
												{
													"name": "end",
													"nodeType": "YulIdentifier",
													"src": "10808:3:8"
												}
											]
										}
									]
								},
								"name": "abi_encode_t_stringliteral_8383d29ebbe792827fefa7997bfaff9ad7589c06cb05191eef1178dddc2412a2_to_t_string_memory_ptr_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "10601:3:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "10609:3:8",
										"type": ""
									}
								],
								"src": "10467:366:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "11010:248:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "11020:26:8",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "11032:9:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "11043:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "11028:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "11028:18:8"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "11020:4:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "11067:9:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11078:1:8",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "11063:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "11063:17:8"
													},
													{
														"arguments": [
															{
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "11086:4:8"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "11092:9:8"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "11082:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "11082:20:8"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "11056:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "11056:47:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "11056:47:8"
										},
										{
											"nodeType": "YulAssignment",
											"src": "11112:139:8",
											"value": {
												"arguments": [
													{
														"name": "tail",
														"nodeType": "YulIdentifier",
														"src": "11246:4:8"
													}
												],
												"functionName": {
													"name": "abi_encode_t_stringliteral_8383d29ebbe792827fefa7997bfaff9ad7589c06cb05191eef1178dddc2412a2_to_t_string_memory_ptr_fromStack",
													"nodeType": "YulIdentifier",
													"src": "11120:124:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "11120:131:8"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "11112:4:8"
												}
											]
										}
									]
								},
								"name": "abi_encode_tuple_t_stringliteral_8383d29ebbe792827fefa7997bfaff9ad7589c06cb05191eef1178dddc2412a2__to_t_string_memory_ptr__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "10990:9:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "11005:4:8",
										"type": ""
									}
								],
								"src": "10839:419:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "11418:288:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "11428:26:8",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "11440:9:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "11451:2:8",
														"type": "",
														"value": "96"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "11436:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "11436:18:8"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "11428:4:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "11508:6:8"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "11521:9:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11532:1:8",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "11517:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "11517:17:8"
													}
												],
												"functionName": {
													"name": "abi_encode_t_address_to_t_address_fromStack",
													"nodeType": "YulIdentifier",
													"src": "11464:43:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "11464:71:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "11464:71:8"
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value1",
														"nodeType": "YulIdentifier",
														"src": "11589:6:8"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "11602:9:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11613:2:8",
																"type": "",
																"value": "32"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "11598:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "11598:18:8"
													}
												],
												"functionName": {
													"name": "abi_encode_t_address_to_t_address_fromStack",
													"nodeType": "YulIdentifier",
													"src": "11545:43:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "11545:72:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "11545:72:8"
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value2",
														"nodeType": "YulIdentifier",
														"src": "11671:6:8"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "11684:9:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11695:2:8",
																"type": "",
																"value": "64"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "11680:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "11680:18:8"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
													"nodeType": "YulIdentifier",
													"src": "11627:43:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "11627:72:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "11627:72:8"
										}
									]
								},
								"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "11374:9:8",
										"type": ""
									},
									{
										"name": "value2",
										"nodeType": "YulTypedName",
										"src": "11386:6:8",
										"type": ""
									},
									{
										"name": "value1",
										"nodeType": "YulTypedName",
										"src": "11394:6:8",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "11402:6:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "11413:4:8",
										"type": ""
									}
								],
								"src": "11264:442:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "11754:48:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "11764:32:8",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "11789:5:8"
															}
														],
														"functionName": {
															"name": "iszero",
															"nodeType": "YulIdentifier",
															"src": "11782:6:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "11782:13:8"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "11775:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "11775:21:8"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "11764:7:8"
												}
											]
										}
									]
								},
								"name": "cleanup_t_bool",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "11736:5:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "11746:7:8",
										"type": ""
									}
								],
								"src": "11712:90:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "11848:76:8",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "11902:16:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "11911:1:8",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "11914:1:8",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "11904:6:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "11904:12:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "11904:12:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "11871:5:8"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11893:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "11878:14:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11878:21:8"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "11868:2:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "11868:32:8"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "11861:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "11861:40:8"
											},
											"nodeType": "YulIf",
											"src": "11858:60:8"
										}
									]
								},
								"name": "validator_revert_t_bool",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "11841:5:8",
										"type": ""
									}
								],
								"src": "11808:116:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "11990:77:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "12000:22:8",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "12015:6:8"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "12009:5:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "12009:13:8"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "12000:5:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "12055:5:8"
													}
												],
												"functionName": {
													"name": "validator_revert_t_bool",
													"nodeType": "YulIdentifier",
													"src": "12031:23:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "12031:30:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "12031:30:8"
										}
									]
								},
								"name": "abi_decode_t_bool_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "11968:6:8",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "11976:3:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "11984:5:8",
										"type": ""
									}
								],
								"src": "11930:137:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "12147:271:8",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "12193:83:8",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																"nodeType": "YulIdentifier",
																"src": "12195:77:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "12195:79:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "12195:79:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "12168:7:8"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "12177:9:8"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "12164:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "12164:23:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "12189:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "12160:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "12160:32:8"
											},
											"nodeType": "YulIf",
											"src": "12157:119:8"
										},
										{
											"nodeType": "YulBlock",
											"src": "12286:125:8",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "12301:15:8",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "12315:1:8",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "12305:6:8",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "12330:71:8",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12373:9:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "12384:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12369:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12369:22:8"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "12393:7:8"
															}
														],
														"functionName": {
															"name": "abi_decode_t_bool_fromMemory",
															"nodeType": "YulIdentifier",
															"src": "12340:28:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "12340:61:8"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "12330:6:8"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_bool_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "12117:9:8",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "12128:7:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "12140:6:8",
										"type": ""
									}
								],
								"src": "12073:345:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "12468:147:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "12478:25:8",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "12501:1:8"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "12483:17:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "12483:20:8"
											},
											"variableNames": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "12478:1:8"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "12512:25:8",
											"value": {
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "12535:1:8"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "12517:17:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "12517:20:8"
											},
											"variableNames": [
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "12512:1:8"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "12546:16:8",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "12557:1:8"
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "12560:1:8"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "12553:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "12553:9:8"
											},
											"variableNames": [
												{
													"name": "sum",
													"nodeType": "YulIdentifier",
													"src": "12546:3:8"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "12586:22:8",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x11",
																"nodeType": "YulIdentifier",
																"src": "12588:16:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "12588:18:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "12588:18:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "12578:1:8"
													},
													{
														"name": "sum",
														"nodeType": "YulIdentifier",
														"src": "12581:3:8"
													}
												],
												"functionName": {
													"name": "gt",
													"nodeType": "YulIdentifier",
													"src": "12575:2:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "12575:10:8"
											},
											"nodeType": "YulIf",
											"src": "12572:36:8"
										}
									]
								},
								"name": "checked_add_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "x",
										"nodeType": "YulTypedName",
										"src": "12455:1:8",
										"type": ""
									},
									{
										"name": "y",
										"nodeType": "YulTypedName",
										"src": "12458:1:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "sum",
										"nodeType": "YulTypedName",
										"src": "12464:3:8",
										"type": ""
									}
								],
								"src": "12424:191:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "12666:149:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "12676:25:8",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "12699:1:8"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "12681:17:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "12681:20:8"
											},
											"variableNames": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "12676:1:8"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "12710:25:8",
											"value": {
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "12733:1:8"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "12715:17:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "12715:20:8"
											},
											"variableNames": [
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "12710:1:8"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "12744:17:8",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "12756:1:8"
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "12759:1:8"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "12752:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "12752:9:8"
											},
											"variableNames": [
												{
													"name": "diff",
													"nodeType": "YulIdentifier",
													"src": "12744:4:8"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "12786:22:8",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x11",
																"nodeType": "YulIdentifier",
																"src": "12788:16:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "12788:18:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "12788:18:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "diff",
														"nodeType": "YulIdentifier",
														"src": "12777:4:8"
													},
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "12783:1:8"
													}
												],
												"functionName": {
													"name": "gt",
													"nodeType": "YulIdentifier",
													"src": "12774:2:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "12774:11:8"
											},
											"nodeType": "YulIf",
											"src": "12771:37:8"
										}
									]
								},
								"name": "checked_sub_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "x",
										"nodeType": "YulTypedName",
										"src": "12652:1:8",
										"type": ""
									},
									{
										"name": "y",
										"nodeType": "YulTypedName",
										"src": "12655:1:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "diff",
										"nodeType": "YulTypedName",
										"src": "12661:4:8",
										"type": ""
									}
								],
								"src": "12621:194:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "12927:66:8",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "12949:6:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "12957:1:8",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "12945:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "12945:14:8"
													},
													{
														"hexValue": "496e73756666696369656e74206c6971756964697479",
														"kind": "string",
														"nodeType": "YulLiteral",
														"src": "12961:24:8",
														"type": "",
														"value": "Insufficient liquidity"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "12938:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "12938:48:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "12938:48:8"
										}
									]
								},
								"name": "store_literal_in_memory_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "memPtr",
										"nodeType": "YulTypedName",
										"src": "12919:6:8",
										"type": ""
									}
								],
								"src": "12821:172:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "13145:220:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "13155:74:8",
											"value": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "13221:3:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "13226:2:8",
														"type": "",
														"value": "22"
													}
												],
												"functionName": {
													"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
													"nodeType": "YulIdentifier",
													"src": "13162:58:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "13162:67:8"
											},
											"variableNames": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "13155:3:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "13327:3:8"
													}
												],
												"functionName": {
													"name": "store_literal_in_memory_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad",
													"nodeType": "YulIdentifier",
													"src": "13238:88:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "13238:93:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "13238:93:8"
										},
										{
											"nodeType": "YulAssignment",
											"src": "13340:19:8",
											"value": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "13351:3:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "13356:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "13347:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "13347:12:8"
											},
											"variableNames": [
												{
													"name": "end",
													"nodeType": "YulIdentifier",
													"src": "13340:3:8"
												}
											]
										}
									]
								},
								"name": "abi_encode_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad_to_t_string_memory_ptr_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "13133:3:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "13141:3:8",
										"type": ""
									}
								],
								"src": "12999:366:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "13542:248:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "13552:26:8",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "13564:9:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "13575:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "13560:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "13560:18:8"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "13552:4:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "13599:9:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "13610:1:8",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "13595:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "13595:17:8"
													},
													{
														"arguments": [
															{
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "13618:4:8"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "13624:9:8"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "13614:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "13614:20:8"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "13588:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "13588:47:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "13588:47:8"
										},
										{
											"nodeType": "YulAssignment",
											"src": "13644:139:8",
											"value": {
												"arguments": [
													{
														"name": "tail",
														"nodeType": "YulIdentifier",
														"src": "13778:4:8"
													}
												],
												"functionName": {
													"name": "abi_encode_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad_to_t_string_memory_ptr_fromStack",
													"nodeType": "YulIdentifier",
													"src": "13652:124:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "13652:131:8"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "13644:4:8"
												}
											]
										}
									]
								},
								"name": "abi_encode_tuple_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad__to_t_string_memory_ptr__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "13522:9:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "13537:4:8",
										"type": ""
									}
								],
								"src": "13371:419:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "13902:74:8",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "13924:6:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "13932:1:8",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "13920:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "13920:14:8"
													},
													{
														"hexValue": "496e73756666696369656e74206c69717569646974792072656d6f766564",
														"kind": "string",
														"nodeType": "YulLiteral",
														"src": "13936:32:8",
														"type": "",
														"value": "Insufficient liquidity removed"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "13913:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "13913:56:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "13913:56:8"
										}
									]
								},
								"name": "store_literal_in_memory_27d5f3f66243758e6691dcd57e9bf312a7560459ee4acdda4b073260b5a54fc4",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "memPtr",
										"nodeType": "YulTypedName",
										"src": "13894:6:8",
										"type": ""
									}
								],
								"src": "13796:180:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "14128:220:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "14138:74:8",
											"value": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "14204:3:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "14209:2:8",
														"type": "",
														"value": "30"
													}
												],
												"functionName": {
													"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
													"nodeType": "YulIdentifier",
													"src": "14145:58:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "14145:67:8"
											},
											"variableNames": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "14138:3:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "14310:3:8"
													}
												],
												"functionName": {
													"name": "store_literal_in_memory_27d5f3f66243758e6691dcd57e9bf312a7560459ee4acdda4b073260b5a54fc4",
													"nodeType": "YulIdentifier",
													"src": "14221:88:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "14221:93:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "14221:93:8"
										},
										{
											"nodeType": "YulAssignment",
											"src": "14323:19:8",
											"value": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "14334:3:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "14339:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "14330:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "14330:12:8"
											},
											"variableNames": [
												{
													"name": "end",
													"nodeType": "YulIdentifier",
													"src": "14323:3:8"
												}
											]
										}
									]
								},
								"name": "abi_encode_t_stringliteral_27d5f3f66243758e6691dcd57e9bf312a7560459ee4acdda4b073260b5a54fc4_to_t_string_memory_ptr_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "14116:3:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "14124:3:8",
										"type": ""
									}
								],
								"src": "13982:366:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "14525:248:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "14535:26:8",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "14547:9:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "14558:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "14543:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "14543:18:8"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "14535:4:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "14582:9:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14593:1:8",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "14578:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "14578:17:8"
													},
													{
														"arguments": [
															{
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "14601:4:8"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "14607:9:8"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "14597:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "14597:20:8"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "14571:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "14571:47:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "14571:47:8"
										},
										{
											"nodeType": "YulAssignment",
											"src": "14627:139:8",
											"value": {
												"arguments": [
													{
														"name": "tail",
														"nodeType": "YulIdentifier",
														"src": "14761:4:8"
													}
												],
												"functionName": {
													"name": "abi_encode_t_stringliteral_27d5f3f66243758e6691dcd57e9bf312a7560459ee4acdda4b073260b5a54fc4_to_t_string_memory_ptr_fromStack",
													"nodeType": "YulIdentifier",
													"src": "14635:124:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "14635:131:8"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "14627:4:8"
												}
											]
										}
									]
								},
								"name": "abi_encode_tuple_t_stringliteral_27d5f3f66243758e6691dcd57e9bf312a7560459ee4acdda4b073260b5a54fc4__to_t_string_memory_ptr__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "14505:9:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "14520:4:8",
										"type": ""
									}
								],
								"src": "14354:419:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "14989:454:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "14999:27:8",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "15011:9:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "15022:3:8",
														"type": "",
														"value": "160"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "15007:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "15007:19:8"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "14999:4:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "15080:6:8"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "15093:9:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15104:1:8",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "15089:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "15089:17:8"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
													"nodeType": "YulIdentifier",
													"src": "15036:43:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "15036:71:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "15036:71:8"
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value1",
														"nodeType": "YulIdentifier",
														"src": "15161:6:8"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "15174:9:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15185:2:8",
																"type": "",
																"value": "32"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "15170:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "15170:18:8"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
													"nodeType": "YulIdentifier",
													"src": "15117:43:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "15117:72:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "15117:72:8"
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value2",
														"nodeType": "YulIdentifier",
														"src": "15243:6:8"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "15256:9:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15267:2:8",
																"type": "",
																"value": "64"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "15252:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "15252:18:8"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
													"nodeType": "YulIdentifier",
													"src": "15199:43:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "15199:72:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "15199:72:8"
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value3",
														"nodeType": "YulIdentifier",
														"src": "15325:6:8"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "15338:9:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15349:2:8",
																"type": "",
																"value": "96"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "15334:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "15334:18:8"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
													"nodeType": "YulIdentifier",
													"src": "15281:43:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "15281:72:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "15281:72:8"
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value4",
														"nodeType": "YulIdentifier",
														"src": "15407:6:8"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "15420:9:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15431:3:8",
																"type": "",
																"value": "128"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "15416:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "15416:19:8"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
													"nodeType": "YulIdentifier",
													"src": "15363:43:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "15363:73:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "15363:73:8"
										}
									]
								},
								"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "14929:9:8",
										"type": ""
									},
									{
										"name": "value4",
										"nodeType": "YulTypedName",
										"src": "14941:6:8",
										"type": ""
									},
									{
										"name": "value3",
										"nodeType": "YulTypedName",
										"src": "14949:6:8",
										"type": ""
									},
									{
										"name": "value2",
										"nodeType": "YulTypedName",
										"src": "14957:6:8",
										"type": ""
									},
									{
										"name": "value1",
										"nodeType": "YulTypedName",
										"src": "14965:6:8",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "14973:6:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "14984:4:8",
										"type": ""
									}
								],
								"src": "14779:664:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "15555:75:8",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "15577:6:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15585:1:8",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "15573:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "15573:14:8"
													},
													{
														"hexValue": "496e73756666696369656e74206c69717569646974792070726f7669646564",
														"kind": "string",
														"nodeType": "YulLiteral",
														"src": "15589:33:8",
														"type": "",
														"value": "Insufficient liquidity provided"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "15566:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "15566:57:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "15566:57:8"
										}
									]
								},
								"name": "store_literal_in_memory_20ad566edbd5d53cb1cde2112f5439aeea9b1d035ff04f86720a4c46f6412c00",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "memPtr",
										"nodeType": "YulTypedName",
										"src": "15547:6:8",
										"type": ""
									}
								],
								"src": "15449:181:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "15782:220:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "15792:74:8",
											"value": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "15858:3:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "15863:2:8",
														"type": "",
														"value": "31"
													}
												],
												"functionName": {
													"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
													"nodeType": "YulIdentifier",
													"src": "15799:58:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "15799:67:8"
											},
											"variableNames": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "15792:3:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "15964:3:8"
													}
												],
												"functionName": {
													"name": "store_literal_in_memory_20ad566edbd5d53cb1cde2112f5439aeea9b1d035ff04f86720a4c46f6412c00",
													"nodeType": "YulIdentifier",
													"src": "15875:88:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "15875:93:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "15875:93:8"
										},
										{
											"nodeType": "YulAssignment",
											"src": "15977:19:8",
											"value": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "15988:3:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "15993:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "15984:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "15984:12:8"
											},
											"variableNames": [
												{
													"name": "end",
													"nodeType": "YulIdentifier",
													"src": "15977:3:8"
												}
											]
										}
									]
								},
								"name": "abi_encode_t_stringliteral_20ad566edbd5d53cb1cde2112f5439aeea9b1d035ff04f86720a4c46f6412c00_to_t_string_memory_ptr_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "15770:3:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "15778:3:8",
										"type": ""
									}
								],
								"src": "15636:366:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "16179:248:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "16189:26:8",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "16201:9:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "16212:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "16197:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "16197:18:8"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "16189:4:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "16236:9:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "16247:1:8",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "16232:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "16232:17:8"
													},
													{
														"arguments": [
															{
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "16255:4:8"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "16261:9:8"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "16251:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "16251:20:8"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "16225:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "16225:47:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "16225:47:8"
										},
										{
											"nodeType": "YulAssignment",
											"src": "16281:139:8",
											"value": {
												"arguments": [
													{
														"name": "tail",
														"nodeType": "YulIdentifier",
														"src": "16415:4:8"
													}
												],
												"functionName": {
													"name": "abi_encode_t_stringliteral_20ad566edbd5d53cb1cde2112f5439aeea9b1d035ff04f86720a4c46f6412c00_to_t_string_memory_ptr_fromStack",
													"nodeType": "YulIdentifier",
													"src": "16289:124:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "16289:131:8"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "16281:4:8"
												}
											]
										}
									]
								},
								"name": "abi_encode_tuple_t_stringliteral_20ad566edbd5d53cb1cde2112f5439aeea9b1d035ff04f86720a4c46f6412c00__to_t_string_memory_ptr__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "16159:9:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "16174:4:8",
										"type": ""
									}
								],
								"src": "16008:419:8"
							}
						]
					},
					"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_LPToken_$875_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_LPToken_$875_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_LPToken_$875_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_LPToken_$875__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_LPToken_$875_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_84f0c120f9c89279530f293487f2886c10a3854abff7bba8786124cc26b0c21a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid input token\")\n\n    }\n\n    function abi_encode_t_stringliteral_84f0c120f9c89279530f293487f2886c10a3854abff7bba8786124cc26b0c21a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_84f0c120f9c89279530f293487f2886c10a3854abff7bba8786124cc26b0c21a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_84f0c120f9c89279530f293487f2886c10a3854abff7bba8786124cc26b0c21a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_84f0c120f9c89279530f293487f2886c10a3854abff7bba8786124cc26b0c21a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_int256(x, y) -> product {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_int256(product_raw)\n\n        // special case\n        if and(slt(x, 0), eq(y, 0x8000000000000000000000000000000000000000000000000000000000000000)) { panic_error_0x11() }\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, sdiv(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_div_t_int256(x, y) -> r {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        // overflow for minVal / -1\n        if and(\n            eq(x, 0x8000000000000000000000000000000000000000000000000000000000000000),\n            eq(y, sub(0, 1))\n        ) { panic_error_0x11() }\n\n        r := sdiv(x, y)\n    }\n\n    function store_literal_in_memory_8383d29ebbe792827fefa7997bfaff9ad7589c06cb05191eef1178dddc2412a2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Reserves are not set\")\n\n    }\n\n    function abi_encode_t_stringliteral_8383d29ebbe792827fefa7997bfaff9ad7589c06cb05191eef1178dddc2412a2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_8383d29ebbe792827fefa7997bfaff9ad7589c06cb05191eef1178dddc2412a2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8383d29ebbe792827fefa7997bfaff9ad7589c06cb05191eef1178dddc2412a2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8383d29ebbe792827fefa7997bfaff9ad7589c06cb05191eef1178dddc2412a2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient liquidity\")\n\n    }\n\n    function abi_encode_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_27d5f3f66243758e6691dcd57e9bf312a7560459ee4acdda4b073260b5a54fc4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient liquidity removed\")\n\n    }\n\n    function abi_encode_t_stringliteral_27d5f3f66243758e6691dcd57e9bf312a7560459ee4acdda4b073260b5a54fc4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_27d5f3f66243758e6691dcd57e9bf312a7560459ee4acdda4b073260b5a54fc4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_27d5f3f66243758e6691dcd57e9bf312a7560459ee4acdda4b073260b5a54fc4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_27d5f3f66243758e6691dcd57e9bf312a7560459ee4acdda4b073260b5a54fc4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function store_literal_in_memory_20ad566edbd5d53cb1cde2112f5439aeea9b1d035ff04f86720a4c46f6412c00(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient liquidity provided\")\n\n    }\n\n    function abi_encode_t_stringliteral_20ad566edbd5d53cb1cde2112f5439aeea9b1d035ff04f86720a4c46f6412c00_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_20ad566edbd5d53cb1cde2112f5439aeea9b1d035ff04f86720a4c46f6412c00(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_20ad566edbd5d53cb1cde2112f5439aeea9b1d035ff04f86720a4c46f6412c00__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_20ad566edbd5d53cb1cde2112f5439aeea9b1d035ff04f86720a4c46f6412c00_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
					"id": 8,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5FCBD285 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xBFF46A4C GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xBFF46A4C EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xD0E7E07E EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0xF140A35A EQ PUSH2 0x2BB JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x5FCBD285 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x64E7B85A EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x729132F9 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0xA996944C EQ PUSH2 0x232 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x443CB4BC GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x443CB4BC EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x5444A39D EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x54B2A769 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x5A76F25E EQ PUSH2 0x1BC JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x902F1AC EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x41976E09 EQ PUSH2 0x134 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFF PUSH2 0x2EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10D SWAP3 SWAP2 SWAP1 PUSH2 0x1B9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11E PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x1C00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x1C47 JUMP JUMPDEST PUSH2 0x31E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15B SWAP2 SWAP1 PUSH2 0x1C8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH2 0x5B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x1CE6 JUMP JUMPDEST PUSH2 0x5B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A6 PUSH2 0x7D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x1C8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH2 0x940 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E2 PUSH2 0x946 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0x1D6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x212 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x1CE6 JUMP JUMPDEST PUSH2 0x96B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21C PUSH2 0xA30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23A PUSH2 0xAAA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x1C47 JUMP JUMPDEST PUSH2 0xBFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP3 SWAP2 SWAP1 PUSH2 0x1D85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x1DAC JUMP JUMPDEST PUSH2 0xCC6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A5 PUSH2 0x1054 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x1C00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x1DAC JUMP JUMPDEST PUSH2 0x1079 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x3C5 JUMPI POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x404 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FB SWAP1 PUSH2 0x1E44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4FA JUMPI PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4C2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4E6 SWAP2 SWAP1 PUSH2 0x1EDF JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP SWAP1 SWAP2 POP SWAP1 POP POP DUP1 SWAP2 POP POP PUSH2 0x598 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x564 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x588 SWAP2 SWAP1 PUSH2 0x1EDF JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP SWAP1 SWAP2 POP SWAP1 POP POP DUP1 SWAP2 POP POP JUMPDEST PUSH5 0x2540BE400 DUP2 PUSH2 0x5A9 SWAP2 SWAP1 PUSH2 0x1F83 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x5E0 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x31E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x60D PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x31E JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0x2 PUSH2 0x61D SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x631 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x63B SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0x2 PUSH2 0x64B SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x65F SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x669 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x7C0 PUSH1 0x3 SLOAD PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6DC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x700 SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST DUP6 PUSH2 0x70B SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x715 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x782 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7A6 SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST DUP6 PUSH2 0x7B1 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x7BB SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST PUSH2 0x1225 JUMP JUMPDEST SWAP1 POP PUSH2 0x7CB DUP2 PUSH2 0x123D JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x83F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x863 SWAP2 SWAP1 PUSH2 0x1EDF JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8D4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8F8 SWAP2 SWAP1 PUSH2 0x1EDF JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH5 0x2540BE400 DUP2 PUSH2 0x90F SWAP2 SWAP1 PUSH2 0x1F83 JUMP JUMPDEST PUSH4 0x5F5E100 PUSH5 0x2540BE400 DUP5 PUSH2 0x925 SWAP2 SWAP1 PUSH2 0x1F83 JUMP JUMPDEST PUSH2 0x92F SWAP2 SWAP1 PUSH2 0x1F83 JUMP JUMPDEST PUSH2 0x939 SWAP2 SWAP1 PUSH2 0x20C2 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x994 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x31E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x9C1 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x31E JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0x2 PUSH2 0x9D1 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x9E5 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x9EF SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0x2 PUSH2 0x9FF SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0xA13 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0xA1D SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP PUSH2 0xA29 DUP3 DUP3 PUSH2 0x166E JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x3 SLOAD GT DUP1 ISZERO PUSH2 0xA43 JUMPI POP PUSH0 PUSH1 0x4 SLOAD GT JUMPDEST PUSH2 0xA82 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA79 SWAP1 PUSH2 0x2174 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0x4 SLOAD PUSH2 0xA9B SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0xAA5 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB16 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB3A SWAP2 SWAP1 PUSH2 0x1EDF JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBAB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBCF SWAP2 SWAP1 PUSH2 0x1EDF JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0xBEA SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0xBF4 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC58 SWAP2 SWAP1 PUSH2 0x1C00 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC73 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC97 SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xD6B JUMPI POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xDAA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDA1 SWAP1 PUSH2 0x1E44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xDD3 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x31E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xE00 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x31E JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP PUSH0 DUP2 PUSH2 0xE7F JUMPI PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH2 0xEB0 JUMPI DUP4 PUSH2 0xEB2 JUMP JUMPDEST DUP5 JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH8 0xDE0B6B3A7640000 DUP10 PUSH2 0xECA SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0xED4 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xEE1 DUP3 DUP10 PUSH2 0x1079 JUMP JUMPDEST SWAP1 POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF20 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2192 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF3C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF60 SWAP2 SWAP1 PUSH2 0x21FC JUMP JUMPDEST POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9C SWAP3 SWAP2 SWAP1 PUSH2 0x1D85 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFB8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFDC SWAP2 SWAP1 PUSH2 0x21FC JUMP JUMPDEST POP DUP5 ISZERO PUSH2 0x1018 JUMPI DUP2 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xFF4 SWAP2 SWAP1 PUSH2 0x2227 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x100C SWAP2 SWAP1 PUSH2 0x225A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1049 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1029 SWAP2 SWAP1 PUSH2 0x2227 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1041 SWAP2 SWAP1 PUSH2 0x225A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1120 JUMPI POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x115F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1156 SWAP1 PUSH2 0x1E44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP PUSH0 DUP2 PUSH2 0x11BF JUMPI PUSH1 0x4 SLOAD PUSH2 0x11C3 JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH2 0x11D3 JUMPI PUSH1 0x3 SLOAD PUSH2 0x11D7 JUMP JUMPDEST PUSH1 0x4 SLOAD JUMPDEST SWAP1 POP PUSH0 PUSH2 0x3E8 PUSH2 0x3E5 DUP9 PUSH2 0x11EB SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x11F5 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH2 0x1203 SWAP2 SWAP1 PUSH2 0x2227 JUMP JUMPDEST DUP3 DUP3 PUSH2 0x120F SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x1219 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 LT PUSH2 0x1233 JUMPI DUP2 PUSH2 0x1235 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x127F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1276 SWAP1 PUSH2 0x22D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12EA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x130E SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP4 PUSH2 0x131C SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x1326 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1393 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13B7 SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP5 PUSH2 0x13C5 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x13CF SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0x13DF JUMPI POP PUSH0 DUP2 GT JUMPDEST PUSH2 0x141E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1415 SWAP1 PUSH2 0x233F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9DC29FAC CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x147A SWAP3 SWAP2 SWAP1 PUSH2 0x1D85 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1491 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14A3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1501 SWAP3 SWAP2 SWAP1 PUSH2 0x1D85 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x151D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1541 SWAP2 SWAP1 PUSH2 0x21FC JUMP JUMPDEST POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x159E SWAP3 SWAP2 SWAP1 PUSH2 0x1D85 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15BA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15DE SWAP2 SWAP1 PUSH2 0x21FC JUMP JUMPDEST POP DUP2 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x15F0 SWAP2 SWAP1 PUSH2 0x225A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1608 SWAP2 SWAP1 PUSH2 0x225A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4F7E4F53152CB2CD0E424B2FC990199F0ED4255C7A97A848131F1EEFF165F7B DUP4 DUP4 DUP7 PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH2 0x1661 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x235D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16CA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2192 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16E6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x170A SWAP2 SWAP1 PUSH2 0x21FC JUMP JUMPDEST POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1769 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2192 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1785 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17A9 SWAP2 SWAP1 PUSH2 0x21FC JUMP JUMPDEST POP PUSH0 DUP1 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1816 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x183A SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST SUB PUSH2 0x185A JUMPI PUSH2 0x1853 DUP3 DUP5 PUSH2 0x184E SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x1B0B JUMP JUMPDEST SWAP1 POP PUSH2 0x19B1 JUMP JUMPDEST PUSH2 0x19AE PUSH1 0x3 SLOAD PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18CA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18EE SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST DUP6 PUSH2 0x18F9 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x1903 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1970 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1994 SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST DUP6 PUSH2 0x199F SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x19A9 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST PUSH2 0x1225 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH0 DUP2 GT PUSH2 0x19F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19EA SWAP1 PUSH2 0x23F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A4F SWAP3 SWAP2 SWAP1 PUSH2 0x1D85 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A66 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A78 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP3 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1A8D SWAP2 SWAP1 PUSH2 0x2227 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1AA5 SWAP2 SWAP1 PUSH2 0x2227 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x103E5727EE41CE8741FBDF27E5E596DEB21DBE5AE93901499306D10F28D1EF7 DUP5 DUP5 DUP5 PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH2 0x1AFE SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x235D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x1B70 JUMPI DUP2 SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x2 DUP5 PUSH2 0x1B28 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST PUSH2 0x1B32 SWAP2 SWAP1 PUSH2 0x2227 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B6A JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 PUSH2 0x1B4F SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST PUSH2 0x1B59 SWAP2 SWAP1 PUSH2 0x2227 JUMP JUMPDEST PUSH2 0x1B63 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B35 JUMP JUMPDEST POP PUSH2 0x1B7D JUMP JUMPDEST PUSH0 DUP3 EQ PUSH2 0x1B7C JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B94 DUP2 PUSH2 0x1B82 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1BAD PUSH0 DUP4 ADD DUP6 PUSH2 0x1B8B JUMP JUMPDEST PUSH2 0x1BBA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B8B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1BEA DUP3 PUSH2 0x1BC1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BFA DUP2 PUSH2 0x1BE0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C13 PUSH0 DUP4 ADD DUP5 PUSH2 0x1BF1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1C26 DUP2 PUSH2 0x1BE0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C30 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C41 DUP2 PUSH2 0x1C1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C5C JUMPI PUSH2 0x1C5B PUSH2 0x1C19 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C69 DUP5 DUP3 DUP6 ADD PUSH2 0x1C33 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C84 DUP2 PUSH2 0x1C72 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C9D PUSH0 DUP4 ADD DUP5 PUSH2 0x1C7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CB6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B8B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CC5 DUP2 PUSH2 0x1B82 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CCF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CE0 DUP2 PUSH2 0x1CBC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CFB JUMPI PUSH2 0x1CFA PUSH2 0x1C19 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D08 DUP5 DUP3 DUP6 ADD PUSH2 0x1CD2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D34 PUSH2 0x1D2F PUSH2 0x1D2A DUP5 PUSH2 0x1BC1 JUMP JUMPDEST PUSH2 0x1D11 JUMP JUMPDEST PUSH2 0x1BC1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D45 DUP3 PUSH2 0x1D1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D56 DUP3 PUSH2 0x1D3B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D66 DUP2 PUSH2 0x1D4C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D7F PUSH0 DUP4 ADD DUP5 PUSH2 0x1D5D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D98 PUSH0 DUP4 ADD DUP6 PUSH2 0x1BF1 JUMP JUMPDEST PUSH2 0x1DA5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B8B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DC2 JUMPI PUSH2 0x1DC1 PUSH2 0x1C19 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DCF DUP6 DUP3 DUP7 ADD PUSH2 0x1CD2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DE0 DUP6 DUP3 DUP7 ADD PUSH2 0x1C33 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420696E70757420746F6B656E00000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E2E PUSH1 0x13 DUP4 PUSH2 0x1DEA JUMP JUMPDEST SWAP2 POP PUSH2 0x1E39 DUP3 PUSH2 0x1DFA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E5B DUP2 PUSH2 0x1E22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E80 DUP2 PUSH2 0x1E62 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E8A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E9B DUP2 PUSH2 0x1E77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EAA DUP2 PUSH2 0x1C72 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EB4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1EC5 DUP2 PUSH2 0x1EA1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1ED9 DUP2 PUSH2 0x1CBC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1EF8 JUMPI PUSH2 0x1EF7 PUSH2 0x1C19 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F05 DUP9 DUP3 DUP10 ADD PUSH2 0x1E8D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1F16 DUP9 DUP3 DUP10 ADD PUSH2 0x1EB7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1F27 DUP9 DUP3 DUP10 ADD PUSH2 0x1ECB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1F38 DUP9 DUP3 DUP10 ADD PUSH2 0x1ECB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x1F49 DUP9 DUP3 DUP10 ADD PUSH2 0x1E8D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1F8D DUP3 PUSH2 0x1C72 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F98 DUP4 PUSH2 0x1C72 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1FA6 DUP2 PUSH2 0x1C72 JUMP JUMPDEST SWAP2 POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP5 EQ PUSH0 DUP5 SLT AND ISZERO PUSH2 0x1FDD JUMPI PUSH2 0x1FDC PUSH2 0x1F56 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1FF2 JUMPI PUSH2 0x1FF1 PUSH2 0x1F56 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2003 DUP3 PUSH2 0x1B82 JUMP JUMPDEST SWAP2 POP PUSH2 0x200E DUP4 PUSH2 0x1B82 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x201C DUP2 PUSH2 0x1B82 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2033 JUMPI PUSH2 0x2032 PUSH2 0x1F56 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2071 DUP3 PUSH2 0x1B82 JUMP JUMPDEST SWAP2 POP PUSH2 0x207C DUP4 PUSH2 0x1B82 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x208C JUMPI PUSH2 0x208B PUSH2 0x203A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20AC JUMPI PUSH2 0x20AB PUSH2 0x1C19 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20B9 DUP5 DUP3 DUP6 ADD PUSH2 0x1ECB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20CC DUP3 PUSH2 0x1C72 JUMP JUMPDEST SWAP2 POP PUSH2 0x20D7 DUP4 PUSH2 0x1C72 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x20E7 JUMPI PUSH2 0x20E6 PUSH2 0x203A JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH0 SUB DUP4 EQ PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP4 EQ AND ISZERO PUSH2 0x211F JUMPI PUSH2 0x211E PUSH2 0x1F56 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x526573657276657320617265206E6F7420736574000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x215E PUSH1 0x14 DUP4 PUSH2 0x1DEA JUMP JUMPDEST SWAP2 POP PUSH2 0x2169 DUP3 PUSH2 0x212A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x218B DUP2 PUSH2 0x2152 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x21A5 PUSH0 DUP4 ADD DUP7 PUSH2 0x1BF1 JUMP JUMPDEST PUSH2 0x21B2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1BF1 JUMP JUMPDEST PUSH2 0x21BF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B8B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21DB DUP2 PUSH2 0x21C7 JUMP JUMPDEST DUP2 EQ PUSH2 0x21E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x21F6 DUP2 PUSH2 0x21D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2211 JUMPI PUSH2 0x2210 PUSH2 0x1C19 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x221E DUP5 DUP3 DUP6 ADD PUSH2 0x21E8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2231 DUP3 PUSH2 0x1B82 JUMP JUMPDEST SWAP2 POP PUSH2 0x223C DUP4 PUSH2 0x1B82 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2254 JUMPI PUSH2 0x2253 PUSH2 0x1F56 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2264 DUP3 PUSH2 0x1B82 JUMP JUMPDEST SWAP2 POP PUSH2 0x226F DUP4 PUSH2 0x1B82 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2287 JUMPI PUSH2 0x2286 PUSH2 0x1F56 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206C697175696469747900000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22C1 PUSH1 0x16 DUP4 PUSH2 0x1DEA JUMP JUMPDEST SWAP2 POP PUSH2 0x22CC DUP3 PUSH2 0x228D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22EE DUP2 PUSH2 0x22B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206C69717569646974792072656D6F7665640000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2329 PUSH1 0x1E DUP4 PUSH2 0x1DEA JUMP JUMPDEST SWAP2 POP PUSH2 0x2334 DUP3 PUSH2 0x22F5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2356 DUP2 PUSH2 0x231D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2370 PUSH0 DUP4 ADD DUP9 PUSH2 0x1B8B JUMP JUMPDEST PUSH2 0x237D PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1B8B JUMP JUMPDEST PUSH2 0x238A PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1B8B JUMP JUMPDEST PUSH2 0x2397 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1B8B JUMP JUMPDEST PUSH2 0x23A4 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1B8B JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206C69717569646974792070726F766964656400 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23E2 PUSH1 0x1F DUP4 PUSH2 0x1DEA JUMP JUMPDEST SWAP2 POP PUSH2 0x23ED DUP3 PUSH2 0x23AE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x240F DUP2 PUSH2 0x23D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY 0x28 PUSH2 0x50B3 CALLCODE 0xF RETURN CHAINID 0xCA PUSH0 0x29 0xAE 0xFC 0x1E 0xBD MUL 0xC2 0x4B 0xC8 0xA7 PUSH23 0x73463ED48AD45EDDEF4B64736F6C634300081400330000 ",
			"sourceMap": "252:11024:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5495:108;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;310:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5847:447;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;470:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4621:714;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6450:297;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;500:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;366:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3051:574;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9298:232;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9734:297;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11088:185;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;7813:1303;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;338:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7032:559;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5495:108;5539:7;5548;5576:8;;5586;;5568:27;;;;5495:108;;:::o;310:21::-;;;;;;;;;;;;:::o;5847:447::-;5906:3;5944:6;;;;;;;;;;;5930:20;;:10;:20;;;:44;;;;5968:6;;;;;;;;;;;5954:20;;:10;:20;;;5930:44;5922:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;6011:9;6049:6;;;;;;;;;;;6035:20;;:10;:20;;;6031:170;;6086:10;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6072:42;;;;;;;;;;;;;;;6031:170;;;6161:10;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6147:42;;;;;;;;;;;;;;;6031:170;6226:6;6218:5;:14;;;;:::i;:::-;6211:21;;;5847:447;;;:::o;470:23::-;;;;:::o;4621:714::-;4755:14;4780:16;4789:6;;;;;;;;;;4780:8;:16::i;:::-;4755:42;;4808:14;4833:16;4842:6;;;;;;;;;;;4833:8;:16::i;:::-;4808:42;;4958:15;5004:6;5000:1;:10;;;;:::i;:::-;4989:6;4977:9;:18;;;;:::i;:::-;4976:35;;;;:::i;:::-;4958:53;;5022:15;5068:6;5064:1;:10;;;;:::i;:::-;5053:6;5041:9;:18;;;;:::i;:::-;5040:35;;;;:::i;:::-;5022:53;;5134:17;5154:91;5192:8;;5168:7;;;;;;;;;;;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5158:7;:31;;;;:::i;:::-;:42;;;;:::i;:::-;5236:8;;5212:7;;;;;;;;;;;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5202:7;:31;;;;:::i;:::-;:42;;;;:::i;:::-;5154:3;:91::i;:::-;5134:111;;5301:26;5317:9;5301:15;:26::i;:::-;4679:656;;;;;4621:714;:::o;6450:297::-;6496:3;6514:10;6531;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6512:47;;;;;;6572:10;6589;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6570:47;;;;;;6677:6;6668;:15;;;;:::i;:::-;6656:7;6645:6;6636;:15;;;;:::i;:::-;6635:29;;;;:::i;:::-;:49;;;;:::i;:::-;6628:56;;;;6450:297;:::o;500:23::-;;;;:::o;366:22::-;;;;;;;;;;;;;:::o;3051:574::-;3182:14;3207:16;3216:6;;;;;;;;;;3207:8;:16::i;:::-;3182:42;;3235:14;3260:16;3269:6;;;;;;;;;;;3260:8;:16::i;:::-;3235:42;;3385:15;3431:6;3427:1;:10;;;;:::i;:::-;3416:6;3404:9;:18;;;;:::i;:::-;3403:35;;;;:::i;:::-;3385:53;;3449:15;3495:6;3491:1;:10;;;;:::i;:::-;3480:6;3468:9;:18;;;;:::i;:::-;3467:35;;;;:::i;:::-;3449:53;;3587:30;3600:7;3609;3587:12;:30::i;:::-;3106:519;;;;3051:574;:::o;9298:232::-;9355:7;9394:1;9383:8;;:12;:28;;;;;9410:1;9399:8;;:12;9383:28;9375:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;9476:8;;9466:6;9455:8;;:17;;;;:::i;:::-;9454:30;;;;:::i;:::-;9447:37;;9298:232;:::o;9734:297::-;9791:7;9813:10;9830;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9811:47;;;;;;9871:10;9888;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9869:47;;;;;;9971:6;9953;9943;9935:24;;;;:::i;:::-;9934:44;;;;:::i;:::-;9927:51;;;;9734:297;:::o;11088:185::-;11150:7;11159;11179:15;11197:7;;;;;;;;;;;:17;;;11215:4;11197:23;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11179:41;;11247:7;;;;;;;;;;;11257;11231:34;;;;;11088:185;;;:::o;7813:1303::-;7913:6;;;;;;;;;;7899:20;;:10;:20;;;:44;;;;7937:6;;;;;;;;;;;7923:20;;:10;:20;;;7899:44;7891:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;8045:14;8070:16;8079:6;;;;;;;;;;8070:8;:16::i;:::-;8045:42;;8098:14;8123:16;8132:6;;;;;;;;;;;8123:8;:16::i;:::-;8098:42;;8153:18;8189:6;;;;;;;;;;;8175:20;;:10;:20;;;8153:43;;8207:19;8229:13;:31;;8254:6;;;;;;;;;;8229:31;;;8245:6;;;;;;;;;;;8229:31;8207:53;;8271:18;8292:13;:31;;8317:6;8292:31;;;8308:6;8292:31;8271:52;;8408:16;8450:10;8440:6;8428:9;:18;;;;:::i;:::-;8427:33;;;;:::i;:::-;8408:52;;8545:17;8565:34;8578:8;8588:10;8565:12;:34::i;:::-;8545:54;;8683:10;8676:31;;;8708:10;8728:4;8735:8;8676:68;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8829:11;8822:28;;;8851:10;8863:9;8822:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8922:13;8918:191;;;8964:8;8952;;:20;;;;;;;:::i;:::-;;;;;;;;8999:9;8987:8;;:21;;;;;;;:::i;:::-;;;;;;;;8918:191;;;9053:8;9041;;:20;;;;;;;:::i;:::-;;;;;;;;9088:9;9076:8;;:21;;;;;;;:::i;:::-;;;;;;;;8918:191;7880:1236;;;;;;;7813:1303;;:::o;338:21::-;;;;;;;;;;;;;:::o;7032:559::-;7113:17;7165:6;;;;;;;;;;;7151:20;;:10;:20;;;:44;;;;7189:6;;;;;;;;;;;7175:20;;:10;:20;;;7151:44;7143:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;7230:18;7266:6;;;;;;;;;;;7252:20;;:10;:20;;;7230:43;;7284:20;7307:13;:35;;7334:8;;7307:35;;;7323:8;;7307:35;7284:58;;7353:21;7377:13;:35;;7404:8;;7377:35;;;7393:8;;7377:35;7353:59;;7423:23;7466:4;7460:3;7449:8;:14;;;;:::i;:::-;:21;;;;:::i;:::-;7423:47;;7567:15;7552:12;:30;;;;:::i;:::-;7535:13;7517:15;:31;;;;:::i;:::-;:66;;;;:::i;:::-;7505:78;;7132:459;;;;7032:559;;;;:::o;10745:96::-;10797:6;10824:1;10820;:5;:13;;10832:1;10820:13;;;10828:1;10820:13;10816:17;;10745:96;;;;:::o;3769:667::-;3853:1;3841:9;:13;3833:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;3894:15;3935:7;;;;;;;;;;;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3924:8;;3912:9;:20;;;;:::i;:::-;:44;;;;:::i;:::-;3894:62;;3967:15;4008:7;;;;;;;;;;;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3997:8;;3985:9;:20;;;;:::i;:::-;:44;;;;:::i;:::-;3967:62;;4060:1;4050:7;:11;:26;;;;;4075:1;4065:7;:11;4050:26;4042:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;4124:7;;;;;;;;;;;:12;;;4137:10;4149:9;4124:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4179:6;;;;;;;;;;4172:23;;;4196:10;4208:7;4172:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4234:6;;;;;;;;;;;4227:23;;;4251:10;4263:7;4227:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4296:7;4284:8;;:19;;;;;;;:::i;:::-;;;;;;;;4326:7;4314:8;;:19;;;;;;;:::i;:::-;;;;;;;;4368:10;4351:77;;;4380:7;4389;4398:9;4409:8;;4419;;4351:77;;;;;;;;;;:::i;:::-;;;;;;;;3822:614;;3769:667;:::o;2112:760::-;2195:6;;;;;;;;;;2188:27;;;2216:10;2236:4;2243:7;2188:63;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2269:6;;;;;;;;;;;2262:27;;;2290:10;2310:4;2317:7;2262:63;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2338:17;2395:1;2370:7;;;;;;;;;;;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:26;2366:230;;2425:23;2440:7;2430;:17;;;;:::i;:::-;2425:4;:23::i;:::-;2413:35;;2366:230;;;2493:91;2531:8;;2507:7;;;;;;;;;;;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2497:7;:31;;;;:::i;:::-;:42;;;;:::i;:::-;2575:8;;2551:7;;;;;;;;;;;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2541:7;:31;;;;:::i;:::-;:42;;;;:::i;:::-;2493:3;:91::i;:::-;2481:103;;2366:230;2628:1;2616:9;:13;2608:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;2676:7;;;;;;;;;;;:12;;;2689:10;2701:9;2676:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2736:7;2724:8;;:19;;;;;;;:::i;:::-;;;;;;;;2766:7;2754:8;;:19;;;;;;;:::i;:::-;;;;;;;;2804:10;2789:75;;;2816:7;2825;2834:9;2845:8;;2855;;2789:75;;;;;;;;;;:::i;:::-;;;;;;;;2177:695;2112:760;;:::o;10250:303::-;10295:6;10322:1;10318;:5;10314:232;;;10344:1;10340:5;;10360:6;10377:1;10373;10369;:5;;;;:::i;:::-;:9;;;;:::i;:::-;10360:18;;10393:92;10404:1;10400;:5;10393:92;;;10430:1;10426:5;;10468:1;10463;10459;10455;:5;;;;:::i;:::-;:9;;;;:::i;:::-;10454:15;;;;:::i;:::-;10450:19;;10393:92;;;10325:171;10314:232;;;10511:1;10506;:6;10502:44;;10533:1;10529:5;;10502:44;10314:232;10250:303;;;:::o;7:77:8:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:332::-;335:4;373:2;362:9;358:18;350:26;;386:71;454:1;443:9;439:17;430:6;386:71;:::i;:::-;467:72;535:2;524:9;520:18;511:6;467:72;:::i;:::-;214:332;;;;;:::o;552:126::-;589:7;629:42;622:5;618:54;607:65;;552:126;;;:::o;684:96::-;721:7;750:24;768:5;750:24;:::i;:::-;739:35;;684:96;;;:::o;786:118::-;873:24;891:5;873:24;:::i;:::-;868:3;861:37;786:118;;:::o;910:222::-;1003:4;1041:2;1030:9;1026:18;1018:26;;1054:71;1122:1;1111:9;1107:17;1098:6;1054:71;:::i;:::-;910:222;;;;:::o;1219:117::-;1328:1;1325;1318:12;1465:122;1538:24;1556:5;1538:24;:::i;:::-;1531:5;1528:35;1518:63;;1577:1;1574;1567:12;1518:63;1465:122;:::o;1593:139::-;1639:5;1677:6;1664:20;1655:29;;1693:33;1720:5;1693:33;:::i;:::-;1593:139;;;;:::o;1738:329::-;1797:6;1846:2;1834:9;1825:7;1821:23;1817:32;1814:119;;;1852:79;;:::i;:::-;1814:119;1972:1;1997:53;2042:7;2033:6;2022:9;2018:22;1997:53;:::i;:::-;1987:63;;1943:117;1738:329;;;;:::o;2073:76::-;2109:7;2138:5;2127:16;;2073:76;;;:::o;2155:115::-;2240:23;2257:5;2240:23;:::i;:::-;2235:3;2228:36;2155:115;;:::o;2276:218::-;2367:4;2405:2;2394:9;2390:18;2382:26;;2418:69;2484:1;2473:9;2469:17;2460:6;2418:69;:::i;:::-;2276:218;;;;:::o;2500:222::-;2593:4;2631:2;2620:9;2616:18;2608:26;;2644:71;2712:1;2701:9;2697:17;2688:6;2644:71;:::i;:::-;2500:222;;;;:::o;2728:122::-;2801:24;2819:5;2801:24;:::i;:::-;2794:5;2791:35;2781:63;;2840:1;2837;2830:12;2781:63;2728:122;:::o;2856:139::-;2902:5;2940:6;2927:20;2918:29;;2956:33;2983:5;2956:33;:::i;:::-;2856:139;;;;:::o;3001:329::-;3060:6;3109:2;3097:9;3088:7;3084:23;3080:32;3077:119;;;3115:79;;:::i;:::-;3077:119;3235:1;3260:53;3305:7;3296:6;3285:9;3281:22;3260:53;:::i;:::-;3250:63;;3206:117;3001:329;;;;:::o;3336:60::-;3364:3;3385:5;3378:12;;3336:60;;;:::o;3402:142::-;3452:9;3485:53;3503:34;3512:24;3530:5;3512:24;:::i;:::-;3503:34;:::i;:::-;3485:53;:::i;:::-;3472:66;;3402:142;;;:::o;3550:126::-;3600:9;3633:37;3664:5;3633:37;:::i;:::-;3620:50;;3550:126;;;:::o;3682:141::-;3747:9;3780:37;3811:5;3780:37;:::i;:::-;3767:50;;3682:141;;;:::o;3829:161::-;3931:52;3977:5;3931:52;:::i;:::-;3926:3;3919:65;3829:161;;:::o;3996:252::-;4104:4;4142:2;4131:9;4127:18;4119:26;;4155:86;4238:1;4227:9;4223:17;4214:6;4155:86;:::i;:::-;3996:252;;;;:::o;4254:332::-;4375:4;4413:2;4402:9;4398:18;4390:26;;4426:71;4494:1;4483:9;4479:17;4470:6;4426:71;:::i;:::-;4507:72;4575:2;4564:9;4560:18;4551:6;4507:72;:::i;:::-;4254:332;;;;;:::o;4592:474::-;4660:6;4668;4717:2;4705:9;4696:7;4692:23;4688:32;4685:119;;;4723:79;;:::i;:::-;4685:119;4843:1;4868:53;4913:7;4904:6;4893:9;4889:22;4868:53;:::i;:::-;4858:63;;4814:117;4970:2;4996:53;5041:7;5032:6;5021:9;5017:22;4996:53;:::i;:::-;4986:63;;4941:118;4592:474;;;;;:::o;5072:169::-;5156:11;5190:6;5185:3;5178:19;5230:4;5225:3;5221:14;5206:29;;5072:169;;;;:::o;5247:::-;5387:21;5383:1;5375:6;5371:14;5364:45;5247:169;:::o;5422:366::-;5564:3;5585:67;5649:2;5644:3;5585:67;:::i;:::-;5578:74;;5661:93;5750:3;5661:93;:::i;:::-;5779:2;5774:3;5770:12;5763:19;;5422:366;;;:::o;5794:419::-;5960:4;5998:2;5987:9;5983:18;5975:26;;6047:9;6041:4;6037:20;6033:1;6022:9;6018:17;6011:47;6075:131;6201:4;6075:131;:::i;:::-;6067:139;;5794:419;;;:::o;6219:105::-;6255:7;6295:22;6288:5;6284:34;6273:45;;6219:105;;;:::o;6330:120::-;6402:23;6419:5;6402:23;:::i;:::-;6395:5;6392:34;6382:62;;6440:1;6437;6430:12;6382:62;6330:120;:::o;6456:141::-;6512:5;6543:6;6537:13;6528:22;;6559:32;6585:5;6559:32;:::i;:::-;6456:141;;;;:::o;6603:120::-;6675:23;6692:5;6675:23;:::i;:::-;6668:5;6665:34;6655:62;;6713:1;6710;6703:12;6655:62;6603:120;:::o;6729:141::-;6785:5;6816:6;6810:13;6801:22;;6832:32;6858:5;6832:32;:::i;:::-;6729:141;;;;:::o;6876:143::-;6933:5;6964:6;6958:13;6949:22;;6980:33;7007:5;6980:33;:::i;:::-;6876:143;;;;:::o;7025:971::-;7128:6;7136;7144;7152;7160;7209:3;7197:9;7188:7;7184:23;7180:33;7177:120;;;7216:79;;:::i;:::-;7177:120;7336:1;7361:63;7416:7;7407:6;7396:9;7392:22;7361:63;:::i;:::-;7351:73;;7307:127;7473:2;7499:63;7554:7;7545:6;7534:9;7530:22;7499:63;:::i;:::-;7489:73;;7444:128;7611:2;7637:64;7693:7;7684:6;7673:9;7669:22;7637:64;:::i;:::-;7627:74;;7582:129;7750:2;7776:64;7832:7;7823:6;7812:9;7808:22;7776:64;:::i;:::-;7766:74;;7721:129;7889:3;7916:63;7971:7;7962:6;7951:9;7947:22;7916:63;:::i;:::-;7906:73;;7860:129;7025:971;;;;;;;;:::o;8002:180::-;8050:77;8047:1;8040:88;8147:4;8144:1;8137:15;8171:4;8168:1;8161:15;8188:556;8227:7;8250:19;8267:1;8250:19;:::i;:::-;8245:24;;8283:19;8300:1;8283:19;:::i;:::-;8278:24;;8337:1;8334;8330:9;8359:29;8376:11;8359:29;:::i;:::-;8348:40;;8446:66;8443:1;8440:73;8436:1;8433;8429:9;8425:89;8422:115;;;8517:18;;:::i;:::-;8422:115;8687:1;8678:7;8673:16;8670:1;8667:23;8647:1;8640:9;8620:84;8597:140;;8717:18;;:::i;:::-;8597:140;8235:509;8188:556;;;;:::o;8750:410::-;8790:7;8813:20;8831:1;8813:20;:::i;:::-;8808:25;;8847:20;8865:1;8847:20;:::i;:::-;8842:25;;8902:1;8899;8895:9;8924:30;8942:11;8924:30;:::i;:::-;8913:41;;9103:1;9094:7;9090:15;9087:1;9084:22;9064:1;9057:9;9037:83;9014:139;;9133:18;;:::i;:::-;9014:139;8798:362;8750:410;;;;:::o;9166:180::-;9214:77;9211:1;9204:88;9311:4;9308:1;9301:15;9335:4;9332:1;9325:15;9352:185;9392:1;9409:20;9427:1;9409:20;:::i;:::-;9404:25;;9443:20;9461:1;9443:20;:::i;:::-;9438:25;;9482:1;9472:35;;9487:18;;:::i;:::-;9472:35;9529:1;9526;9522:9;9517:14;;9352:185;;;;:::o;9543:351::-;9613:6;9662:2;9650:9;9641:7;9637:23;9633:32;9630:119;;;9668:79;;:::i;:::-;9630:119;9788:1;9813:64;9869:7;9860:6;9849:9;9845:22;9813:64;:::i;:::-;9803:74;;9759:128;9543:351;;;;:::o;9900:385::-;9939:1;9956:19;9973:1;9956:19;:::i;:::-;9951:24;;9989:19;10006:1;9989:19;:::i;:::-;9984:24;;10027:1;10017:35;;10032:18;;:::i;:::-;10017:35;10218:1;10215;10211:9;10208:1;10205:16;10124:66;10121:1;10118:73;10101:130;10098:156;;;10234:18;;:::i;:::-;10098:156;10277:1;10274;10269:10;10264:15;;9900:385;;;;:::o;10291:170::-;10431:22;10427:1;10419:6;10415:14;10408:46;10291:170;:::o;10467:366::-;10609:3;10630:67;10694:2;10689:3;10630:67;:::i;:::-;10623:74;;10706:93;10795:3;10706:93;:::i;:::-;10824:2;10819:3;10815:12;10808:19;;10467:366;;;:::o;10839:419::-;11005:4;11043:2;11032:9;11028:18;11020:26;;11092:9;11086:4;11082:20;11078:1;11067:9;11063:17;11056:47;11120:131;11246:4;11120:131;:::i;:::-;11112:139;;10839:419;;;:::o;11264:442::-;11413:4;11451:2;11440:9;11436:18;11428:26;;11464:71;11532:1;11521:9;11517:17;11508:6;11464:71;:::i;:::-;11545:72;11613:2;11602:9;11598:18;11589:6;11545:72;:::i;:::-;11627;11695:2;11684:9;11680:18;11671:6;11627:72;:::i;:::-;11264:442;;;;;;:::o;11712:90::-;11746:7;11789:5;11782:13;11775:21;11764:32;;11712:90;;;:::o;11808:116::-;11878:21;11893:5;11878:21;:::i;:::-;11871:5;11868:32;11858:60;;11914:1;11911;11904:12;11858:60;11808:116;:::o;11930:137::-;11984:5;12015:6;12009:13;12000:22;;12031:30;12055:5;12031:30;:::i;:::-;11930:137;;;;:::o;12073:345::-;12140:6;12189:2;12177:9;12168:7;12164:23;12160:32;12157:119;;;12195:79;;:::i;:::-;12157:119;12315:1;12340:61;12393:7;12384:6;12373:9;12369:22;12340:61;:::i;:::-;12330:71;;12286:125;12073:345;;;;:::o;12424:191::-;12464:3;12483:20;12501:1;12483:20;:::i;:::-;12478:25;;12517:20;12535:1;12517:20;:::i;:::-;12512:25;;12560:1;12557;12553:9;12546:16;;12581:3;12578:1;12575:10;12572:36;;;12588:18;;:::i;:::-;12572:36;12424:191;;;;:::o;12621:194::-;12661:4;12681:20;12699:1;12681:20;:::i;:::-;12676:25;;12715:20;12733:1;12715:20;:::i;:::-;12710:25;;12759:1;12756;12752:9;12744:17;;12783:1;12777:4;12774:11;12771:37;;;12788:18;;:::i;:::-;12771:37;12621:194;;;;:::o;12821:172::-;12961:24;12957:1;12949:6;12945:14;12938:48;12821:172;:::o;12999:366::-;13141:3;13162:67;13226:2;13221:3;13162:67;:::i;:::-;13155:74;;13238:93;13327:3;13238:93;:::i;:::-;13356:2;13351:3;13347:12;13340:19;;12999:366;;;:::o;13371:419::-;13537:4;13575:2;13564:9;13560:18;13552:26;;13624:9;13618:4;13614:20;13610:1;13599:9;13595:17;13588:47;13652:131;13778:4;13652:131;:::i;:::-;13644:139;;13371:419;;;:::o;13796:180::-;13936:32;13932:1;13924:6;13920:14;13913:56;13796:180;:::o;13982:366::-;14124:3;14145:67;14209:2;14204:3;14145:67;:::i;:::-;14138:74;;14221:93;14310:3;14221:93;:::i;:::-;14339:2;14334:3;14330:12;14323:19;;13982:366;;;:::o;14354:419::-;14520:4;14558:2;14547:9;14543:18;14535:26;;14607:9;14601:4;14597:20;14593:1;14582:9;14578:17;14571:47;14635:131;14761:4;14635:131;:::i;:::-;14627:139;;14354:419;;;:::o;14779:664::-;14984:4;15022:3;15011:9;15007:19;14999:27;;15036:71;15104:1;15093:9;15089:17;15080:6;15036:71;:::i;:::-;15117:72;15185:2;15174:9;15170:18;15161:6;15117:72;:::i;:::-;15199;15267:2;15256:9;15252:18;15243:6;15199:72;:::i;:::-;15281;15349:2;15338:9;15334:18;15325:6;15281:72;:::i;:::-;15363:73;15431:3;15420:9;15416:19;15407:6;15363:73;:::i;:::-;14779:664;;;;;;;;:::o;15449:181::-;15589:33;15585:1;15577:6;15573:14;15566:57;15449:181;:::o;15636:366::-;15778:3;15799:67;15863:2;15858:3;15799:67;:::i;:::-;15792:74;;15875:93;15964:3;15875:93;:::i;:::-;15993:2;15988:3;15984:12;15977:19;;15636:366;;;:::o;16008:419::-;16174:4;16212:2;16201:9;16197:18;16189:26;;16261:9;16255:4;16251:20;16247:1;16236:9;16232:17;16225:47;16289:131;16415:4;16289:131;:::i;:::-;16281:139;;16008:419;;;:::o"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "1858400",
				"executionCost": "infinite",
				"totalCost": "infinite"
			},
			"external": {
				"addLiquidityInUSD(uint256)": "infinite",
				"getAmountOut(uint256,address)": "infinite",
				"getDAIperLinkMarketPrice()": "infinite",
				"getDAIperLinkOurDEXPrice()": "infinite",
				"getLPTokenDetails(address)": "infinite",
				"getPrice(address)": "infinite",
				"getPriceRatio()": "infinite",
				"getReserves()": "infinite",
				"lpToken()": "infinite",
				"removeLiquidityInUSD(uint256)": "infinite",
				"reserve0()": "2448",
				"reserve1()": "2514",
				"swapInUSD(uint256,address)": "infinite",
				"token0()": "2551",
				"token1()": "2574"
			},
			"internal": {
				"addLiquidity(uint256,uint256)": "infinite",
				"min(uint256,uint256)": "63",
				"removeLiquidity(uint256)": "infinite",
				"sqrt(uint256)": "infinite"
			}
		},
		"methodIdentifiers": {
			"addLiquidityInUSD(uint256)": "64e7b85a",
			"getAmountOut(uint256,address)": "f140a35a",
			"getDAIperLinkMarketPrice()": "a996944c",
			"getDAIperLinkOurDEXPrice()": "729132f9",
			"getLPTokenDetails(address)": "bff46a4c",
			"getPrice(address)": "41976e09",
			"getPriceRatio()": "54b2a769",
			"getReserves()": "0902f1ac",
			"lpToken()": "5fcbd285",
			"removeLiquidityInUSD(uint256)": "5444a39d",
			"reserve0()": "443cb4bc",
			"reserve1()": "5a76f25e",
			"swapInUSD(uint256,address)": "d0e7e07e",
			"token0()": "0dfe1681",
			"token1()": "d21220a7"
		}
	},
	"abi": [
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "_token0",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "_token1",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "_priceFeed0",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "_priceFeed1",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "_lpToken",
					"type": "address"
				}
			],
			"stateMutability": "nonpayable",
			"type": "constructor"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "provider",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "amount0",
					"type": "uint256"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "amount1",
					"type": "uint256"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "liquidity",
					"type": "uint256"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "reserve0",
					"type": "uint256"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "reserve1",
					"type": "uint256"
				}
			],
			"name": "LiquidityAdded",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "provider",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "amount0",
					"type": "uint256"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "amount1",
					"type": "uint256"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "liquidity",
					"type": "uint256"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "reserve0",
					"type": "uint256"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "reserve1",
					"type": "uint256"
				}
			],
			"name": "LiquidityRemoved",
			"type": "event"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "usdAmount",
					"type": "uint256"
				}
			],
			"name": "addLiquidityInUSD",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "amountIn",
					"type": "uint256"
				},
				{
					"internalType": "address",
					"name": "inputToken",
					"type": "address"
				}
			],
			"name": "getAmountOut",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "amountOut",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "getDAIperLinkMarketPrice",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "getDAIperLinkOurDEXPrice",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "user",
					"type": "address"
				}
			],
			"name": "getLPTokenDetails",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "inputToken",
					"type": "address"
				}
			],
			"name": "getPrice",
			"outputs": [
				{
					"internalType": "int256",
					"name": "",
					"type": "int256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "getPriceRatio",
			"outputs": [
				{
					"internalType": "int256",
					"name": "",
					"type": "int256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "getReserves",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "lpToken",
			"outputs": [
				{
					"internalType": "contract LPToken",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "usdAmount",
					"type": "uint256"
				}
			],
			"name": "removeLiquidityInUSD",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "reserve0",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "reserve1",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "usdAmount",
					"type": "uint256"
				},
				{
					"internalType": "address",
					"name": "inputToken",
					"type": "address"
				}
			],
			"name": "swapInUSD",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "token0",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "token1",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		}
	]
}