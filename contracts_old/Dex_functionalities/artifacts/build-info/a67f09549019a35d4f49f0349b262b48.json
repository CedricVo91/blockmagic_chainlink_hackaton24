{
	"id": "a67f09549019a35d4f49f0349b262b48",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"./LPToken.sol\";  // Import LPToken contract\r\n\r\ncontract Pair {\r\n    // Token addresses for the pair\r\n    address public token0;\r\n    address public token1;\r\n    LPToken public lpToken;  // LPToken contract instance\r\n\r\n    // Reserves of each token in the pair\r\n    uint256 public reserve0;\r\n    uint256 public reserve1;\r\n\r\n    // Chainlink price feeds for the tokens\r\n    AggregatorV3Interface internal priceFeed0;\r\n    AggregatorV3Interface internal priceFeed1;\r\n\r\n    // Event to log liquidity addition\r\n    event LiquidityAdded(address indexed provider, uint256 amount0, uint256 amount1, uint256 liquidity, uint256 reserve0, uint256 reserve1);\r\n    // Event to log liquidity removal\r\n    event LiquidityRemoved(address indexed provider, uint256 amount0, uint256 amount1, uint256 liquidity, uint256 reserve0, uint256 reserve1);\r\n\r\n    /**\r\n     * @dev Constructor to initialize the pair contract with token addresses and price feeds.\r\n     * @param _token0 Address of token0.\r\n     * @param _token1 Address of token1.\r\n     * @param _priceFeed0 Address of the Chainlink price feed for token0/USD.\r\n     * @param _priceFeed1 Address of the Chainlink price feed for token1/USD.\r\n     * @param _lpToken Address of the LP token contract.\r\n     */\r\n    constructor(\r\n        address _token0,\r\n        address _token1,\r\n        address _priceFeed0, // Price feed for token0/USD\r\n        address _priceFeed1,  // Price feed for token1/USD\r\n        address _lpToken      // Address of the LP token contract\r\n    ) {\r\n        token0 = _token0;\r\n        token1 = _token1;\r\n        priceFeed0 = AggregatorV3Interface(_priceFeed0);\r\n        priceFeed1 = AggregatorV3Interface(_priceFeed1);\r\n        lpToken = LPToken(_lpToken);\r\n    }\r\n\r\n    /**\r\n     * @dev Internal function to add liquidity to the pool.\r\n     * @param amount0 Amount of token0 to add.\r\n     * @param amount1 Amount of token1 to add.\r\n     */\r\n    function addLiquidity(uint256 amount0, uint256 amount1) internal {\r\n        IERC20(token0).transferFrom(msg.sender, address(this), amount0);\r\n        IERC20(token1).transferFrom(msg.sender, address(this), amount1);\r\n\r\n        uint256 liquidity;\r\n        if (lpToken.totalSupply() == 0) {\r\n            liquidity = sqrt(amount0 * amount1);\r\n        } else {\r\n            liquidity = min(amount0 * lpToken.totalSupply() / reserve0, amount1 * lpToken.totalSupply() / reserve1);\r\n        }\r\n\r\n        require(liquidity > 0, \"Insufficient liquidity provided\");\r\n        lpToken.mint(msg.sender, liquidity);\r\n\r\n        reserve0 += amount0;\r\n        reserve1 += amount1;\r\n        emit LiquidityAdded(msg.sender, amount0, amount1, liquidity, reserve0, reserve1);\r\n    }\r\n\r\n    /**\r\n     * @dev External function to add liquidity in USD equivalent without enforcing ratio.\r\n     * @param usdAmount Total USD value of liquidity to add.\r\n     */\r\n    function addLiquidityInUSD(uint256 usdAmount) external {\r\n        // Fetch the current prices of token0 and token1 in USD\r\n        uint256 price0 = uint256(getPrice(token0));\r\n        uint256 price1 = uint256(getPrice(token1));\r\n\r\n        // Calculate the amounts of token0 and token1 based on the USD value and their prices\r\n        uint256 amount0 = (usdAmount * 10**18) / (2 * price0);\r\n        uint256 amount1 = (usdAmount * 10**18) / (2 * price1);\r\n\r\n        // Add liquidity to the pool without enforcing the ratio check\r\n        addLiquidity(amount0, amount1);\r\n    }\r\n\r\n    /**\r\n     * @dev Internal function to remove liquidity from the pool.\r\n     * @param liquidity Total liquidity to remove.\r\n     */\r\n    function removeLiquidity(uint256 liquidity) internal {\r\n        require(liquidity > 0, \"Insufficient liquidity\");\r\n\r\n        uint256 amount0 = liquidity * reserve0 / lpToken.totalSupply();\r\n        uint256 amount1 = liquidity * reserve1 / lpToken.totalSupply();\r\n\r\n        require(amount0 > 0 && amount1 > 0, \"Insufficient liquidity removed\");\r\n\r\n        lpToken.burn(msg.sender, liquidity);\r\n\r\n        IERC20(token0).transfer(msg.sender, amount0);\r\n        IERC20(token1).transfer(msg.sender, amount1);\r\n\r\n        reserve0 -= amount0;\r\n        reserve1 -= amount1;\r\n\r\n        emit LiquidityRemoved(msg.sender, amount0, amount1, liquidity, reserve0, reserve1);\r\n    }\r\n\r\n    /**\r\n     * @dev External function to remove liquidity in USD equivalent without enforcing ratio.\r\n     * @param usdAmount Total USD value of liquidity to remove.\r\n     */\r\n    function removeLiquidityInUSD(uint256 usdAmount) external {\r\n        // Fetch the current prices of token0 and token1 in USD\r\n        uint256 price0 = uint256(getPrice(token0));\r\n        uint256 price1 = uint256(getPrice(token1));\r\n\r\n        // Calculate the amounts of token0 and token1 based on the USD value and their prices\r\n        uint256 amount0 = (usdAmount * 10**18) / (2 * price0);\r\n        uint256 amount1 = (usdAmount * 10**18) / (2 * price1);\r\n\r\n        // Calculate the liquidity to remove\r\n        uint256 liquidity = min(amount0 * lpToken.totalSupply() / reserve0, amount1 * lpToken.totalSupply() / reserve1);\r\n\r\n        // Remove liquidity from the pool\r\n        removeLiquidity(liquidity);\r\n    }\r\n\r\n    /**\r\n     * @dev View function to get the current reserves of the pool.\r\n     * @return (uint256, uint256) Reserves of token0 and token1.\r\n     */\r\n    function getReserves() public view returns (uint256, uint256) {\r\n        return (reserve0, reserve1);\r\n    }\r\n\r\n    /**\r\n     * @dev View function to get the current price of a token from the Chainlink price feed.\r\n     * @param inputToken Address of the token to get the price for.\r\n     * @return int Current price of the token in USD.\r\n     */\r\n    function getPrice(address inputToken) public view returns (int) {\r\n        require(inputToken == token0 || inputToken == token1, \"Invalid input token\");\r\n\r\n        int price;\r\n        if (inputToken == token0) {\r\n            (,price,,,) = priceFeed0.latestRoundData();\r\n        } else {\r\n            (,price,,,) = priceFeed1.latestRoundData();\r\n        }\r\n        return price * 10**10; // Adjusting 8 decimals from Chainlink to 18 decimals\r\n    }\r\n\r\n    /**\r\n     * @dev View function to get the price ratio between token0 and token1.\r\n     * @return int Price ratio of token0 to token1.\r\n     */\r\n    function getPriceRatio() public view returns (int) {\r\n        (,int price0,,,) = priceFeed0.latestRoundData();\r\n        (,int price1,,,) = priceFeed1.latestRoundData();\r\n        return (price0 * 10**10) * (10 ** 8) / (price1 * 10**10);  // Adjusting 8 decimals from Chainlink to 18 decimals\r\n    }\r\n\r\n \r\n     // @dev View function to calculate the output amount for a given input amount using the AMM formula.\r\n     // @param amountIn Amount of the input token.\r\n     // @param inputToken Address of the input token.\r\n     // @return uint256 Amount of the output token.\r\n     \r\n    function getAmountOut(uint256 amountIn, address inputToken) public view returns (uint256 amountOut) {\r\n        require(inputToken == token0 || inputToken == token1, \"Invalid input token\");\r\n        bool isInputToken0 = (inputToken == token0);\r\n        uint256 inputReserve = isInputToken0 ? reserve0 : reserve1;\r\n        uint256 outputReserve = isInputToken0 ? reserve1 : reserve0;\r\n        uint256 amountInWithFee = amountIn * 997 / 1000;  // Applying a 0.3% fee\r\n        amountOut = amountInWithFee * outputReserve / (inputReserve + amountInWithFee);\r\n    }\r\n\r\n    /**\r\n     * @dev External function to swap tokens using USD value.\r\n     * @param usdAmount Amount of USD to swap from inputToken to outputToken.\r\n     * @param inputToken Address of the input token.\r\n     */\r\n    function swapInUSD(uint256 usdAmount, address inputToken) external {\r\n        require(inputToken == token0 || inputToken == token1, \"Invalid input token\");\r\n\r\n        // Fetch the current prices of token0 and token1 in USD\r\n        uint256 price0 = uint256(getPrice(token0));\r\n        uint256 price1 = uint256(getPrice(token1));\r\n\r\n        bool isInputToken0 = (inputToken == token0);\r\n        address outputToken = isInputToken0 ? token1 : token0;\r\n        uint256 inputPrice = isInputToken0 ? price0 : price1;\r\n\r\n        // Calculate the amount of input tokens based on the USD value\r\n        uint256 amountIn = (usdAmount * 10**18) / inputPrice;\r\n\r\n        // Calculate the amount of output tokens using the AMM formula\r\n        uint256 amountOut = getAmountOut(amountIn, inputToken);\r\n\r\n        // Transfer input tokens from the user to the contract\r\n        IERC20(inputToken).transferFrom(msg.sender, address(this), amountIn);\r\n\r\n        // Transfer output tokens from the contract to the user\r\n        IERC20(outputToken).transfer(msg.sender, amountOut);\r\n\r\n        // Update the reserves\r\n        if (isInputToken0) {\r\n            reserve0 += amountIn;\r\n            reserve1 -= amountOut;\r\n        } else {\r\n            reserve1 += amountIn;\r\n            reserve0 -= amountOut;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev View function to get the price of token0 in terms of token1 using the AMM formula.\r\n     * @return uint256 Price of token0 in terms of token1.\r\n     */\r\n    function getDAIperLinkOurDEXPrice() public view returns (uint256) {\r\n        require(reserve0 > 0 && reserve1 > 0, \"Reserves are not set\");\r\n        return (reserve1 * 10**18) / reserve0; // Price of token0 in terms of token1\r\n    }\r\n\r\n    /**\r\n     * @dev View function to get the current market price ratio of token0 to token1 using Chainlink price feeds.\r\n     * @return uint256 Market price ratio of token0 to token1.\r\n     */\r\n    function getDAIperLinkMarketPrice() public view returns (uint256) {\r\n        (,int price0,,,) = priceFeed0.latestRoundData();\r\n        (,int price1,,,) = priceFeed1.latestRoundData();\r\n        return (uint256(price0) * 10**18) / uint256(price1); // Market price of token0 in terms of token1\r\n    }\r\n\r\n    /**\r\n     * @dev Helper function to compute square root (required for LP token minting).\r\n     * @param y The number to compute the square root of.\r\n     * @return z The square root of the number.\r\n     */\r\n    function sqrt(uint y) internal pure returns (uint z) {\r\n        if (y > 3) {\r\n            z = y;\r\n            uint x = y / 2 + 1;\r\n            while (x < z) {\r\n                z = x;\r\n                x = (y / x + x) / 2;\r\n            }\r\n        } else if (y != 0) {\r\n            z = 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Helper function to find the minimum of two numbers.\r\n     * @param x First number.\r\n     * @param y Second number.\r\n     * @return z Minimum of x and y.\r\n     */\r\n    function min(uint x, uint y) internal pure returns (uint z) {\r\n        z = x < y ? x : y;\r\n    }\r\n\r\n    /**\r\n     * @dev View function to get LP token details and balance for a specific address.\r\n     * @param user Address of the user to check.\r\n     * @return (address, uint256) Address of the LP token and balance of the user.\r\n     */\r\n    function getLPTokenDetails(address user) public view returns (address, uint256) {\r\n        uint256 balance = lpToken.balanceOf(user);\r\n        return (address(lpToken), balance);\r\n    }\r\n}\r\n\r\n"
			},
			"contracts/blockmagic_hackaton/Dex_functionalities/LPToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\ncontract LPToken is ERC20 {\r\n    constructor(string memory name, string memory symbol) ERC20(name, symbol) {}\r\n\r\n    function mint(address to, uint256 amount) external {\r\n        _mint(to, amount);\r\n    }\r\n\r\n    function burn(address from, uint256 amount) external {\r\n        _burn(from, amount);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 205,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 211,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 213,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 215,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 217,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/blockmagic_hackaton/Dex_functionalities/LPToken.sol": {
				"LPToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/blockmagic_hackaton/Dex_functionalities/LPToken.sol\":120:426  contract LPToken is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/blockmagic_hackaton/Dex_functionalities/LPToken.sol\":153:229  constructor(string memory name, string memory symbol) ERC20(name, symbol) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/blockmagic_hackaton/Dex_functionalities/LPToken.sol\":213:217  name */\n  dup2\n    /* \"contracts/blockmagic_hackaton/Dex_functionalities/LPToken.sol\":219:225  symbol */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/blockmagic_hackaton/Dex_functionalities/LPToken.sol\":153:229  constructor(string memory name, string memory symbol) ERC20(name, symbol) {} */\n  pop\n  pop\n    /* \"contracts/blockmagic_hackaton/Dex_functionalities/LPToken.sol\":120:426  contract LPToken is ERC20 {... */\n  jump(tag_11)\n    /* \"#utility.yul\":7:82   */\ntag_12:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_13:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_14:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_15:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_16:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_17:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_18:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_19:\n    /* \"#utility.yul\":957:984   */\n  tag_53\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_17\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_55\n  tag_18\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1030:1118   */\ntag_54:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_20:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_57\n  tag_12\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_58\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_19\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_21:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_61\n  tag_18\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1434:1490   */\ntag_60:\n    /* \"#utility.yul\":1508:1537   */\n  tag_62\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_17\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_22:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_64:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_64)\ntag_66:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_23:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_68\n    /* \"#utility.yul\":1992:2041   */\n  tag_69\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_21\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1976:2042   */\n  tag_20\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_71\n  tag_16\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2117:2229   */\ntag_70:\n    /* \"#utility.yul\":2238:2290   */\n  tag_72\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_22\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_24:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_74\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_75\n  tag_15\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2399:2521   */\ntag_74:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_76\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_23\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:3530   */\ntag_3:\n    /* \"#utility.yul\":2776:2782   */\n  0x00\n    /* \"#utility.yul\":2784:2790   */\n  dup1\n    /* \"#utility.yul\":2833:2835   */\n  0x40\n    /* \"#utility.yul\":2821:2830   */\n  dup4\n    /* \"#utility.yul\":2812:2819   */\n  dup6\n    /* \"#utility.yul\":2808:2831   */\n  sub\n    /* \"#utility.yul\":2804:2836   */\n  slt\n    /* \"#utility.yul\":2801:2920   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":2839:2918   */\n  tag_79\n  tag_13\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2801:2920   */\ntag_78:\n    /* \"#utility.yul\":2980:2981   */\n  0x00\n    /* \"#utility.yul\":2969:2978   */\n  dup4\n    /* \"#utility.yul\":2965:2982   */\n  add\n    /* \"#utility.yul\":2959:2983   */\n  mload\n    /* \"#utility.yul\":3010:3028   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3002:3008   */\n  dup2\n    /* \"#utility.yul\":2999:3029   */\n  gt\n    /* \"#utility.yul\":2996:3113   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":3032:3111   */\n  tag_81\n  tag_14\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2996:3113   */\ntag_80:\n    /* \"#utility.yul\":3137:3211   */\n  tag_82\n    /* \"#utility.yul\":3203:3210   */\n  dup6\n    /* \"#utility.yul\":3194:3200   */\n  dup3\n    /* \"#utility.yul\":3183:3192   */\n  dup7\n    /* \"#utility.yul\":3179:3201   */\n  add\n    /* \"#utility.yul\":3137:3211   */\n  tag_24\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3127:3211   */\n  swap3\n  pop\n    /* \"#utility.yul\":2930:3221   */\n  pop\n    /* \"#utility.yul\":3281:3283   */\n  0x20\n    /* \"#utility.yul\":3270:3279   */\n  dup4\n    /* \"#utility.yul\":3266:3284   */\n  add\n    /* \"#utility.yul\":3260:3285   */\n  mload\n    /* \"#utility.yul\":3312:3330   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3304:3310   */\n  dup2\n    /* \"#utility.yul\":3301:3331   */\n  gt\n    /* \"#utility.yul\":3298:3415   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":3334:3413   */\n  tag_84\n  tag_14\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3298:3415   */\ntag_83:\n    /* \"#utility.yul\":3439:3513   */\n  tag_85\n    /* \"#utility.yul\":3505:3512   */\n  dup6\n    /* \"#utility.yul\":3496:3502   */\n  dup3\n    /* \"#utility.yul\":3485:3494   */\n  dup7\n    /* \"#utility.yul\":3481:3503   */\n  add\n    /* \"#utility.yul\":3439:3513   */\n  tag_24\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3429:3513   */\n  swap2\n  pop\n    /* \"#utility.yul\":3231:3523   */\n  pop\n    /* \"#utility.yul\":2677:3530   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3536:3635   */\ntag_25:\n    /* \"#utility.yul\":3588:3594   */\n  0x00\n    /* \"#utility.yul\":3622:3627   */\n  dup2\n    /* \"#utility.yul\":3616:3628   */\n  mload\n    /* \"#utility.yul\":3606:3628   */\n  swap1\n  pop\n    /* \"#utility.yul\":3536:3635   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3641:3821   */\ntag_26:\n    /* \"#utility.yul\":3689:3766   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3686:3687   */\n  0x00\n    /* \"#utility.yul\":3679:3767   */\n  mstore\n    /* \"#utility.yul\":3786:3790   */\n  0x22\n    /* \"#utility.yul\":3783:3784   */\n  0x04\n    /* \"#utility.yul\":3776:3791   */\n  mstore\n    /* \"#utility.yul\":3810:3814   */\n  0x24\n    /* \"#utility.yul\":3807:3808   */\n  0x00\n    /* \"#utility.yul\":3800:3815   */\n  revert\n    /* \"#utility.yul\":3827:4147   */\ntag_27:\n    /* \"#utility.yul\":3871:3877   */\n  0x00\n    /* \"#utility.yul\":3908:3909   */\n  0x02\n    /* \"#utility.yul\":3902:3906   */\n  dup3\n    /* \"#utility.yul\":3898:3910   */\n  div\n    /* \"#utility.yul\":3888:3910   */\n  swap1\n  pop\n    /* \"#utility.yul\":3955:3956   */\n  0x01\n    /* \"#utility.yul\":3949:3953   */\n  dup3\n    /* \"#utility.yul\":3945:3957   */\n  and\n    /* \"#utility.yul\":3976:3994   */\n  dup1\n    /* \"#utility.yul\":3966:4047   */\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4032:4036   */\n  0x7f\n    /* \"#utility.yul\":4024:4030   */\n  dup3\n    /* \"#utility.yul\":4020:4037   */\n  and\n    /* \"#utility.yul\":4010:4037   */\n  swap2\n  pop\n    /* \"#utility.yul\":3966:4047   */\ntag_89:\n    /* \"#utility.yul\":4094:4096   */\n  0x20\n    /* \"#utility.yul\":4086:4092   */\n  dup3\n    /* \"#utility.yul\":4083:4097   */\n  lt\n    /* \"#utility.yul\":4063:4081   */\n  dup2\n    /* \"#utility.yul\":4060:4098   */\n  sub\n    /* \"#utility.yul\":4057:4141   */\n  tag_90\n  jumpi\n    /* \"#utility.yul\":4113:4131   */\n  tag_91\n  tag_26\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4057:4141   */\ntag_90:\n    /* \"#utility.yul\":3878:4147   */\n  pop\n    /* \"#utility.yul\":3827:4147   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4153:4294   */\ntag_28:\n    /* \"#utility.yul\":4202:4206   */\n  0x00\n    /* \"#utility.yul\":4225:4228   */\n  dup2\n    /* \"#utility.yul\":4217:4228   */\n  swap1\n  pop\n    /* \"#utility.yul\":4248:4251   */\n  dup2\n    /* \"#utility.yul\":4245:4246   */\n  0x00\n    /* \"#utility.yul\":4238:4252   */\n  mstore\n    /* \"#utility.yul\":4282:4286   */\n  0x20\n    /* \"#utility.yul\":4279:4280   */\n  0x00\n    /* \"#utility.yul\":4269:4287   */\n  keccak256\n    /* \"#utility.yul\":4261:4287   */\n  swap1\n  pop\n    /* \"#utility.yul\":4153:4294   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4300:4393   */\ntag_29:\n    /* \"#utility.yul\":4337:4343   */\n  0x00\n    /* \"#utility.yul\":4384:4386   */\n  0x20\n    /* \"#utility.yul\":4379:4381   */\n  0x1f\n    /* \"#utility.yul\":4372:4377   */\n  dup4\n    /* \"#utility.yul\":4368:4382   */\n  add\n    /* \"#utility.yul\":4364:4387   */\n  div\n    /* \"#utility.yul\":4354:4387   */\n  swap1\n  pop\n    /* \"#utility.yul\":4300:4393   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4399:4506   */\ntag_30:\n    /* \"#utility.yul\":4443:4451   */\n  0x00\n    /* \"#utility.yul\":4493:4498   */\n  dup3\n    /* \"#utility.yul\":4487:4491   */\n  dup3\n    /* \"#utility.yul\":4483:4499   */\n  shl\n    /* \"#utility.yul\":4462:4499   */\n  swap1\n  pop\n    /* \"#utility.yul\":4399:4506   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4512:4905   */\ntag_31:\n    /* \"#utility.yul\":4581:4587   */\n  0x00\n    /* \"#utility.yul\":4631:4632   */\n  0x08\n    /* \"#utility.yul\":4619:4629   */\n  dup4\n    /* \"#utility.yul\":4615:4633   */\n  mul\n    /* \"#utility.yul\":4654:4751   */\n  tag_96\n    /* \"#utility.yul\":4684:4750   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4673:4682   */\n  dup3\n    /* \"#utility.yul\":4654:4751   */\n  tag_30\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":4772:4811   */\n  tag_97\n    /* \"#utility.yul\":4802:4810   */\n  dup7\n    /* \"#utility.yul\":4791:4800   */\n  dup4\n    /* \"#utility.yul\":4772:4811   */\n  tag_30\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4760:4811   */\n  swap6\n  pop\n    /* \"#utility.yul\":4844:4848   */\n  dup1\n    /* \"#utility.yul\":4840:4849   */\n  not\n    /* \"#utility.yul\":4833:4838   */\n  dup5\n    /* \"#utility.yul\":4829:4850   */\n  and\n    /* \"#utility.yul\":4820:4850   */\n  swap4\n  pop\n    /* \"#utility.yul\":4893:4897   */\n  dup1\n    /* \"#utility.yul\":4883:4891   */\n  dup7\n    /* \"#utility.yul\":4879:4898   */\n  and\n    /* \"#utility.yul\":4872:4877   */\n  dup5\n    /* \"#utility.yul\":4869:4899   */\n  or\n    /* \"#utility.yul\":4859:4899   */\n  swap3\n  pop\n    /* \"#utility.yul\":4588:4905   */\n  pop\n  pop\n    /* \"#utility.yul\":4512:4905   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4911:4988   */\ntag_32:\n    /* \"#utility.yul\":4948:4955   */\n  0x00\n    /* \"#utility.yul\":4977:4982   */\n  dup2\n    /* \"#utility.yul\":4966:4982   */\n  swap1\n  pop\n    /* \"#utility.yul\":4911:4988   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4994:5054   */\ntag_33:\n    /* \"#utility.yul\":5022:5025   */\n  0x00\n    /* \"#utility.yul\":5043:5048   */\n  dup2\n    /* \"#utility.yul\":5036:5048   */\n  swap1\n  pop\n    /* \"#utility.yul\":4994:5054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5060:5202   */\ntag_34:\n    /* \"#utility.yul\":5110:5119   */\n  0x00\n    /* \"#utility.yul\":5143:5196   */\n  tag_101\n    /* \"#utility.yul\":5161:5195   */\n  tag_102\n    /* \"#utility.yul\":5170:5194   */\n  tag_103\n    /* \"#utility.yul\":5188:5193   */\n  dup5\n    /* \"#utility.yul\":5170:5194   */\n  tag_32\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":5161:5195   */\n  tag_33\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":5143:5196   */\n  tag_32\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5130:5196   */\n  swap1\n  pop\n    /* \"#utility.yul\":5060:5202   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5208:5283   */\ntag_35:\n    /* \"#utility.yul\":5251:5254   */\n  0x00\n    /* \"#utility.yul\":5272:5277   */\n  dup2\n    /* \"#utility.yul\":5265:5277   */\n  swap1\n  pop\n    /* \"#utility.yul\":5208:5283   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5289:5558   */\ntag_36:\n    /* \"#utility.yul\":5399:5438   */\n  tag_106\n    /* \"#utility.yul\":5430:5437   */\n  dup4\n    /* \"#utility.yul\":5399:5438   */\n  tag_34\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5460:5551   */\n  tag_107\n    /* \"#utility.yul\":5509:5550   */\n  tag_108\n    /* \"#utility.yul\":5533:5549   */\n  dup3\n    /* \"#utility.yul\":5509:5550   */\n  tag_35\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":5501:5507   */\n  dup5\n    /* \"#utility.yul\":5494:5498   */\n  dup5\n    /* \"#utility.yul\":5488:5499   */\n  sload\n    /* \"#utility.yul\":5460:5551   */\n  tag_31\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5454:5458   */\n  dup3\n    /* \"#utility.yul\":5447:5552   */\n  sstore\n    /* \"#utility.yul\":5365:5558   */\n  pop\n    /* \"#utility.yul\":5289:5558   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5564:5637   */\ntag_37:\n    /* \"#utility.yul\":5609:5612   */\n  0x00\n    /* \"#utility.yul\":5564:5637   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5643:5832   */\ntag_38:\n    /* \"#utility.yul\":5720:5752   */\n  tag_111\n  tag_37\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":5761:5826   */\n  tag_112\n    /* \"#utility.yul\":5819:5825   */\n  dup2\n    /* \"#utility.yul\":5811:5817   */\n  dup5\n    /* \"#utility.yul\":5805:5809   */\n  dup5\n    /* \"#utility.yul\":5761:5826   */\n  tag_36\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5696:5832   */\n  pop\n    /* \"#utility.yul\":5643:5832   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5838:6024   */\ntag_39:\n    /* \"#utility.yul\":5898:6018   */\ntag_114:\n    /* \"#utility.yul\":5915:5918   */\n  dup2\n    /* \"#utility.yul\":5908:5913   */\n  dup2\n    /* \"#utility.yul\":5905:5919   */\n  lt\n    /* \"#utility.yul\":5898:6018   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":5969:6008   */\n  tag_117\n    /* \"#utility.yul\":6006:6007   */\n  0x00\n    /* \"#utility.yul\":5999:6004   */\n  dup3\n    /* \"#utility.yul\":5969:6008   */\n  tag_38\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":5942:5943   */\n  0x01\n    /* \"#utility.yul\":5935:5940   */\n  dup2\n    /* \"#utility.yul\":5931:5944   */\n  add\n    /* \"#utility.yul\":5922:5944   */\n  swap1\n  pop\n    /* \"#utility.yul\":5898:6018   */\n  jump(tag_114)\ntag_116:\n    /* \"#utility.yul\":5838:6024   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6030:6573   */\ntag_40:\n    /* \"#utility.yul\":6131:6133   */\n  0x1f\n    /* \"#utility.yul\":6126:6129   */\n  dup3\n    /* \"#utility.yul\":6123:6134   */\n  gt\n    /* \"#utility.yul\":6120:6566   */\n  iszero\n  tag_119\n  jumpi\n    /* \"#utility.yul\":6165:6203   */\n  tag_120\n    /* \"#utility.yul\":6197:6202   */\n  dup2\n    /* \"#utility.yul\":6165:6203   */\n  tag_28\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":6249:6278   */\n  tag_121\n    /* \"#utility.yul\":6267:6277   */\n  dup5\n    /* \"#utility.yul\":6249:6278   */\n  tag_29\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6239:6247   */\n  dup2\n    /* \"#utility.yul\":6235:6279   */\n  add\n    /* \"#utility.yul\":6432:6434   */\n  0x20\n    /* \"#utility.yul\":6420:6430   */\n  dup6\n    /* \"#utility.yul\":6417:6435   */\n  lt\n    /* \"#utility.yul\":6414:6463   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":6453:6461   */\n  dup2\n    /* \"#utility.yul\":6438:6461   */\n  swap1\n  pop\n    /* \"#utility.yul\":6414:6463   */\ntag_122:\n    /* \"#utility.yul\":6476:6556   */\n  tag_123\n    /* \"#utility.yul\":6532:6554   */\n  tag_124\n    /* \"#utility.yul\":6550:6553   */\n  dup6\n    /* \"#utility.yul\":6532:6554   */\n  tag_29\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6522:6530   */\n  dup4\n    /* \"#utility.yul\":6518:6555   */\n  add\n    /* \"#utility.yul\":6505:6516   */\n  dup3\n    /* \"#utility.yul\":6476:6556   */\n  tag_39\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":6135:6566   */\n  pop\n  pop\n    /* \"#utility.yul\":6120:6566   */\ntag_119:\n    /* \"#utility.yul\":6030:6573   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6579:6696   */\ntag_41:\n    /* \"#utility.yul\":6633:6641   */\n  0x00\n    /* \"#utility.yul\":6683:6688   */\n  dup3\n    /* \"#utility.yul\":6677:6681   */\n  dup3\n    /* \"#utility.yul\":6673:6689   */\n  shr\n    /* \"#utility.yul\":6652:6689   */\n  swap1\n  pop\n    /* \"#utility.yul\":6579:6696   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6702:6871   */\ntag_42:\n    /* \"#utility.yul\":6746:6752   */\n  0x00\n    /* \"#utility.yul\":6779:6830   */\n  tag_127\n    /* \"#utility.yul\":6827:6828   */\n  0x00\n    /* \"#utility.yul\":6823:6829   */\n  not\n    /* \"#utility.yul\":6815:6820   */\n  dup5\n    /* \"#utility.yul\":6812:6813   */\n  0x08\n    /* \"#utility.yul\":6808:6821   */\n  mul\n    /* \"#utility.yul\":6779:6830   */\n  tag_41\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":6775:6831   */\n  not\n    /* \"#utility.yul\":6860:6864   */\n  dup1\n    /* \"#utility.yul\":6854:6858   */\n  dup4\n    /* \"#utility.yul\":6850:6865   */\n  and\n    /* \"#utility.yul\":6840:6865   */\n  swap2\n  pop\n    /* \"#utility.yul\":6753:6871   */\n  pop\n    /* \"#utility.yul\":6702:6871   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6876:7171   */\ntag_43:\n    /* \"#utility.yul\":6952:6956   */\n  0x00\n    /* \"#utility.yul\":7098:7127   */\n  tag_129\n    /* \"#utility.yul\":7123:7126   */\n  dup4\n    /* \"#utility.yul\":7117:7121   */\n  dup4\n    /* \"#utility.yul\":7098:7127   */\n  tag_42\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":7090:7127   */\n  swap2\n  pop\n    /* \"#utility.yul\":7160:7163   */\n  dup3\n    /* \"#utility.yul\":7157:7158   */\n  0x02\n    /* \"#utility.yul\":7153:7164   */\n  mul\n    /* \"#utility.yul\":7147:7151   */\n  dup3\n    /* \"#utility.yul\":7144:7165   */\n  or\n    /* \"#utility.yul\":7136:7165   */\n  swap1\n  pop\n    /* \"#utility.yul\":6876:7171   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7176:8571   */\ntag_8:\n    /* \"#utility.yul\":7293:7330   */\n  tag_131\n    /* \"#utility.yul\":7326:7329   */\n  dup3\n    /* \"#utility.yul\":7293:7330   */\n  tag_25\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":7395:7413   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7387:7393   */\n  dup2\n    /* \"#utility.yul\":7384:7414   */\n  gt\n    /* \"#utility.yul\":7381:7437   */\n  iszero\n  tag_132\n  jumpi\n    /* \"#utility.yul\":7417:7435   */\n  tag_133\n  tag_18\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":7381:7437   */\ntag_132:\n    /* \"#utility.yul\":7461:7499   */\n  tag_134\n    /* \"#utility.yul\":7493:7497   */\n  dup3\n    /* \"#utility.yul\":7487:7498   */\n  sload\n    /* \"#utility.yul\":7461:7499   */\n  tag_27\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":7546:7613   */\n  tag_135\n    /* \"#utility.yul\":7606:7612   */\n  dup3\n    /* \"#utility.yul\":7598:7604   */\n  dup3\n    /* \"#utility.yul\":7592:7596   */\n  dup6\n    /* \"#utility.yul\":7546:7613   */\n  tag_40\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":7640:7641   */\n  0x00\n    /* \"#utility.yul\":7664:7668   */\n  0x20\n    /* \"#utility.yul\":7651:7668   */\n  swap1\n  pop\n    /* \"#utility.yul\":7696:7698   */\n  0x1f\n    /* \"#utility.yul\":7688:7694   */\n  dup4\n    /* \"#utility.yul\":7685:7699   */\n  gt\n    /* \"#utility.yul\":7713:7714   */\n  0x01\n    /* \"#utility.yul\":7708:8326   */\n  dup2\n  eq\n  tag_137\n  jumpi\n    /* \"#utility.yul\":8370:8371   */\n  0x00\n    /* \"#utility.yul\":8387:8393   */\n  dup5\n    /* \"#utility.yul\":8384:8461   */\n  iszero\n  tag_138\n  jumpi\n    /* \"#utility.yul\":8436:8445   */\n  dup3\n    /* \"#utility.yul\":8431:8434   */\n  dup8\n    /* \"#utility.yul\":8427:8446   */\n  add\n    /* \"#utility.yul\":8421:8447   */\n  mload\n    /* \"#utility.yul\":8412:8447   */\n  swap1\n  pop\n    /* \"#utility.yul\":8384:8461   */\ntag_138:\n    /* \"#utility.yul\":8487:8554   */\n  tag_139\n    /* \"#utility.yul\":8547:8553   */\n  dup6\n    /* \"#utility.yul\":8540:8545   */\n  dup3\n    /* \"#utility.yul\":8487:8554   */\n  tag_43\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":8481:8485   */\n  dup7\n    /* \"#utility.yul\":8474:8555   */\n  sstore\n    /* \"#utility.yul\":8343:8565   */\n  pop\n    /* \"#utility.yul\":7678:8565   */\n  jump(tag_136)\n    /* \"#utility.yul\":7708:8326   */\ntag_137:\n    /* \"#utility.yul\":7760:7764   */\n  0x1f\n    /* \"#utility.yul\":7756:7765   */\n  not\n    /* \"#utility.yul\":7748:7754   */\n  dup5\n    /* \"#utility.yul\":7744:7766   */\n  and\n    /* \"#utility.yul\":7794:7831   */\n  tag_140\n    /* \"#utility.yul\":7826:7830   */\n  dup7\n    /* \"#utility.yul\":7794:7831   */\n  tag_28\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":7853:7854   */\n  0x00\n    /* \"#utility.yul\":7867:8075   */\ntag_141:\n    /* \"#utility.yul\":7881:7888   */\n  dup3\n    /* \"#utility.yul\":7878:7879   */\n  dup2\n    /* \"#utility.yul\":7875:7889   */\n  lt\n    /* \"#utility.yul\":7867:8075   */\n  iszero\n  tag_143\n  jumpi\n    /* \"#utility.yul\":7960:7969   */\n  dup5\n    /* \"#utility.yul\":7955:7958   */\n  dup10\n    /* \"#utility.yul\":7951:7970   */\n  add\n    /* \"#utility.yul\":7945:7971   */\n  mload\n    /* \"#utility.yul\":7937:7943   */\n  dup3\n    /* \"#utility.yul\":7930:7972   */\n  sstore\n    /* \"#utility.yul\":8011:8012   */\n  0x01\n    /* \"#utility.yul\":8003:8009   */\n  dup3\n    /* \"#utility.yul\":7999:8013   */\n  add\n    /* \"#utility.yul\":7989:8013   */\n  swap2\n  pop\n    /* \"#utility.yul\":8058:8060   */\n  0x20\n    /* \"#utility.yul\":8047:8056   */\n  dup6\n    /* \"#utility.yul\":8043:8061   */\n  add\n    /* \"#utility.yul\":8030:8061   */\n  swap5\n  pop\n    /* \"#utility.yul\":7904:7908   */\n  0x20\n    /* \"#utility.yul\":7901:7902   */\n  dup2\n    /* \"#utility.yul\":7897:7909   */\n  add\n    /* \"#utility.yul\":7892:7909   */\n  swap1\n  pop\n    /* \"#utility.yul\":7867:8075   */\n  jump(tag_141)\ntag_143:\n    /* \"#utility.yul\":8103:8109   */\n  dup7\n    /* \"#utility.yul\":8094:8101   */\n  dup4\n    /* \"#utility.yul\":8091:8110   */\n  lt\n    /* \"#utility.yul\":8088:8267   */\n  iszero\n  tag_144\n  jumpi\n    /* \"#utility.yul\":8161:8170   */\n  dup5\n    /* \"#utility.yul\":8156:8159   */\n  dup10\n    /* \"#utility.yul\":8152:8171   */\n  add\n    /* \"#utility.yul\":8146:8172   */\n  mload\n    /* \"#utility.yul\":8204:8252   */\n  tag_145\n    /* \"#utility.yul\":8246:8250   */\n  0x1f\n    /* \"#utility.yul\":8238:8244   */\n  dup10\n    /* \"#utility.yul\":8234:8251   */\n  and\n    /* \"#utility.yul\":8223:8232   */\n  dup3\n    /* \"#utility.yul\":8204:8252   */\n  tag_42\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":8196:8202   */\n  dup4\n    /* \"#utility.yul\":8189:8253   */\n  sstore\n    /* \"#utility.yul\":8111:8267   */\n  pop\n    /* \"#utility.yul\":8088:8267   */\ntag_144:\n    /* \"#utility.yul\":8313:8314   */\n  0x01\n    /* \"#utility.yul\":8309:8310   */\n  0x02\n    /* \"#utility.yul\":8301:8307   */\n  dup9\n    /* \"#utility.yul\":8297:8311   */\n  mul\n    /* \"#utility.yul\":8293:8315   */\n  add\n    /* \"#utility.yul\":8287:8291   */\n  dup9\n    /* \"#utility.yul\":8280:8316   */\n  sstore\n    /* \"#utility.yul\":7715:8326   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7678:8565   */\ntag_136:\n  pop\n    /* \"#utility.yul\":7268:8571   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7176:8571   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/blockmagic_hackaton/Dex_functionalities/LPToken.sol\":120:426  contract LPToken is ERC20 {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/LPToken.sol\":120:426  contract LPToken is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x40c10f19\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/LPToken.sol\":237:324  function mint(address to, uint256 amount) external {... */\n    tag_8:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_10:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/LPToken.sol\":332:423  function burn(address from, uint256 amount) external {... */\n    tag_11:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n    tag_49:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_12:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_62\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_63\n      jump\t// in\n    tag_64:\n      dup1\n      iszero\n      tag_65\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_66\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_65)\n    tag_66:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_67:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_67\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_65:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_69\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_70\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_69:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_75\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_70\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_76\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_77\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/LPToken.sol\":237:324  function mint(address to, uint256 amount) external {... */\n    tag_40:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/LPToken.sol\":299:316  _mint(to, amount) */\n      tag_82\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/LPToken.sol\":305:307  to */\n      dup3\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/LPToken.sol\":309:315  amount */\n      dup3\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/LPToken.sol\":299:304  _mint */\n      tag_83\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/LPToken.sol\":299:316  _mint(to, amount) */\n      jump\t// in\n    tag_82:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/LPToken.sol\":237:324  function mint(address to, uint256 amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_63\n      jump\t// in\n    tag_86:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_87\n      swap1\n      tag_63\n      jump\t// in\n    tag_87:\n      dup1\n      iszero\n      tag_88\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_89\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_88)\n    tag_89:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_90:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_90\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_88:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/LPToken.sol\":332:423  function burn(address from, uint256 amount) external {... */\n    tag_51:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/LPToken.sol\":396:415  _burn(from, amount) */\n      tag_92\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/LPToken.sol\":402:406  from */\n      dup3\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/LPToken.sol\":408:414  amount */\n      dup3\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/LPToken.sol\":396:401  _burn */\n      tag_93\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/LPToken.sol\":396:415  _burn(from, amount) */\n      jump\t// in\n    tag_92:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/LPToken.sol\":332:423  function burn(address from, uint256 amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_70\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_59\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_104\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_105\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_110\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_113\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_115\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_118\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_120\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8336:8337  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8324  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n      tag_122\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8388:8389  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8419:8426  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8436:8437  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8440:8445  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8418  _update */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_126\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_128\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_130\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_131\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_133\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_134\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_136)\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_137\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_139\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_140)\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_141\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_142:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_143:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_144:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_169:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_169)\n    tag_171:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_145:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_146:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_174\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_142\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":818:889   */\n      tag_175\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_143\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_176\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_144\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":988:1017   */\n      tag_177\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_145\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_18:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_179\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_146\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_148:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_150:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_151:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_185\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_150\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_152:\n        /* \"#utility.yul\":1983:2007   */\n      tag_187\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_151\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_188\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_188:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_153:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_190\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_152\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_154:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_155:\n        /* \"#utility.yul\":2339:2363   */\n      tag_193\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_154\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_194\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_194:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_156:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_196\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_155\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_21:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_198\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_199\n      tag_148\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":2632:2751   */\n    tag_198:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_200\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_153\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_201\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_156\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_157:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_158:\n        /* \"#utility.yul\":3196:3217   */\n      tag_204\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_157\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_24:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_206\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_158\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_159:\n        /* \"#utility.yul\":3533:3557   */\n      tag_208\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_154\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_28:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_210\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_159\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_31:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_213\n      tag_148\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":3908:4027   */\n    tag_212:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_214\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_153\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_215\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_153\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_216\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_156\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_160:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_161:\n        /* \"#utility.yul\":4598:4620   */\n      tag_219\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_160\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_37:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_221\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_161\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5182   */\n    tag_43:\n        /* \"#utility.yul\":4912:4918   */\n      0x00\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"#utility.yul\":4949:4958   */\n      dup3\n        /* \"#utility.yul\":4940:4947   */\n      dup5\n        /* \"#utility.yul\":4936:4959   */\n      sub\n        /* \"#utility.yul\":4932:4964   */\n      slt\n        /* \"#utility.yul\":4929:5048   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":4967:5046   */\n      tag_224\n      tag_148\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":4929:5048   */\n    tag_223:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5112:5165   */\n      tag_225\n        /* \"#utility.yul\":5157:5164   */\n      dup5\n        /* \"#utility.yul\":5148:5154   */\n      dup3\n        /* \"#utility.yul\":5137:5146   */\n      dup6\n        /* \"#utility.yul\":5133:5155   */\n      add\n        /* \"#utility.yul\":5112:5165   */\n      tag_153\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":5102:5165   */\n      swap2\n      pop\n        /* \"#utility.yul\":5058:5175   */\n      pop\n        /* \"#utility.yul\":4853:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5662   */\n    tag_58:\n        /* \"#utility.yul\":5256:5262   */\n      0x00\n        /* \"#utility.yul\":5264:5270   */\n      dup1\n        /* \"#utility.yul\":5313:5315   */\n      0x40\n        /* \"#utility.yul\":5301:5310   */\n      dup4\n        /* \"#utility.yul\":5292:5299   */\n      dup6\n        /* \"#utility.yul\":5288:5311   */\n      sub\n        /* \"#utility.yul\":5284:5316   */\n      slt\n        /* \"#utility.yul\":5281:5400   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":5319:5398   */\n      tag_228\n      tag_148\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":5281:5400   */\n    tag_227:\n        /* \"#utility.yul\":5439:5440   */\n      0x00\n        /* \"#utility.yul\":5464:5517   */\n      tag_229\n        /* \"#utility.yul\":5509:5516   */\n      dup6\n        /* \"#utility.yul\":5500:5506   */\n      dup3\n        /* \"#utility.yul\":5489:5498   */\n      dup7\n        /* \"#utility.yul\":5485:5507   */\n      add\n        /* \"#utility.yul\":5464:5517   */\n      tag_153\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":5454:5517   */\n      swap3\n      pop\n        /* \"#utility.yul\":5410:5527   */\n      pop\n        /* \"#utility.yul\":5566:5568   */\n      0x20\n        /* \"#utility.yul\":5592:5645   */\n      tag_230\n        /* \"#utility.yul\":5637:5644   */\n      dup6\n        /* \"#utility.yul\":5628:5634   */\n      dup3\n        /* \"#utility.yul\":5617:5626   */\n      dup7\n        /* \"#utility.yul\":5613:5635   */\n      add\n        /* \"#utility.yul\":5592:5645   */\n      tag_153\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":5582:5645   */\n      swap2\n      pop\n        /* \"#utility.yul\":5537:5655   */\n      pop\n        /* \"#utility.yul\":5188:5662   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5668:5848   */\n    tag_162:\n        /* \"#utility.yul\":5716:5793   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5713:5714   */\n      0x00\n        /* \"#utility.yul\":5706:5794   */\n      mstore\n        /* \"#utility.yul\":5813:5817   */\n      0x22\n        /* \"#utility.yul\":5810:5811   */\n      0x04\n        /* \"#utility.yul\":5803:5818   */\n      mstore\n        /* \"#utility.yul\":5837:5841   */\n      0x24\n        /* \"#utility.yul\":5834:5835   */\n      0x00\n        /* \"#utility.yul\":5827:5842   */\n      revert\n        /* \"#utility.yul\":5854:6174   */\n    tag_63:\n        /* \"#utility.yul\":5898:5904   */\n      0x00\n        /* \"#utility.yul\":5935:5936   */\n      0x02\n        /* \"#utility.yul\":5929:5933   */\n      dup3\n        /* \"#utility.yul\":5925:5937   */\n      div\n        /* \"#utility.yul\":5915:5937   */\n      swap1\n      pop\n        /* \"#utility.yul\":5982:5983   */\n      0x01\n        /* \"#utility.yul\":5976:5980   */\n      dup3\n        /* \"#utility.yul\":5972:5984   */\n      and\n        /* \"#utility.yul\":6003:6021   */\n      dup1\n        /* \"#utility.yul\":5993:6074   */\n      tag_233\n      jumpi\n        /* \"#utility.yul\":6059:6063   */\n      0x7f\n        /* \"#utility.yul\":6051:6057   */\n      dup3\n        /* \"#utility.yul\":6047:6064   */\n      and\n        /* \"#utility.yul\":6037:6064   */\n      swap2\n      pop\n        /* \"#utility.yul\":5993:6074   */\n    tag_233:\n        /* \"#utility.yul\":6121:6123   */\n      0x20\n        /* \"#utility.yul\":6113:6119   */\n      dup3\n        /* \"#utility.yul\":6110:6124   */\n      lt\n        /* \"#utility.yul\":6090:6108   */\n      dup2\n        /* \"#utility.yul\":6087:6125   */\n      sub\n        /* \"#utility.yul\":6084:6168   */\n      tag_234\n      jumpi\n        /* \"#utility.yul\":6140:6158   */\n      tag_235\n      tag_162\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":6084:6168   */\n    tag_234:\n        /* \"#utility.yul\":5905:6174   */\n      pop\n        /* \"#utility.yul\":5854:6174   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6180:6298   */\n    tag_163:\n        /* \"#utility.yul\":6267:6291   */\n      tag_237\n        /* \"#utility.yul\":6285:6290   */\n      dup2\n        /* \"#utility.yul\":6267:6291   */\n      tag_151\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":6262:6265   */\n      dup3\n        /* \"#utility.yul\":6255:6292   */\n      mstore\n        /* \"#utility.yul\":6180:6298   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6304:6746   */\n    tag_107:\n        /* \"#utility.yul\":6453:6457   */\n      0x00\n        /* \"#utility.yul\":6491:6493   */\n      0x60\n        /* \"#utility.yul\":6480:6489   */\n      dup3\n        /* \"#utility.yul\":6476:6494   */\n      add\n        /* \"#utility.yul\":6468:6494   */\n      swap1\n      pop\n        /* \"#utility.yul\":6504:6575   */\n      tag_239\n        /* \"#utility.yul\":6572:6573   */\n      0x00\n        /* \"#utility.yul\":6561:6570   */\n      dup4\n        /* \"#utility.yul\":6557:6574   */\n      add\n        /* \"#utility.yul\":6548:6554   */\n      dup7\n        /* \"#utility.yul\":6504:6575   */\n      tag_163\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":6585:6657   */\n      tag_240\n        /* \"#utility.yul\":6653:6655   */\n      0x20\n        /* \"#utility.yul\":6642:6651   */\n      dup4\n        /* \"#utility.yul\":6638:6656   */\n      add\n        /* \"#utility.yul\":6629:6635   */\n      dup6\n        /* \"#utility.yul\":6585:6657   */\n      tag_159\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":6667:6739   */\n      tag_241\n        /* \"#utility.yul\":6735:6737   */\n      0x40\n        /* \"#utility.yul\":6724:6733   */\n      dup4\n        /* \"#utility.yul\":6720:6738   */\n      add\n        /* \"#utility.yul\":6711:6717   */\n      dup5\n        /* \"#utility.yul\":6667:6739   */\n      tag_159\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":6304:6746   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6752:6974   */\n    tag_112:\n        /* \"#utility.yul\":6845:6849   */\n      0x00\n        /* \"#utility.yul\":6883:6885   */\n      0x20\n        /* \"#utility.yul\":6872:6881   */\n      dup3\n        /* \"#utility.yul\":6868:6886   */\n      add\n        /* \"#utility.yul\":6860:6886   */\n      swap1\n      pop\n        /* \"#utility.yul\":6896:6967   */\n      tag_243\n        /* \"#utility.yul\":6964:6965   */\n      0x00\n        /* \"#utility.yul\":6953:6962   */\n      dup4\n        /* \"#utility.yul\":6949:6966   */\n      add\n        /* \"#utility.yul\":6940:6946   */\n      dup5\n        /* \"#utility.yul\":6896:6967   */\n      tag_163\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":6752:6974   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6980:7160   */\n    tag_164:\n        /* \"#utility.yul\":7028:7105   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7025:7026   */\n      0x00\n        /* \"#utility.yul\":7018:7106   */\n      mstore\n        /* \"#utility.yul\":7125:7129   */\n      0x11\n        /* \"#utility.yul\":7122:7123   */\n      0x04\n        /* \"#utility.yul\":7115:7130   */\n      mstore\n        /* \"#utility.yul\":7149:7153   */\n      0x24\n        /* \"#utility.yul\":7146:7147   */\n      0x00\n        /* \"#utility.yul\":7139:7154   */\n      revert\n        /* \"#utility.yul\":7166:7357   */\n    tag_135:\n        /* \"#utility.yul\":7206:7209   */\n      0x00\n        /* \"#utility.yul\":7225:7245   */\n      tag_246\n        /* \"#utility.yul\":7243:7244   */\n      dup3\n        /* \"#utility.yul\":7225:7245   */\n      tag_154\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":7220:7245   */\n      swap2\n      pop\n        /* \"#utility.yul\":7259:7279   */\n      tag_247\n        /* \"#utility.yul\":7277:7278   */\n      dup4\n        /* \"#utility.yul\":7259:7279   */\n      tag_154\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":7254:7279   */\n      swap3\n      pop\n        /* \"#utility.yul\":7302:7303   */\n      dup3\n        /* \"#utility.yul\":7299:7300   */\n      dup3\n        /* \"#utility.yul\":7295:7304   */\n      add\n        /* \"#utility.yul\":7288:7304   */\n      swap1\n      pop\n        /* \"#utility.yul\":7323:7326   */\n      dup1\n        /* \"#utility.yul\":7320:7321   */\n      dup3\n        /* \"#utility.yul\":7317:7327   */\n      gt\n        /* \"#utility.yul\":7314:7350   */\n      iszero\n      tag_248\n      jumpi\n        /* \"#utility.yul\":7330:7348   */\n      tag_249\n      tag_164\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":7314:7350   */\n    tag_248:\n        /* \"#utility.yul\":7166:7357   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206aa9ee7d1537134c49f6331d05e6a8a8f8f674aa50c3ba6f859f7d03563a943464736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_234": {
									"entryPoint": null,
									"id": 234,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_848": {
									"entryPoint": null,
									"id": 848,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 367,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 102,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 622,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1038,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 859,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1000,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1189,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 325,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 677,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 632,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 143,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 916,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 119,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 123,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 115,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 111,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 762,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1118,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 774,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 925,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 968,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8574:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:8"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:8"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:8",
														"type": ""
													}
												],
												"src": "580:102:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:8"
															},
															"nodeType": "YulIf",
															"src": "1030:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:8"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:8",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:8",
														"type": ""
													}
												],
												"src": "874:281:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:8"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:8"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:8"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:8",
														"type": ""
													}
												],
												"src": "1161:129:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:8"
															},
															"nodeType": "YulIf",
															"src": "1434:56:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:8"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:8"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:8",
														"type": ""
													}
												],
												"src": "1296:308:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1672:184:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1691:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1751:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:8"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1723:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1725:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1705:3:8",
																"statements": []
															},
															"src": "1701:113:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:8"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:27:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1654:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1659:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1664:6:8",
														"type": ""
													}
												],
												"src": "1610:246:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1957:339:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1967:75:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:8"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1976:66:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:16:8"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2146:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:8"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2120:25:8"
															},
															"nodeType": "YulIf",
															"src": "2117:112:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:8"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2238:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:8"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1930:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1935:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1943:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1951:5:8",
														"type": ""
													}
												],
												"src": "1862:434:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2389:282:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2438:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:35:8"
															},
															"nodeType": "YulIf",
															"src": "2399:122:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2544:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2566:99:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2575:90:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2367:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2375:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2383:5:8",
														"type": ""
													}
												],
												"src": "2316:355:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2791:739:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2837:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2839:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2839:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2839:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2812:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2821:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2808:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2808:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2833:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2804:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2804:32:8"
															},
															"nodeType": "YulIf",
															"src": "2801:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "2930:291:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2945:38:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2969:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2980:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2965:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2965:17:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2959:5:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2959:24:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2949:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3030:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3032:77:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3032:79:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3032:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3002:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3010:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2999:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2999:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "2996:117:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3127:84:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3183:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3194:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3179:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3179:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3203:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3137:41:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3137:74:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3127:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3231:292:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3246:39:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3270:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3281:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3266:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3266:18:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3260:25:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3250:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3332:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3334:77:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3334:79:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3334:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3304:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3312:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3301:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3301:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "3298:117:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3429:84:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3485:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3496:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3481:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3481:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3505:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3439:41:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3439:74:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3429:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2753:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2764:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2776:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2784:6:8",
														"type": ""
													}
												],
												"src": "2677:853:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3595:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3622:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3616:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3616:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3606:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3588:6:8",
														"type": ""
													}
												],
												"src": "3536:99:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3669:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3686:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3689:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3783:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3786:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3776:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3776:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3776:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3807:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3810:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3800:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3800:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3800:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3641:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3878:269:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3888:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3902:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3908:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3898:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3898:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3888:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3919:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3949:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3955:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3945:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3945:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3923:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3996:51:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4010:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4024:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4032:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4020:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4020:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4010:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3976:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3969:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3969:26:8"
															},
															"nodeType": "YulIf",
															"src": "3966:81:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4099:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4113:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4113:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4113:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4063:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4086:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4094:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4083:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4083:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4060:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4060:38:8"
															},
															"nodeType": "YulIf",
															"src": "4057:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3862:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3871:6:8",
														"type": ""
													}
												],
												"src": "3827:320:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4207:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4217:11:8",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "4225:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4217:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4245:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4248:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4238:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4238:14:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4238:14:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4261:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4279:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4282:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "4269:9:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4269:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4261:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4194:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4202:4:8",
														"type": ""
													}
												],
												"src": "4153:141:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4344:49:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4354:33:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4372:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4379:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4368:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4368:14:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4364:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4364:23:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4354:6:8"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4327:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4337:6:8",
														"type": ""
													}
												],
												"src": "4300:93:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4452:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4462:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4487:4:8"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4493:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4483:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4483:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4462:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4427:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4433:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4443:8:8",
														"type": ""
													}
												],
												"src": "4399:107:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4588:317:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4598:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "4619:10:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4631:1:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4615:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4615:18:8"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "4602:9:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4642:109:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4673:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4684:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4654:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4654:97:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4646:4:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4760:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4791:9:8"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "4802:8:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4772:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4772:39:8"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "4760:8:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4820:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4833:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4844:4:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4840:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4840:9:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4829:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4829:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4820:5:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4859:40:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4872:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "4883:8:8"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4893:4:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4879:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4879:19:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4869:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4869:30:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4859:6:8"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4549:5:8",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "4556:10:8",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "4568:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4581:6:8",
														"type": ""
													}
												],
												"src": "4512:393:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4956:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4966:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4977:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4966:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4938:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4948:7:8",
														"type": ""
													}
												],
												"src": "4911:77:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5026:28:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5036:12:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5043:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5036:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5012:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5022:3:8",
														"type": ""
													}
												],
												"src": "4994:60:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:82:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5130:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5188:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5170:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5170:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "5161:8:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5161:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5143:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5143:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5130:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5100:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5110:9:8",
														"type": ""
													}
												],
												"src": "5060:142:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5255:28:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5265:12:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5272:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5265:3:8"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5241:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5251:3:8",
														"type": ""
													}
												],
												"src": "5208:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5365:193:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5375:63:8",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "5430:7:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5399:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5399:39:8"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "5379:16:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5454:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "5494:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "5488:5:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5488:11:8"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5501:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "5533:16:8"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5509:23:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5509:41:8"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "5460:27:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5460:91:8"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "5447:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5447:105:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5447:105:8"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5342:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5348:6:8",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "5356:7:8",
														"type": ""
													}
												],
												"src": "5289:269:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5613:24:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5623:8:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5630:1:8",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5623:3:8"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5609:3:8",
														"type": ""
													}
												],
												"src": "5564:73:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5696:136:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5706:46:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5720:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5720:32:8"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "5710:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5805:4:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5811:6:8"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "5819:6:8"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5761:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5761:65:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5761:65:8"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5682:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5688:6:8",
														"type": ""
													}
												],
												"src": "5643:189:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5888:136:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5955:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5999:5:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6006:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "5969:29:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5969:39:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5969:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "5908:5:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5915:3:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5905:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5905:14:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5920:26:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5922:22:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5935:5:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5942:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5931:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5931:13:8"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "5922:5:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5902:2:8",
																"statements": []
															},
															"src": "5898:120:8"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "5876:5:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5883:3:8",
														"type": ""
													}
												],
												"src": "5838:186:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6109:464:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6135:431:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6149:54:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "6197:5:8"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "6165:31:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6165:38:8"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "6153:8:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6216:63:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "6239:8:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "6267:10:8"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "6249:17:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6249:29:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6235:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6235:44:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "6220:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6436:27:8",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6438:23:8",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "6453:8:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "6438:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "6420:10:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6432:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "6417:2:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6417:18:8"
																		},
																		"nodeType": "YulIf",
																		"src": "6414:49:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "6505:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "6522:8:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "6550:3:8"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "6532:17:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6532:22:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6518:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6518:37:8"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "6476:28:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6476:80:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6476:80:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "6126:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6131:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6123:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6123:11:8"
															},
															"nodeType": "YulIf",
															"src": "6120:446:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6085:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6092:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "6097:10:8",
														"type": ""
													}
												],
												"src": "6030:543:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6642:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6652:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "6677:4:8"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6683:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6673:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6673:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "6652:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "6617:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6623:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "6633:8:8",
														"type": ""
													}
												],
												"src": "6579:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6753:118:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6763:68:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6812:1:8",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "6815:5:8"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "6808:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6808:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6827:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "6823:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6823:6:8"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "6779:28:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6779:51:8"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "6775:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6775:56:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "6767:4:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6840:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6854:4:8"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "6860:4:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6850:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6850:15:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "6840:6:8"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6730:4:8",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "6736:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "6746:6:8",
														"type": ""
													}
												],
												"src": "6702:169:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6957:214:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7090:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7117:4:8"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "7123:3:8"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "7098:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7098:29:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7090:4:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7136:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7147:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7157:1:8",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "7160:3:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7153:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7153:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7144:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7144:21:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "7136:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6938:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6944:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "6952:4:8",
														"type": ""
													}
												],
												"src": "6876:295:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7268:1303:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7279:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7326:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7293:32:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7293:37:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "7283:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7415:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7417:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7417:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7417:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7387:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7395:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7384:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7384:30:8"
															},
															"nodeType": "YulIf",
															"src": "7381:56:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7447:52:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "7493:4:8"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "7487:5:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7487:11:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "7461:25:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7461:38:8"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "7451:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "7592:4:8"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "7598:6:8"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7606:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "7546:45:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7546:67:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7546:67:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7623:18:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7640:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "7627:9:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7651:17:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7664:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "7651:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7715:611:8",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7729:37:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "7748:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7760:4:8",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "7756:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7756:9:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7744:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7744:22:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "7733:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7780:51:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "7826:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "7794:31:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7794:37:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "7784:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7844:10:8",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7853:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "7848:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7912:163:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7937:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "7955:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "7960:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "7951:3:8"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "7951:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "7945:5:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7945:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "7930:6:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7930:42:8"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7930:42:8"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "7989:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8003:6:8"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8011:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7999:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7999:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "7989:6:8"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8030:31:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "8047:9:8"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8058:2:8",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8043:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8043:18:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "8030:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "7878:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "7881:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "7875:2:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7875:14:8"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "7890:21:8",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "7892:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "7901:1:8"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7904:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7897:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7897:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7892:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "7871:3:8",
																					"statements": []
																				},
																				"src": "7867:208:8"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8111:156:8",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "8129:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8156:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8161:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8152:3:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8152:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8146:5:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8146:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "8133:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8196:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "8223:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "8238:6:8"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "8246:4:8",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "8234:3:8"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8234:17:8"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "8204:18:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8204:48:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8189:6:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8189:64:8"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8189:64:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8094:7:8"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "8103:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8091:2:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8091:19:8"
																				},
																				"nodeType": "YulIf",
																				"src": "8088:179:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8287:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "8301:6:8"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8309:1:8",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "8297:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8297:14:8"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8313:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8293:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8293:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8280:6:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8280:36:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8280:36:8"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7708:618:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7713:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8343:222:8",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8357:14:8",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8370:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "8361:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8394:67:8",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8412:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8431:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8436:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8427:3:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8427:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8421:5:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8421:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8412:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "8387:6:8"
																				},
																				"nodeType": "YulIf",
																				"src": "8384:77:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8481:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8540:5:8"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "8547:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "8487:52:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8487:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8474:6:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8474:81:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8474:81:8"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8335:230:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7688:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7696:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7685:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7685:14:8"
															},
															"nodeType": "YulSwitch",
															"src": "7678:887:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "7257:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7263:3:8",
														"type": ""
													}
												],
												"src": "7176:1395:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b50604051620014fa380380620014fa8339818101604052810190620000369190620001eb565b81818160039081620000499190620004a5565b5080600490816200005b9190620004a5565b505050505062000589565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b620000c7826200007f565b810181811067ffffffffffffffff82111715620000e957620000e86200008f565b5b80604052505050565b5f620000fd62000066565b90506200010b8282620000bc565b919050565b5f67ffffffffffffffff8211156200012d576200012c6200008f565b5b62000138826200007f565b9050602081019050919050565b5f5b838110156200016457808201518184015260208101905062000147565b5f8484015250505050565b5f620001856200017f8462000110565b620000f2565b905082815260208101848484011115620001a457620001a36200007b565b5b620001b184828562000145565b509392505050565b5f82601f830112620001d057620001cf62000077565b5b8151620001e28482602086016200016f565b91505092915050565b5f80604083850312156200020457620002036200006f565b5b5f83015167ffffffffffffffff81111562000224576200022362000073565b5b6200023285828601620001b9565b925050602083015167ffffffffffffffff81111562000256576200025562000073565b5b6200026485828601620001b9565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620002bd57607f821691505b602082108103620002d357620002d262000278565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620003377fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002fa565b620003438683620002fa565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6200038d6200038762000381846200035b565b62000364565b6200035b565b9050919050565b5f819050919050565b620003a8836200036d565b620003c0620003b78262000394565b84845462000306565b825550505050565b5f90565b620003d6620003c8565b620003e38184846200039d565b505050565b5b818110156200040a57620003fe5f82620003cc565b600181019050620003e9565b5050565b601f82111562000459576200042381620002d9565b6200042e84620002eb565b810160208510156200043e578190505b620004566200044d85620002eb565b830182620003e8565b50505b505050565b5f82821c905092915050565b5f6200047b5f19846008026200045e565b1980831691505092915050565b5f6200049583836200046a565b9150826002028217905092915050565b620004b0826200026e565b67ffffffffffffffff811115620004cc57620004cb6200008f565b5b620004d88254620002a5565b620004e58282856200040e565b5f60209050601f8311600181146200051b575f841562000506578287015190505b62000512858262000488565b86555062000581565b601f1984166200052b86620002d9565b5f5b8281101562000554578489015182556001820191506020850194506020810190506200052d565b8683101562000574578489015162000570601f8916826200046a565b8355505b6001600288020188555050505b505050505050565b610f6380620005975f395ff3fe608060405234801561000f575f80fd5b50600436106100a7575f3560e01c806340c10f191161006f57806340c10f191461016557806370a082311461018157806395d89b41146101b15780639dc29fac146101cf578063a9059cbb146101eb578063dd62ed3e1461021b576100a7565b806306fdde03146100ab578063095ea7b3146100c957806318160ddd146100f957806323b872dd14610117578063313ce56714610147575b5f80fd5b6100b361024b565b6040516100c09190610bdc565b60405180910390f35b6100e360048036038101906100de9190610c8d565b6102db565b6040516100f09190610ce5565b60405180910390f35b6101016102fd565b60405161010e9190610d0d565b60405180910390f35b610131600480360381019061012c9190610d26565b610306565b60405161013e9190610ce5565b60405180910390f35b61014f610334565b60405161015c9190610d91565b60405180910390f35b61017f600480360381019061017a9190610c8d565b61033c565b005b61019b60048036038101906101969190610daa565b61034a565b6040516101a89190610d0d565b60405180910390f35b6101b961038f565b6040516101c69190610bdc565b60405180910390f35b6101e960048036038101906101e49190610c8d565b61041f565b005b61020560048036038101906102009190610c8d565b61042d565b6040516102129190610ce5565b60405180910390f35b61023560048036038101906102309190610dd5565b61044f565b6040516102429190610d0d565b60405180910390f35b60606003805461025a90610e40565b80601f016020809104026020016040519081016040528092919081815260200182805461028690610e40565b80156102d15780601f106102a8576101008083540402835291602001916102d1565b820191905f5260205f20905b8154815290600101906020018083116102b457829003601f168201915b5050505050905090565b5f806102e56104d1565b90506102f28185856104d8565b600191505092915050565b5f600254905090565b5f806103106104d1565b905061031d8582856104ea565b61032885858561057c565b60019150509392505050565b5f6012905090565b610346828261066c565b5050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461039e90610e40565b80601f01602080910402602001604051908101604052809291908181526020018280546103ca90610e40565b80156104155780601f106103ec57610100808354040283529160200191610415565b820191905f5260205f20905b8154815290600101906020018083116103f857829003601f168201915b5050505050905090565b61042982826106eb565b5050565b5f806104376104d1565b905061044481858561057c565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b6104e5838383600161076a565b505050565b5f6104f5848461044f565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105765781811015610567578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161055e93929190610e7f565b60405180910390fd5b61057584848484035f61076a565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105ec575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016105e39190610eb4565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361065c575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106539190610eb4565b60405180910390fd5b610667838383610939565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106dc575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106d39190610eb4565b60405180910390fd5b6106e75f8383610939565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361075b575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016107529190610eb4565b60405180910390fd5b610766825f83610939565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036107da575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016107d19190610eb4565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361084a575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016108419190610eb4565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610933578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161092a9190610d0d565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610989578060025f82825461097d9190610efa565b92505081905550610a57565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610a12578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610a0993929190610e7f565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a9e578060025f8282540392505081905550610ae8565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b459190610d0d565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610b89578082015181840152602081019050610b6e565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610bae82610b52565b610bb88185610b5c565b9350610bc8818560208601610b6c565b610bd181610b94565b840191505092915050565b5f6020820190508181035f830152610bf48184610ba4565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610c2982610c00565b9050919050565b610c3981610c1f565b8114610c43575f80fd5b50565b5f81359050610c5481610c30565b92915050565b5f819050919050565b610c6c81610c5a565b8114610c76575f80fd5b50565b5f81359050610c8781610c63565b92915050565b5f8060408385031215610ca357610ca2610bfc565b5b5f610cb085828601610c46565b9250506020610cc185828601610c79565b9150509250929050565b5f8115159050919050565b610cdf81610ccb565b82525050565b5f602082019050610cf85f830184610cd6565b92915050565b610d0781610c5a565b82525050565b5f602082019050610d205f830184610cfe565b92915050565b5f805f60608486031215610d3d57610d3c610bfc565b5b5f610d4a86828701610c46565b9350506020610d5b86828701610c46565b9250506040610d6c86828701610c79565b9150509250925092565b5f60ff82169050919050565b610d8b81610d76565b82525050565b5f602082019050610da45f830184610d82565b92915050565b5f60208284031215610dbf57610dbe610bfc565b5b5f610dcc84828501610c46565b91505092915050565b5f8060408385031215610deb57610dea610bfc565b5b5f610df885828601610c46565b9250506020610e0985828601610c46565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610e5757607f821691505b602082108103610e6a57610e69610e13565b5b50919050565b610e7981610c1f565b82525050565b5f606082019050610e925f830186610e70565b610e9f6020830185610cfe565b610eac6040830184610cfe565b949350505050565b5f602082019050610ec75f830184610e70565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610f0482610c5a565b9150610f0f83610c5a565b9250828201905080821115610f2757610f26610ecd565b5b9291505056fea26469706673582212206aa9ee7d1537134c49f6331d05e6a8a8f8f674aa50c3ba6f859f7d03563a943464736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x14FA CODESIZE SUB DUP1 PUSH3 0x14FA DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x1EB JUMP JUMPDEST DUP2 DUP2 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x49 SWAP2 SWAP1 PUSH3 0x4A5 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x5B SWAP2 SWAP1 PUSH3 0x4A5 JUMP JUMPDEST POP POP POP POP POP PUSH3 0x589 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH3 0xC7 DUP3 PUSH3 0x7F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xE9 JUMPI PUSH3 0xE8 PUSH3 0x8F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFD PUSH3 0x66 JUMP JUMPDEST SWAP1 POP PUSH3 0x10B DUP3 DUP3 PUSH3 0xBC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x12D JUMPI PUSH3 0x12C PUSH3 0x8F JUMP JUMPDEST JUMPDEST PUSH3 0x138 DUP3 PUSH3 0x7F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x164 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x147 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x185 PUSH3 0x17F DUP5 PUSH3 0x110 JUMP JUMPDEST PUSH3 0xF2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1A4 JUMPI PUSH3 0x1A3 PUSH3 0x7B JUMP JUMPDEST JUMPDEST PUSH3 0x1B1 DUP5 DUP3 DUP6 PUSH3 0x145 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1D0 JUMPI PUSH3 0x1CF PUSH3 0x77 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1E2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x16F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x204 JUMPI PUSH3 0x203 PUSH3 0x6F JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x224 JUMPI PUSH3 0x223 PUSH3 0x73 JUMP JUMPDEST JUMPDEST PUSH3 0x232 DUP6 DUP3 DUP7 ADD PUSH3 0x1B9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x256 JUMPI PUSH3 0x255 PUSH3 0x73 JUMP JUMPDEST JUMPDEST PUSH3 0x264 DUP6 DUP3 DUP7 ADD PUSH3 0x1B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2BD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2D3 JUMPI PUSH3 0x2D2 PUSH3 0x278 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x337 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x2FA JUMP JUMPDEST PUSH3 0x343 DUP7 DUP4 PUSH3 0x2FA JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x38D PUSH3 0x387 PUSH3 0x381 DUP5 PUSH3 0x35B JUMP JUMPDEST PUSH3 0x364 JUMP JUMPDEST PUSH3 0x35B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3A8 DUP4 PUSH3 0x36D JUMP JUMPDEST PUSH3 0x3C0 PUSH3 0x3B7 DUP3 PUSH3 0x394 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x306 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x3D6 PUSH3 0x3C8 JUMP JUMPDEST PUSH3 0x3E3 DUP2 DUP5 DUP5 PUSH3 0x39D JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x40A JUMPI PUSH3 0x3FE PUSH0 DUP3 PUSH3 0x3CC JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x3E9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x459 JUMPI PUSH3 0x423 DUP2 PUSH3 0x2D9 JUMP JUMPDEST PUSH3 0x42E DUP5 PUSH3 0x2EB JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x43E JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x456 PUSH3 0x44D DUP6 PUSH3 0x2EB JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x3E8 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x47B PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x45E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x495 DUP4 DUP4 PUSH3 0x46A JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4B0 DUP3 PUSH3 0x26E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4CC JUMPI PUSH3 0x4CB PUSH3 0x8F JUMP JUMPDEST JUMPDEST PUSH3 0x4D8 DUP3 SLOAD PUSH3 0x2A5 JUMP JUMPDEST PUSH3 0x4E5 DUP3 DUP3 DUP6 PUSH3 0x40E JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x51B JUMPI PUSH0 DUP5 ISZERO PUSH3 0x506 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x512 DUP6 DUP3 PUSH3 0x488 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x581 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x52B DUP7 PUSH3 0x2D9 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x554 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x52D JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x574 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x570 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x46A JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF63 DUP1 PUSH3 0x597 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x21B JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x147 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB3 PUSH2 0x24B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xBDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDE SWAP2 SWAP1 PUSH2 0xC8D JUMP JUMPDEST PUSH2 0x2DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xD0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x131 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12C SWAP2 SWAP1 PUSH2 0xD26 JUMP JUMPDEST PUSH2 0x306 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP2 SWAP1 PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH2 0x334 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0xD91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0xC8D JUMP JUMPDEST PUSH2 0x33C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0xDAA JUMP JUMPDEST PUSH2 0x34A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0xD0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B9 PUSH2 0x38F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0xBDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0xC8D JUMP JUMPDEST PUSH2 0x41F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x205 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x200 SWAP2 SWAP1 PUSH2 0xC8D JUMP JUMPDEST PUSH2 0x42D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x235 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x230 SWAP2 SWAP1 PUSH2 0xDD5 JUMP JUMPDEST PUSH2 0x44F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0xD0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x25A SWAP1 PUSH2 0xE40 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x286 SWAP1 PUSH2 0xE40 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2A8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2E5 PUSH2 0x4D1 JUMP JUMPDEST SWAP1 POP PUSH2 0x2F2 DUP2 DUP6 DUP6 PUSH2 0x4D8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x310 PUSH2 0x4D1 JUMP JUMPDEST SWAP1 POP PUSH2 0x31D DUP6 DUP3 DUP6 PUSH2 0x4EA JUMP JUMPDEST PUSH2 0x328 DUP6 DUP6 DUP6 PUSH2 0x57C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x346 DUP3 DUP3 PUSH2 0x66C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x39E SWAP1 PUSH2 0xE40 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3CA SWAP1 PUSH2 0xE40 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x415 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3EC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x415 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3F8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x429 DUP3 DUP3 PUSH2 0x6EB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x437 PUSH2 0x4D1 JUMP JUMPDEST SWAP1 POP PUSH2 0x444 DUP2 DUP6 DUP6 PUSH2 0x57C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4E5 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x76A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4F5 DUP5 DUP5 PUSH2 0x44F JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x576 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x567 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x575 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x76A JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5EC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E3 SWAP2 SWAP1 PUSH2 0xEB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x65C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x653 SWAP2 SWAP1 PUSH2 0xEB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x667 DUP4 DUP4 DUP4 PUSH2 0x939 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6DC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D3 SWAP2 SWAP1 PUSH2 0xEB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6E7 PUSH0 DUP4 DUP4 PUSH2 0x939 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x75B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x752 SWAP2 SWAP1 PUSH2 0xEB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x766 DUP3 PUSH0 DUP4 PUSH2 0x939 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7DA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D1 SWAP2 SWAP1 PUSH2 0xEB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x84A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x841 SWAP2 SWAP1 PUSH2 0xEB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x933 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x92A SWAP2 SWAP1 PUSH2 0xD0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x989 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x97D SWAP2 SWAP1 PUSH2 0xEFA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA57 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xA12 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA09 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA9E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xAE8 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xB45 SWAP2 SWAP1 PUSH2 0xD0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB89 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xB6E JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xBAE DUP3 PUSH2 0xB52 JUMP JUMPDEST PUSH2 0xBB8 DUP2 DUP6 PUSH2 0xB5C JUMP JUMPDEST SWAP4 POP PUSH2 0xBC8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xB6C JUMP JUMPDEST PUSH2 0xBD1 DUP2 PUSH2 0xB94 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBF4 DUP2 DUP5 PUSH2 0xBA4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC29 DUP3 PUSH2 0xC00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC39 DUP2 PUSH2 0xC1F JUMP JUMPDEST DUP2 EQ PUSH2 0xC43 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC54 DUP2 PUSH2 0xC30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC6C DUP2 PUSH2 0xC5A JUMP JUMPDEST DUP2 EQ PUSH2 0xC76 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC87 DUP2 PUSH2 0xC63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCA3 JUMPI PUSH2 0xCA2 PUSH2 0xBFC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCB0 DUP6 DUP3 DUP7 ADD PUSH2 0xC46 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCC1 DUP6 DUP3 DUP7 ADD PUSH2 0xC79 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCDF DUP2 PUSH2 0xCCB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCF8 PUSH0 DUP4 ADD DUP5 PUSH2 0xCD6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD07 DUP2 PUSH2 0xC5A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD20 PUSH0 DUP4 ADD DUP5 PUSH2 0xCFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD3D JUMPI PUSH2 0xD3C PUSH2 0xBFC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD4A DUP7 DUP3 DUP8 ADD PUSH2 0xC46 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xD5B DUP7 DUP3 DUP8 ADD PUSH2 0xC46 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xD6C DUP7 DUP3 DUP8 ADD PUSH2 0xC79 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD8B DUP2 PUSH2 0xD76 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDA4 PUSH0 DUP4 ADD DUP5 PUSH2 0xD82 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDBF JUMPI PUSH2 0xDBE PUSH2 0xBFC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDCC DUP5 DUP3 DUP6 ADD PUSH2 0xC46 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDEB JUMPI PUSH2 0xDEA PUSH2 0xBFC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDF8 DUP6 DUP3 DUP7 ADD PUSH2 0xC46 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE09 DUP6 DUP3 DUP7 ADD PUSH2 0xC46 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xE57 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE6A JUMPI PUSH2 0xE69 PUSH2 0xE13 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE79 DUP2 PUSH2 0xC1F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE92 PUSH0 DUP4 ADD DUP7 PUSH2 0xE70 JUMP JUMPDEST PUSH2 0xE9F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xCFE JUMP JUMPDEST PUSH2 0xEAC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xCFE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEC7 PUSH0 DUP4 ADD DUP5 PUSH2 0xE70 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF04 DUP3 PUSH2 0xC5A JUMP JUMPDEST SWAP2 POP PUSH2 0xF0F DUP4 PUSH2 0xC5A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xF27 JUMPI PUSH2 0xF26 PUSH2 0xECD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0xA9EE7D1537134C49F6331D SDIV 0xE6 0xA8 0xA8 0xF8 0xF6 PUSH21 0xAA50C3BA6F859F7D03563A943464736F6C63430008 EQ STOP CALLER ",
							"sourceMap": "120:306:6:-:0;;;153:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;213:4;219:6;1970:5:2;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;153:76:6;;120:306;;7:75:8;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;120:306:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_588": {
									"entryPoint": 1240,
									"id": 588,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_648": {
									"entryPoint": 1898,
									"id": 648,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_570": {
									"entryPoint": 1771,
									"id": 570,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_537": {
									"entryPoint": 1644,
									"id": 537,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_813": {
									"entryPoint": 1233,
									"id": 813,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_696": {
									"entryPoint": 1258,
									"id": 696,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_427": {
									"entryPoint": 1404,
									"id": 427,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_504": {
									"entryPoint": 2361,
									"id": 504,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_324": {
									"entryPoint": 1103,
									"id": 324,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_348": {
									"entryPoint": 731,
									"id": 348,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_283": {
									"entryPoint": 842,
									"id": 283,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_874": {
									"entryPoint": 1055,
									"id": 874,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@decimals_261": {
									"entryPoint": 820,
									"id": 261,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_861": {
									"entryPoint": 828,
									"id": 861,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_243": {
									"entryPoint": 587,
									"id": 243,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_252": {
									"entryPoint": 911,
									"id": 252,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_270": {
									"entryPoint": 765,
									"id": 270,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_380": {
									"entryPoint": 774,
									"id": 380,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_307": {
									"entryPoint": 1069,
									"id": 307,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3142,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3498,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3286,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2980,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3458,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3711,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3341,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3473,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2908,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3834,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3072,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3162,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2924,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3648,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3789,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3603,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3068,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2964,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 3120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7360:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:8",
														"type": ""
													}
												],
												"src": "7:99:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:8",
														"type": ""
													}
												],
												"src": "112:169:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:8"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:8",
																"statements": []
															},
															"src": "378:113:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:8"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:8",
														"type": ""
													}
												],
												"src": "287:246:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:8",
														"type": ""
													}
												],
												"src": "539:102:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:8",
														"type": ""
													}
												],
												"src": "647:377:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:8",
														"type": ""
													}
												],
												"src": "1030:313:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1389:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1399:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1382:6:8",
														"type": ""
													}
												],
												"src": "1349:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1519:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1642:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1721:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1731:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1703:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1713:7:8",
														"type": ""
													}
												],
												"src": "1676:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1853:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1863:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1874:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1835:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1845:7:8",
														"type": ""
													}
												],
												"src": "1808:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1953:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2010:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:43:8"
															},
															"nodeType": "YulIf",
															"src": "1963:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1946:5:8",
														"type": ""
													}
												],
												"src": "1910:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2090:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2100:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2109:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2138:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2068:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2076:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2084:5:8",
														"type": ""
													}
												],
												"src": "2038:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2228:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2238:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2249:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2210:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2220:7:8",
														"type": ""
													}
												],
												"src": "2183:77:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2309:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2366:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:43:8"
															},
															"nodeType": "YulIf",
															"src": "2319:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2302:5:8",
														"type": ""
													}
												],
												"src": "2266:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2446:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2456:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2465:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2494:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2424:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2432:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2440:5:8",
														"type": ""
													}
												],
												"src": "2394:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2622:391:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2635:32:8"
															},
															"nodeType": "YulIf",
															"src": "2632:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "2761:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2805:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2888:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2933:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2584:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2595:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2607:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2615:6:8",
														"type": ""
													}
												],
												"src": "2539:474:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:48:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3071:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3043:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3053:7:8",
														"type": ""
													}
												],
												"src": "3019:90:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3174:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3184:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3162:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3169:3:8",
														"type": ""
													}
												],
												"src": "3115:109:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3322:118:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3332:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3340:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:65:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3294:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3306:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3317:4:8",
														"type": ""
													}
												],
												"src": "3230:210:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3511:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3521:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3499:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3506:3:8",
														"type": ""
													}
												],
												"src": "3446:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3668:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3678:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3714:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3640:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3652:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3663:4:8",
														"type": ""
													}
												],
												"src": "3570:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3898:519:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3944:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3911:32:8"
															},
															"nodeType": "YulIf",
															"src": "3908:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "4037:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4081:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4164:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4209:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4292:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4337:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3852:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3863:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3875:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3883:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3891:6:8",
														"type": ""
													}
												],
												"src": "3798:619:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4466:43:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4476:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4448:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4458:7:8",
														"type": ""
													}
												],
												"src": "4423:86:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4576:51:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4586:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:8"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4564:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4571:3:8",
														"type": ""
													}
												],
												"src": "4515:112:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4727:120:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4737:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4745:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4773:67:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4699:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4711:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4722:4:8",
														"type": ""
													}
												],
												"src": "4633:214:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4919:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4965:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4967:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4967:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4967:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4936:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4932:32:8"
															},
															"nodeType": "YulIf",
															"src": "4929:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "5058:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5073:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5087:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5077:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5102:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5137:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5148:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5133:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5133:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5157:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5112:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5112:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5102:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4889:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4900:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4912:6:8",
														"type": ""
													}
												],
												"src": "4853:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5271:391:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5317:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5319:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5319:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5319:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5292:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5301:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5288:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5288:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5313:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5284:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5284:32:8"
															},
															"nodeType": "YulIf",
															"src": "5281:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "5410:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5425:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5439:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5429:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5454:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5489:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5500:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5485:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5485:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5509:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5464:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5464:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5454:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5537:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5552:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5566:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5556:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5582:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5617:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5628:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5613:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5613:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5637:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5592:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5592:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5582:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5233:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5244:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5256:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5264:6:8",
														"type": ""
													}
												],
												"src": "5188:474:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5696:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5713:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5716:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5706:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5706:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5706:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5810:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5813:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5803:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5803:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5803:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5834:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5837:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5827:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5827:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5827:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "5668:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5905:269:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5915:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5929:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5935:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5925:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5925:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5915:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5946:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5976:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5982:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5972:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5972:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5950:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6023:51:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6037:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6051:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6059:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6047:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6047:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6037:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6003:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5996:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5996:26:8"
															},
															"nodeType": "YulIf",
															"src": "5993:81:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6126:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "6140:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6140:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6140:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6090:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6113:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6121:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6110:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6110:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6087:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6087:38:8"
															},
															"nodeType": "YulIf",
															"src": "6084:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5889:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5898:6:8",
														"type": ""
													}
												],
												"src": "5854:320:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6245:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6262:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6285:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6267:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6267:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6255:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6255:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6255:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6233:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6240:3:8",
														"type": ""
													}
												],
												"src": "6180:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6458:288:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6468:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6480:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6491:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6476:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6476:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6468:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6548:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6561:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6572:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6557:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6557:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6504:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6504:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6504:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6629:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6642:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6653:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6638:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6638:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6585:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6585:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6585:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6711:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6724:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6735:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6720:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6720:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6667:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6667:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6667:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6414:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6426:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6434:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6442:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6453:4:8",
														"type": ""
													}
												],
												"src": "6304:442:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6850:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6860:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6872:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6883:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6868:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6868:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6860:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6940:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6953:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6964:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6949:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6949:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6896:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6896:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6896:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6822:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6834:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6845:4:8",
														"type": ""
													}
												],
												"src": "6752:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7008:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7025:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7028:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7018:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7018:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7018:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7122:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7125:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7115:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7115:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7115:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7146:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7149:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7139:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7139:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7139:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6980:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7210:147:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7220:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7243:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7225:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7225:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7220:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7254:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7277:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7259:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7259:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7254:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7288:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7299:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7302:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7295:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7295:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7288:3:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7328:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7330:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7330:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7330:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7320:1:8"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "7323:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7317:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7317:10:8"
															},
															"nodeType": "YulIf",
															"src": "7314:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7197:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7200:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7206:3:8",
														"type": ""
													}
												],
												"src": "7166:191:8"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100a7575f3560e01c806340c10f191161006f57806340c10f191461016557806370a082311461018157806395d89b41146101b15780639dc29fac146101cf578063a9059cbb146101eb578063dd62ed3e1461021b576100a7565b806306fdde03146100ab578063095ea7b3146100c957806318160ddd146100f957806323b872dd14610117578063313ce56714610147575b5f80fd5b6100b361024b565b6040516100c09190610bdc565b60405180910390f35b6100e360048036038101906100de9190610c8d565b6102db565b6040516100f09190610ce5565b60405180910390f35b6101016102fd565b60405161010e9190610d0d565b60405180910390f35b610131600480360381019061012c9190610d26565b610306565b60405161013e9190610ce5565b60405180910390f35b61014f610334565b60405161015c9190610d91565b60405180910390f35b61017f600480360381019061017a9190610c8d565b61033c565b005b61019b60048036038101906101969190610daa565b61034a565b6040516101a89190610d0d565b60405180910390f35b6101b961038f565b6040516101c69190610bdc565b60405180910390f35b6101e960048036038101906101e49190610c8d565b61041f565b005b61020560048036038101906102009190610c8d565b61042d565b6040516102129190610ce5565b60405180910390f35b61023560048036038101906102309190610dd5565b61044f565b6040516102429190610d0d565b60405180910390f35b60606003805461025a90610e40565b80601f016020809104026020016040519081016040528092919081815260200182805461028690610e40565b80156102d15780601f106102a8576101008083540402835291602001916102d1565b820191905f5260205f20905b8154815290600101906020018083116102b457829003601f168201915b5050505050905090565b5f806102e56104d1565b90506102f28185856104d8565b600191505092915050565b5f600254905090565b5f806103106104d1565b905061031d8582856104ea565b61032885858561057c565b60019150509392505050565b5f6012905090565b610346828261066c565b5050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461039e90610e40565b80601f01602080910402602001604051908101604052809291908181526020018280546103ca90610e40565b80156104155780601f106103ec57610100808354040283529160200191610415565b820191905f5260205f20905b8154815290600101906020018083116103f857829003601f168201915b5050505050905090565b61042982826106eb565b5050565b5f806104376104d1565b905061044481858561057c565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b6104e5838383600161076a565b505050565b5f6104f5848461044f565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105765781811015610567578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161055e93929190610e7f565b60405180910390fd5b61057584848484035f61076a565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105ec575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016105e39190610eb4565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361065c575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106539190610eb4565b60405180910390fd5b610667838383610939565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106dc575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106d39190610eb4565b60405180910390fd5b6106e75f8383610939565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361075b575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016107529190610eb4565b60405180910390fd5b610766825f83610939565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036107da575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016107d19190610eb4565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361084a575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016108419190610eb4565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610933578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161092a9190610d0d565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610989578060025f82825461097d9190610efa565b92505081905550610a57565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610a12578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610a0993929190610e7f565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a9e578060025f8282540392505081905550610ae8565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b459190610d0d565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610b89578082015181840152602081019050610b6e565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610bae82610b52565b610bb88185610b5c565b9350610bc8818560208601610b6c565b610bd181610b94565b840191505092915050565b5f6020820190508181035f830152610bf48184610ba4565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610c2982610c00565b9050919050565b610c3981610c1f565b8114610c43575f80fd5b50565b5f81359050610c5481610c30565b92915050565b5f819050919050565b610c6c81610c5a565b8114610c76575f80fd5b50565b5f81359050610c8781610c63565b92915050565b5f8060408385031215610ca357610ca2610bfc565b5b5f610cb085828601610c46565b9250506020610cc185828601610c79565b9150509250929050565b5f8115159050919050565b610cdf81610ccb565b82525050565b5f602082019050610cf85f830184610cd6565b92915050565b610d0781610c5a565b82525050565b5f602082019050610d205f830184610cfe565b92915050565b5f805f60608486031215610d3d57610d3c610bfc565b5b5f610d4a86828701610c46565b9350506020610d5b86828701610c46565b9250506040610d6c86828701610c79565b9150509250925092565b5f60ff82169050919050565b610d8b81610d76565b82525050565b5f602082019050610da45f830184610d82565b92915050565b5f60208284031215610dbf57610dbe610bfc565b5b5f610dcc84828501610c46565b91505092915050565b5f8060408385031215610deb57610dea610bfc565b5b5f610df885828601610c46565b9250506020610e0985828601610c46565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610e5757607f821691505b602082108103610e6a57610e69610e13565b5b50919050565b610e7981610c1f565b82525050565b5f606082019050610e925f830186610e70565b610e9f6020830185610cfe565b610eac6040830184610cfe565b949350505050565b5f602082019050610ec75f830184610e70565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610f0482610c5a565b9150610f0f83610c5a565b9250828201905080821115610f2757610f26610ecd565b5b9291505056fea26469706673582212206aa9ee7d1537134c49f6331d05e6a8a8f8f674aa50c3ba6f859f7d03563a943464736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x21B JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x147 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB3 PUSH2 0x24B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xBDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDE SWAP2 SWAP1 PUSH2 0xC8D JUMP JUMPDEST PUSH2 0x2DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xD0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x131 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12C SWAP2 SWAP1 PUSH2 0xD26 JUMP JUMPDEST PUSH2 0x306 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP2 SWAP1 PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH2 0x334 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0xD91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0xC8D JUMP JUMPDEST PUSH2 0x33C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0xDAA JUMP JUMPDEST PUSH2 0x34A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0xD0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B9 PUSH2 0x38F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0xBDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0xC8D JUMP JUMPDEST PUSH2 0x41F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x205 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x200 SWAP2 SWAP1 PUSH2 0xC8D JUMP JUMPDEST PUSH2 0x42D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x235 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x230 SWAP2 SWAP1 PUSH2 0xDD5 JUMP JUMPDEST PUSH2 0x44F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0xD0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x25A SWAP1 PUSH2 0xE40 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x286 SWAP1 PUSH2 0xE40 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2A8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2E5 PUSH2 0x4D1 JUMP JUMPDEST SWAP1 POP PUSH2 0x2F2 DUP2 DUP6 DUP6 PUSH2 0x4D8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x310 PUSH2 0x4D1 JUMP JUMPDEST SWAP1 POP PUSH2 0x31D DUP6 DUP3 DUP6 PUSH2 0x4EA JUMP JUMPDEST PUSH2 0x328 DUP6 DUP6 DUP6 PUSH2 0x57C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x346 DUP3 DUP3 PUSH2 0x66C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x39E SWAP1 PUSH2 0xE40 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3CA SWAP1 PUSH2 0xE40 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x415 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3EC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x415 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3F8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x429 DUP3 DUP3 PUSH2 0x6EB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x437 PUSH2 0x4D1 JUMP JUMPDEST SWAP1 POP PUSH2 0x444 DUP2 DUP6 DUP6 PUSH2 0x57C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4E5 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x76A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4F5 DUP5 DUP5 PUSH2 0x44F JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x576 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x567 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x575 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x76A JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5EC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E3 SWAP2 SWAP1 PUSH2 0xEB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x65C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x653 SWAP2 SWAP1 PUSH2 0xEB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x667 DUP4 DUP4 DUP4 PUSH2 0x939 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6DC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D3 SWAP2 SWAP1 PUSH2 0xEB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6E7 PUSH0 DUP4 DUP4 PUSH2 0x939 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x75B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x752 SWAP2 SWAP1 PUSH2 0xEB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x766 DUP3 PUSH0 DUP4 PUSH2 0x939 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7DA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D1 SWAP2 SWAP1 PUSH2 0xEB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x84A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x841 SWAP2 SWAP1 PUSH2 0xEB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x933 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x92A SWAP2 SWAP1 PUSH2 0xD0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x989 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x97D SWAP2 SWAP1 PUSH2 0xEFA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA57 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xA12 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA09 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA9E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xAE8 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xB45 SWAP2 SWAP1 PUSH2 0xD0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB89 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xB6E JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xBAE DUP3 PUSH2 0xB52 JUMP JUMPDEST PUSH2 0xBB8 DUP2 DUP6 PUSH2 0xB5C JUMP JUMPDEST SWAP4 POP PUSH2 0xBC8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xB6C JUMP JUMPDEST PUSH2 0xBD1 DUP2 PUSH2 0xB94 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBF4 DUP2 DUP5 PUSH2 0xBA4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC29 DUP3 PUSH2 0xC00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC39 DUP2 PUSH2 0xC1F JUMP JUMPDEST DUP2 EQ PUSH2 0xC43 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC54 DUP2 PUSH2 0xC30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC6C DUP2 PUSH2 0xC5A JUMP JUMPDEST DUP2 EQ PUSH2 0xC76 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC87 DUP2 PUSH2 0xC63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCA3 JUMPI PUSH2 0xCA2 PUSH2 0xBFC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCB0 DUP6 DUP3 DUP7 ADD PUSH2 0xC46 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCC1 DUP6 DUP3 DUP7 ADD PUSH2 0xC79 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCDF DUP2 PUSH2 0xCCB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCF8 PUSH0 DUP4 ADD DUP5 PUSH2 0xCD6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD07 DUP2 PUSH2 0xC5A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD20 PUSH0 DUP4 ADD DUP5 PUSH2 0xCFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD3D JUMPI PUSH2 0xD3C PUSH2 0xBFC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD4A DUP7 DUP3 DUP8 ADD PUSH2 0xC46 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xD5B DUP7 DUP3 DUP8 ADD PUSH2 0xC46 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xD6C DUP7 DUP3 DUP8 ADD PUSH2 0xC79 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD8B DUP2 PUSH2 0xD76 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDA4 PUSH0 DUP4 ADD DUP5 PUSH2 0xD82 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDBF JUMPI PUSH2 0xDBE PUSH2 0xBFC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDCC DUP5 DUP3 DUP6 ADD PUSH2 0xC46 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDEB JUMPI PUSH2 0xDEA PUSH2 0xBFC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDF8 DUP6 DUP3 DUP7 ADD PUSH2 0xC46 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE09 DUP6 DUP3 DUP7 ADD PUSH2 0xC46 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xE57 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE6A JUMPI PUSH2 0xE69 PUSH2 0xE13 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE79 DUP2 PUSH2 0xC1F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE92 PUSH0 DUP4 ADD DUP7 PUSH2 0xE70 JUMP JUMPDEST PUSH2 0xE9F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xCFE JUMP JUMPDEST PUSH2 0xEAC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xCFE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEC7 PUSH0 DUP4 ADD DUP5 PUSH2 0xE70 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF04 DUP3 PUSH2 0xC5A JUMP JUMPDEST SWAP2 POP PUSH2 0xF0F DUP4 PUSH2 0xC5A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xF27 JUMPI PUSH2 0xF26 PUSH2 0xECD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0xA9EE7D1537134C49F6331D SDIV 0xE6 0xA8 0xA8 0xF8 0xF6 PUSH21 0xAA50C3BA6F859F7D03563A943464736F6C63430008 EQ STOP CALLER ",
							"sourceMap": "120:306:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;237:87:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3299:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;332:91:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3610:178:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3002:82::-;3051:5;3075:2;3068:9;;3002:82;:::o;237:87:6:-;299:17;305:2;309:6;299:5;:17::i;:::-;237:87;;:::o;3299:116:2:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2276:93::-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;332:91:6:-;396:19;402:4;408:6;396:5;:19::i;:::-;332:91;;:::o;3610:178:2:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;3846:140::-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;7721:208::-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;8247:206::-;8336:1;8317:21;;:7;:21;;;8313:89;;8388:1;8361:30;;;;;;;;;;;:::i;:::-;;;;;;;;8313:89;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;:::-;8247:206;;:::o;9949:432::-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:99:8:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:118::-;6267:24;6285:5;6267:24;:::i;:::-;6262:3;6255:37;6180:118;;:::o;6304:442::-;6453:4;6491:2;6480:9;6476:18;6468:26;;6504:71;6572:1;6561:9;6557:17;6548:6;6504:71;:::i;:::-;6585:72;6653:2;6642:9;6638:18;6629:6;6585:72;:::i;:::-;6667;6735:2;6724:9;6720:18;6711:6;6667:72;:::i;:::-;6304:442;;;;;;:::o;6752:222::-;6845:4;6883:2;6872:9;6868:18;6860:26;;6896:71;6964:1;6953:9;6949:17;6940:6;6896:71;:::i;:::-;6752:222;;;;:::o;6980:180::-;7028:77;7025:1;7018:88;7125:4;7122:1;7115:15;7149:4;7146:1;7139:15;7166:191;7206:3;7225:20;7243:1;7225:20;:::i;:::-;7220:25;;7259:20;7277:1;7259:20;:::i;:::-;7254:25;;7302:1;7299;7295:9;7288:16;;7323:3;7320:1;7317:10;7314:36;;;7330:18;;:::i;:::-;7314:36;7166:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "787800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2851",
								"burn(address,uint256)": "infinite",
								"decimals()": "427",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2477",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 120,
									"end": 426,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 120,
									"end": 426,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 120,
									"end": 426,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 153,
									"end": 229,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 153,
									"end": 229,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 153,
									"end": 229,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 153,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 153,
									"end": 229,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 153,
									"end": 229,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 153,
									"end": 229,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 153,
									"end": 229,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 153,
									"end": 229,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 153,
									"end": 229,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 153,
									"end": 229,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 153,
									"end": 229,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 153,
									"end": 229,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 153,
									"end": 229,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 153,
									"end": 229,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 153,
									"end": 229,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 153,
									"end": 229,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 153,
									"end": 229,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 153,
									"end": 229,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 153,
									"end": 229,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 153,
									"end": 229,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 153,
									"end": 229,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 153,
									"end": 229,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 153,
									"end": 229,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 153,
									"end": 229,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 153,
									"end": 229,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 153,
									"end": 229,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 153,
									"end": 229,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 153,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 153,
									"end": 229,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 153,
									"end": 229,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 153,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 153,
									"end": 229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 153,
									"end": 229,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 153,
									"end": 229,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 213,
									"end": 217,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 219,
									"end": 225,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 153,
									"end": 229,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 153,
									"end": 229,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 120,
									"end": 426,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 120,
									"end": 426,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2776,
									"end": 2782,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2784,
									"end": 2790,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2833,
									"end": 2835,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2821,
									"end": 2830,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2812,
									"end": 2819,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2808,
									"end": 2831,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2804,
									"end": 2836,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 2839,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "tag",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "tag",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2980,
									"end": 2981,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2969,
									"end": 2978,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2965,
									"end": 2982,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2959,
									"end": 2983,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3002,
									"end": 3008,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2999,
									"end": 3029,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 3032,
									"end": 3111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "tag",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "tag",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 3203,
									"end": 3210,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3194,
									"end": 3200,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3183,
									"end": 3192,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3179,
									"end": 3201,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 3137,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "tag",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2930,
									"end": 3221,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3281,
									"end": 3283,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3270,
									"end": 3279,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3266,
									"end": 3284,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3260,
									"end": 3285,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3312,
									"end": 3330,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3304,
									"end": 3310,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3301,
									"end": 3331,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 3334,
									"end": 3413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "tag",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "tag",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 3505,
									"end": 3512,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3496,
									"end": 3502,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3485,
									"end": 3494,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3481,
									"end": 3503,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 3439,
									"end": 3513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "tag",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3231,
									"end": 3523,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2677,
									"end": 3530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3588,
									"end": 3594,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3622,
									"end": 3627,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3616,
									"end": 3628,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3536,
									"end": 3635,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3689,
									"end": 3766,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3686,
									"end": 3687,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3679,
									"end": 3767,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3786,
									"end": 3790,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 3783,
									"end": 3784,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 3776,
									"end": 3791,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3810,
									"end": 3814,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 3807,
									"end": 3808,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3800,
									"end": 3815,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3871,
									"end": 3877,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3908,
									"end": 3909,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 3902,
									"end": 3906,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3898,
									"end": 3910,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3955,
									"end": 3956,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3949,
									"end": 3953,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3945,
									"end": 3957,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3976,
									"end": 3994,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4032,
									"end": 4036,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 4024,
									"end": 4030,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4020,
									"end": 4037,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "tag",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4094,
									"end": 4096,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4086,
									"end": 4092,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4083,
									"end": 4097,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4063,
									"end": 4081,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4060,
									"end": 4098,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 4113,
									"end": 4131,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "tag",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "tag",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3878,
									"end": 4147,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3827,
									"end": 4147,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "tag",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4202,
									"end": 4206,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4225,
									"end": 4228,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4248,
									"end": 4251,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4245,
									"end": 4246,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4238,
									"end": 4252,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4282,
									"end": 4286,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4279,
									"end": 4280,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4153,
									"end": 4294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4337,
									"end": 4343,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4384,
									"end": 4386,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4379,
									"end": 4381,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 4372,
									"end": 4377,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4368,
									"end": 4382,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4364,
									"end": 4387,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4300,
									"end": 4393,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4443,
									"end": 4451,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4493,
									"end": 4498,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4487,
									"end": 4491,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4483,
									"end": 4499,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4399,
									"end": 4506,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4581,
									"end": 4587,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4632,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 4619,
									"end": 4629,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4615,
									"end": 4633,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 4684,
									"end": 4750,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4673,
									"end": 4682,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 4654,
									"end": 4751,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "tag",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 4802,
									"end": 4810,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 4791,
									"end": 4800,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 4772,
									"end": 4811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "tag",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4844,
									"end": 4848,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4840,
									"end": 4849,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 4833,
									"end": 4838,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4829,
									"end": 4850,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4893,
									"end": 4897,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4883,
									"end": 4891,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 4879,
									"end": 4898,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4872,
									"end": 4877,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4869,
									"end": 4899,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4512,
									"end": 4905,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "tag",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4948,
									"end": 4955,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4977,
									"end": 4982,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4911,
									"end": 4988,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5022,
									"end": 5025,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5043,
									"end": 5048,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4994,
									"end": 5054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5110,
									"end": 5119,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 5188,
									"end": 5193,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 5170,
									"end": 5194,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "tag",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 5161,
									"end": 5195,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "tag",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 5143,
									"end": 5196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "tag",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5060,
									"end": 5202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "tag",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5251,
									"end": 5254,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5272,
									"end": 5277,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5208,
									"end": 5283,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 5430,
									"end": 5437,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 5399,
									"end": 5438,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "tag",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "108"
								},
								{
									"begin": 5533,
									"end": 5549,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 5509,
									"end": 5550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "tag",
									"source": 8,
									"value": "108"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5501,
									"end": 5507,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5494,
									"end": 5498,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5488,
									"end": 5499,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 5460,
									"end": 5551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "tag",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5454,
									"end": 5458,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5447,
									"end": 5552,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 5365,
									"end": 5558,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5289,
									"end": 5558,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5609,
									"end": 5612,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5564,
									"end": 5637,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 5720,
									"end": 5752,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "tag",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "112"
								},
								{
									"begin": 5819,
									"end": 5825,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5811,
									"end": 5817,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5805,
									"end": 5809,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 5761,
									"end": 5826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "tag",
									"source": 8,
									"value": "112"
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5696,
									"end": 5832,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5643,
									"end": 5832,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5915,
									"end": 5918,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5908,
									"end": 5913,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5905,
									"end": 5919,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "116"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "117"
								},
								{
									"begin": 6006,
									"end": 6007,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5999,
									"end": 6004,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 5969,
									"end": 6008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "tag",
									"source": 8,
									"value": "117"
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5942,
									"end": 5943,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 5935,
									"end": 5940,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5931,
									"end": 5944,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 8,
									"value": "116"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5838,
									"end": 6024,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6131,
									"end": 6133,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 6126,
									"end": 6129,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6123,
									"end": 6134,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 6197,
									"end": 6202,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 6165,
									"end": 6203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "tag",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "121"
								},
								{
									"begin": 6267,
									"end": 6277,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 6249,
									"end": 6278,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "tag",
									"source": 8,
									"value": "121"
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6239,
									"end": 6247,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6235,
									"end": 6279,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6432,
									"end": 6434,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6420,
									"end": 6430,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6417,
									"end": 6435,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "122"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6453,
									"end": 6461,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "tag",
									"source": 8,
									"value": "122"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "123"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "124"
								},
								{
									"begin": 6550,
									"end": 6553,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 6532,
									"end": 6554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "tag",
									"source": 8,
									"value": "124"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6522,
									"end": 6530,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6518,
									"end": 6555,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6505,
									"end": 6516,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 6476,
									"end": 6556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "tag",
									"source": 8,
									"value": "123"
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "tag",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6030,
									"end": 6573,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "tag",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6633,
									"end": 6641,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6683,
									"end": 6688,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6677,
									"end": 6681,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6673,
									"end": 6689,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6579,
									"end": 6696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "tag",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6746,
									"end": 6752,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "127"
								},
								{
									"begin": 6827,
									"end": 6828,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6823,
									"end": 6829,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 6815,
									"end": 6820,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6812,
									"end": 6813,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 6808,
									"end": 6821,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 6779,
									"end": 6830,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "tag",
									"source": 8,
									"value": "127"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6775,
									"end": 6831,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 6860,
									"end": 6864,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 6854,
									"end": 6858,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6850,
									"end": 6865,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6753,
									"end": 6871,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6702,
									"end": 6871,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6952,
									"end": 6956,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "129"
								},
								{
									"begin": 7123,
									"end": 7126,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7117,
									"end": 7121,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 7098,
									"end": 7127,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "tag",
									"source": 8,
									"value": "129"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7160,
									"end": 7163,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7157,
									"end": 7158,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 7153,
									"end": 7164,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 7147,
									"end": 7151,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7144,
									"end": 7165,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6876,
									"end": 7171,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "tag",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "131"
								},
								{
									"begin": 7326,
									"end": 7329,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 7293,
									"end": 7330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "tag",
									"source": 8,
									"value": "131"
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7387,
									"end": 7393,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7384,
									"end": 7414,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "132"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 7417,
									"end": 7435,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "tag",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "tag",
									"source": 8,
									"value": "132"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "134"
								},
								{
									"begin": 7493,
									"end": 7497,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7487,
									"end": 7498,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 7461,
									"end": 7499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "tag",
									"source": 8,
									"value": "134"
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "135"
								},
								{
									"begin": 7606,
									"end": 7612,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7598,
									"end": 7604,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7592,
									"end": 7596,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 7546,
									"end": 7613,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "tag",
									"source": 8,
									"value": "135"
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7664,
									"end": 7668,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7696,
									"end": 7698,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 7688,
									"end": 7694,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7685,
									"end": 7699,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 7713,
									"end": 7714,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "137"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8370,
									"end": 8371,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8387,
									"end": 8393,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "138"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8436,
									"end": 8445,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8431,
									"end": 8434,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 8427,
									"end": 8446,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8421,
									"end": 8447,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "tag",
									"source": 8,
									"value": "138"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "139"
								},
								{
									"begin": 8547,
									"end": 8553,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 8540,
									"end": 8545,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 8487,
									"end": 8554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "tag",
									"source": 8,
									"value": "139"
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8481,
									"end": 8485,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 8474,
									"end": 8555,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 8343,
									"end": 8565,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "136"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "tag",
									"source": 8,
									"value": "137"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7760,
									"end": 7764,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 7756,
									"end": 7765,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 7748,
									"end": 7754,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7744,
									"end": 7766,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 7826,
									"end": 7830,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 7794,
									"end": 7831,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "tag",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7853,
									"end": 7854,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 8,
									"value": "141"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7881,
									"end": 7888,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7878,
									"end": 7879,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7875,
									"end": 7889,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "143"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 7960,
									"end": 7969,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7955,
									"end": 7958,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 7951,
									"end": 7970,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7945,
									"end": 7971,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 7937,
									"end": 7943,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7930,
									"end": 7972,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 8011,
									"end": 8012,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 8003,
									"end": 8009,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7999,
									"end": 8013,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8058,
									"end": 8060,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8047,
									"end": 8056,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 8043,
									"end": 8061,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7904,
									"end": 7908,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 7901,
									"end": 7902,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7897,
									"end": 7909,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "141"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 8,
									"value": "143"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8103,
									"end": 8109,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 8094,
									"end": 8101,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8091,
									"end": 8110,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "144"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8161,
									"end": 8170,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8156,
									"end": 8159,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 8152,
									"end": 8171,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8146,
									"end": 8172,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "145"
								},
								{
									"begin": 8246,
									"end": 8250,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 8238,
									"end": 8244,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 8234,
									"end": 8251,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 8223,
									"end": 8232,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 8204,
									"end": 8252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "tag",
									"source": 8,
									"value": "145"
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8196,
									"end": 8202,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8189,
									"end": 8253,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 8111,
									"end": 8267,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "tag",
									"source": 8,
									"value": "144"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8313,
									"end": 8314,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 8309,
									"end": 8310,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 8301,
									"end": 8307,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 8297,
									"end": 8311,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 8293,
									"end": 8315,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8287,
									"end": 8291,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 8280,
									"end": 8316,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "tag",
									"source": 8,
									"value": "136"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7176,
									"end": 8571,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 120,
									"end": 426,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 120,
									"end": 426,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 120,
									"end": 426,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 120,
									"end": 426,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 120,
									"end": 426,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 120,
									"end": 426,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 426,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 120,
									"end": 426,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 426,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206aa9ee7d1537134c49f6331d05e6a8a8f8f674aa50c3ba6f859f7d03563a943464736f6c63430008140033",
									".code": [
										{
											"begin": 120,
											"end": 426,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 120,
											"end": 426,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 120,
											"end": 426,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 120,
											"end": 426,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 426,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 120,
											"end": 426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 120,
											"end": 426,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 120,
											"end": 426,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 426,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 120,
											"end": 426,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "PUSH",
											"source": 6,
											"value": "40C10F19"
										},
										{
											"begin": 120,
											"end": 426,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 120,
											"end": 426,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "PUSH",
											"source": 6,
											"value": "40C10F19"
										},
										{
											"begin": 120,
											"end": 426,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 120,
											"end": 426,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 120,
											"end": 426,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 120,
											"end": 426,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 120,
											"end": 426,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 120,
											"end": 426,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "PUSH",
											"source": 6,
											"value": "9DC29FAC"
										},
										{
											"begin": 120,
											"end": 426,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 120,
											"end": 426,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 120,
											"end": 426,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 120,
											"end": 426,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 120,
											"end": 426,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 120,
											"end": 426,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 120,
											"end": 426,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 120,
											"end": 426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 120,
											"end": 426,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 120,
											"end": 426,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 120,
											"end": 426,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 120,
											"end": 426,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 120,
											"end": 426,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 120,
											"end": 426,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 120,
											"end": 426,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 120,
											"end": 426,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 120,
											"end": 426,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 120,
											"end": 426,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 120,
											"end": 426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 426,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 120,
											"end": 426,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 237,
											"end": 324,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 237,
											"end": 324,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 237,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 237,
											"end": 324,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 237,
											"end": 324,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 324,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 237,
											"end": 324,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 237,
											"end": 324,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 237,
											"end": 324,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 237,
											"end": 324,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 237,
											"end": 324,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 237,
											"end": 324,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 237,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 237,
											"end": 324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 237,
											"end": 324,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 237,
											"end": 324,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 237,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 237,
											"end": 324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 237,
											"end": 324,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 237,
											"end": 324,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 237,
											"end": 324,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 332,
											"end": 423,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 332,
											"end": 423,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 332,
											"end": 423,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 332,
											"end": 423,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 332,
											"end": 423,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 332,
											"end": 423,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 332,
											"end": 423,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 332,
											"end": 423,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 332,
											"end": 423,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 332,
											"end": 423,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 332,
											"end": 423,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 332,
											"end": 423,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 332,
											"end": 423,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 332,
											"end": 423,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 332,
											"end": 423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 332,
											"end": 423,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 332,
											"end": 423,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 332,
											"end": 423,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 332,
											"end": 423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 332,
											"end": 423,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 332,
											"end": 423,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 332,
											"end": 423,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 237,
											"end": 324,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 237,
											"end": 324,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 299,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 305,
											"end": 307,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 309,
											"end": 315,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 299,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 299,
											"end": 316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 299,
											"end": 316,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 299,
											"end": 316,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 237,
											"end": 324,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 237,
											"end": 324,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 237,
											"end": 324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 332,
											"end": 423,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 332,
											"end": 423,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 396,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 402,
											"end": 406,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 396,
											"end": 401,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 396,
											"end": 415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 396,
											"end": 415,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 396,
											"end": 415,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 332,
											"end": 423,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 332,
											"end": 423,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 332,
											"end": 423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8336,
											"end": 8337,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8324,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 8389,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 8361,
											"end": 8391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 8419,
											"end": 8426,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8445,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 8411,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 4967,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5133,
											"end": 5155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 5112,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5058,
											"end": 5175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5256,
											"end": 5262,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5264,
											"end": 5270,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5313,
											"end": 5315,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5301,
											"end": 5310,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5292,
											"end": 5299,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5288,
											"end": 5311,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5284,
											"end": 5316,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 5319,
											"end": 5398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5439,
											"end": 5440,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 5509,
											"end": 5516,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5500,
											"end": 5506,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5489,
											"end": 5498,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5485,
											"end": 5507,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 5464,
											"end": 5517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5454,
											"end": 5517,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5454,
											"end": 5517,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5410,
											"end": 5527,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5566,
											"end": 5568,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 5637,
											"end": 5644,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5628,
											"end": 5634,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5617,
											"end": 5626,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5613,
											"end": 5635,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 5592,
											"end": 5645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5582,
											"end": 5645,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5582,
											"end": 5645,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5655,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5188,
											"end": 5662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5668,
											"end": 5848,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 5668,
											"end": 5848,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5716,
											"end": 5793,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5713,
											"end": 5714,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5706,
											"end": 5794,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5813,
											"end": 5817,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 5810,
											"end": 5811,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5803,
											"end": 5818,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5837,
											"end": 5841,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5834,
											"end": 5835,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5827,
											"end": 5842,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5898,
											"end": 5904,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5935,
											"end": 5936,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 5929,
											"end": 5933,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5925,
											"end": 5937,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 5915,
											"end": 5937,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5915,
											"end": 5937,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5982,
											"end": 5983,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5976,
											"end": 5980,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5972,
											"end": 5984,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6003,
											"end": 6021,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6059,
											"end": 6063,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 6051,
											"end": 6057,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6047,
											"end": 6064,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6037,
											"end": 6064,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6037,
											"end": 6064,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6121,
											"end": 6123,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6113,
											"end": 6119,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6110,
											"end": 6124,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6090,
											"end": 6108,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6087,
											"end": 6125,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 6140,
											"end": 6158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5905,
											"end": 6174,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5854,
											"end": 6174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6180,
											"end": 6298,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 6180,
											"end": 6298,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6267,
											"end": 6291,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 6285,
											"end": 6290,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6267,
											"end": 6291,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 6267,
											"end": 6291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6267,
											"end": 6291,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 6267,
											"end": 6291,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6262,
											"end": 6265,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6255,
											"end": 6292,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6180,
											"end": 6298,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6180,
											"end": 6298,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6180,
											"end": 6298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6746,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 6304,
											"end": 6746,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6453,
											"end": 6457,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6491,
											"end": 6493,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 6480,
											"end": 6489,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6476,
											"end": 6494,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6468,
											"end": 6494,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6468,
											"end": 6494,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6504,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 6572,
											"end": 6573,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6561,
											"end": 6570,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6557,
											"end": 6574,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6554,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6504,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 6504,
											"end": 6575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6504,
											"end": 6575,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 6504,
											"end": 6575,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6585,
											"end": 6657,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 6653,
											"end": 6655,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6642,
											"end": 6651,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6638,
											"end": 6656,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6629,
											"end": 6635,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6585,
											"end": 6657,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 6585,
											"end": 6657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6585,
											"end": 6657,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 6585,
											"end": 6657,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6667,
											"end": 6739,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 6735,
											"end": 6737,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6724,
											"end": 6733,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6711,
											"end": 6717,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6667,
											"end": 6739,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 6667,
											"end": 6739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6667,
											"end": 6739,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 6667,
											"end": 6739,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6746,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6746,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6752,
											"end": 6974,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 6752,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6845,
											"end": 6849,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6883,
											"end": 6885,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6872,
											"end": 6881,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6868,
											"end": 6886,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6896,
											"end": 6967,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 6964,
											"end": 6965,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6953,
											"end": 6962,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6949,
											"end": 6966,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6940,
											"end": 6946,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6896,
											"end": 6967,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 6896,
											"end": 6967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6896,
											"end": 6967,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 6896,
											"end": 6967,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6752,
											"end": 6974,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6752,
											"end": 6974,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6752,
											"end": 6974,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6752,
											"end": 6974,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6752,
											"end": 6974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6980,
											"end": 7160,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 6980,
											"end": 7160,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7028,
											"end": 7105,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7025,
											"end": 7026,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7106,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7125,
											"end": 7129,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 7122,
											"end": 7123,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7115,
											"end": 7130,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7149,
											"end": 7153,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7146,
											"end": 7147,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7139,
											"end": 7154,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7206,
											"end": 7209,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7225,
											"end": 7245,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 7243,
											"end": 7244,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7225,
											"end": 7245,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 7225,
											"end": 7245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7225,
											"end": 7245,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 7225,
											"end": 7245,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7220,
											"end": 7245,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7220,
											"end": 7245,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7259,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 7277,
											"end": 7278,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7259,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 7259,
											"end": 7279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7259,
											"end": 7279,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 7259,
											"end": 7279,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7254,
											"end": 7279,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7254,
											"end": 7279,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7302,
											"end": 7303,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7299,
											"end": 7300,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7295,
											"end": 7304,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7288,
											"end": 7304,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7288,
											"end": 7304,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7323,
											"end": 7326,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7320,
											"end": 7321,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7317,
											"end": 7327,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 7330,
											"end": 7348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7166,
											"end": 7357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/blockmagic_hackaton/Dex_functionalities/LPToken.sol",
								"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"decimals()": "313ce567",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/blockmagic_hackaton/Dex_functionalities/LPToken.sol\":\"LPToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/blockmagic_hackaton/Dex_functionalities/LPToken.sol\":{\"keccak256\":\"0x612e79f9c478d3f30fdf0370bb075f51f6263af1f73776bf9dfa9efcd40fcf87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5f788cba7194c6ca095727f5635b2475642c61bb914d8d5915b9cd84860d2b2\",\"dweb:/ipfs/QmXqfurBngJgEyRZ5jVnfkQ3kBrTvXsLHZjg1E8vKrepBu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 205,
								"contract": "contracts/blockmagic_hackaton/Dex_functionalities/LPToken.sol:LPToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 211,
								"contract": "contracts/blockmagic_hackaton/Dex_functionalities/LPToken.sol:LPToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 213,
								"contract": "contracts/blockmagic_hackaton/Dex_functionalities/LPToken.sol:LPToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 215,
								"contract": "contracts/blockmagic_hackaton/Dex_functionalities/LPToken.sol:LPToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 217,
								"contract": "contracts/blockmagic_hackaton/Dex_functionalities/LPToken.sol:LPToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol": {
				"Pair": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token1",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_priceFeed0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_priceFeed1",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_lpToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reserve0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reserve1",
									"type": "uint256"
								}
							],
							"name": "LiquidityAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reserve0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reserve1",
									"type": "uint256"
								}
							],
							"name": "LiquidityRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "usdAmount",
									"type": "uint256"
								}
							],
							"name": "addLiquidityInUSD",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "inputToken",
									"type": "address"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDAIperLinkMarketPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDAIperLinkOurDEXPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getLPTokenDetails",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "inputToken",
									"type": "address"
								}
							],
							"name": "getPrice",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPriceRatio",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lpToken",
							"outputs": [
								{
									"internalType": "contract LPToken",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "usdAmount",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityInUSD",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserve0",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserve1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "usdAmount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "inputToken",
									"type": "address"
								}
							],
							"name": "swapInUSD",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addLiquidityInUSD(uint256)": {
								"details": "External function to add liquidity in USD equivalent without enforcing ratio.",
								"params": {
									"usdAmount": "Total USD value of liquidity to add."
								}
							},
							"constructor": {
								"details": "Constructor to initialize the pair contract with token addresses and price feeds.",
								"params": {
									"_lpToken": "Address of the LP token contract.",
									"_priceFeed0": "Address of the Chainlink price feed for token0/USD.",
									"_priceFeed1": "Address of the Chainlink price feed for token1/USD.",
									"_token0": "Address of token0.",
									"_token1": "Address of token1."
								}
							},
							"getDAIperLinkMarketPrice()": {
								"details": "View function to get the current market price ratio of token0 to token1 using Chainlink price feeds.",
								"returns": {
									"_0": "uint256 Market price ratio of token0 to token1."
								}
							},
							"getDAIperLinkOurDEXPrice()": {
								"details": "View function to get the price of token0 in terms of token1 using the AMM formula.",
								"returns": {
									"_0": "uint256 Price of token0 in terms of token1."
								}
							},
							"getLPTokenDetails(address)": {
								"details": "View function to get LP token details and balance for a specific address.",
								"params": {
									"user": "Address of the user to check."
								},
								"returns": {
									"_0": "(address, uint256) Address of the LP token and balance of the user."
								}
							},
							"getPrice(address)": {
								"details": "View function to get the current price of a token from the Chainlink price feed.",
								"params": {
									"inputToken": "Address of the token to get the price for."
								},
								"returns": {
									"_0": "int Current price of the token in USD."
								}
							},
							"getPriceRatio()": {
								"details": "View function to get the price ratio between token0 and token1.",
								"returns": {
									"_0": "int Price ratio of token0 to token1."
								}
							},
							"getReserves()": {
								"details": "View function to get the current reserves of the pool.",
								"returns": {
									"_0": "(uint256, uint256) Reserves of token0 and token1."
								}
							},
							"removeLiquidityInUSD(uint256)": {
								"details": "External function to remove liquidity in USD equivalent without enforcing ratio.",
								"params": {
									"usdAmount": "Total USD value of liquidity to remove."
								}
							},
							"swapInUSD(uint256,address)": {
								"details": "External function to swap tokens using USD value.",
								"params": {
									"inputToken": "Address of the input token.",
									"usdAmount": "Amount of USD to swap from inputToken to outputToken."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":252:11276  contract Pair {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":1455:1929  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":1733:1740  _token0 */\n  dup5\n    /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":1724:1730  token0 */\n  0x00\n  dup1\n    /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":1724:1740  token0 = _token0 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":1760:1767  _token1 */\n  dup4\n    /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":1751:1757  token1 */\n  0x01\n  0x00\n    /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":1751:1767  token1 = _token1 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":1813:1824  _priceFeed0 */\n  dup3\n    /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":1778:1788  priceFeed0 */\n  0x05\n  0x00\n    /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":1778:1825  priceFeed0 = AggregatorV3Interface(_priceFeed0) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":1871:1882  _priceFeed1 */\n  dup2\n    /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":1836:1846  priceFeed1 */\n  0x06\n  0x00\n    /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":1836:1883  priceFeed1 = AggregatorV3Interface(_priceFeed1) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":1912:1920  _lpToken */\n  dup1\n    /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":1894:1901  lpToken */\n  0x02\n  0x00\n    /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":1894:1921  lpToken = LPToken(_lpToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":1455:1929  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":252:11276  contract Pair {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1822   */\ntag_3:\n    /* \"#utility.yul\":951:957   */\n  0x00\n    /* \"#utility.yul\":959:965   */\n  dup1\n    /* \"#utility.yul\":967:973   */\n  0x00\n    /* \"#utility.yul\":975:981   */\n  dup1\n    /* \"#utility.yul\":983:989   */\n  0x00\n    /* \"#utility.yul\":1032:1035   */\n  0xa0\n    /* \"#utility.yul\":1020:1029   */\n  dup7\n    /* \"#utility.yul\":1011:1018   */\n  dup9\n    /* \"#utility.yul\":1007:1030   */\n  sub\n    /* \"#utility.yul\":1003:1036   */\n  slt\n    /* \"#utility.yul\":1000:1120   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":1039:1118   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":1000:1120   */\ntag_27:\n    /* \"#utility.yul\":1159:1160   */\n  0x00\n    /* \"#utility.yul\":1184:1248   */\n  tag_29\n    /* \"#utility.yul\":1240:1247   */\n  dup9\n    /* \"#utility.yul\":1231:1237   */\n  dup3\n    /* \"#utility.yul\":1220:1229   */\n  dup10\n    /* \"#utility.yul\":1216:1238   */\n  add\n    /* \"#utility.yul\":1184:1248   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1174:1248   */\n  swap6\n  pop\n    /* \"#utility.yul\":1130:1258   */\n  pop\n    /* \"#utility.yul\":1297:1299   */\n  0x20\n    /* \"#utility.yul\":1323:1387   */\n  tag_30\n    /* \"#utility.yul\":1379:1386   */\n  dup9\n    /* \"#utility.yul\":1370:1376   */\n  dup3\n    /* \"#utility.yul\":1359:1368   */\n  dup10\n    /* \"#utility.yul\":1355:1377   */\n  add\n    /* \"#utility.yul\":1323:1387   */\n  tag_13\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1313:1387   */\n  swap5\n  pop\n    /* \"#utility.yul\":1268:1397   */\n  pop\n    /* \"#utility.yul\":1436:1438   */\n  0x40\n    /* \"#utility.yul\":1462:1526   */\n  tag_31\n    /* \"#utility.yul\":1518:1525   */\n  dup9\n    /* \"#utility.yul\":1509:1515   */\n  dup3\n    /* \"#utility.yul\":1498:1507   */\n  dup10\n    /* \"#utility.yul\":1494:1516   */\n  add\n    /* \"#utility.yul\":1462:1526   */\n  tag_13\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1452:1526   */\n  swap4\n  pop\n    /* \"#utility.yul\":1407:1536   */\n  pop\n    /* \"#utility.yul\":1575:1577   */\n  0x60\n    /* \"#utility.yul\":1601:1665   */\n  tag_32\n    /* \"#utility.yul\":1657:1664   */\n  dup9\n    /* \"#utility.yul\":1648:1654   */\n  dup3\n    /* \"#utility.yul\":1637:1646   */\n  dup10\n    /* \"#utility.yul\":1633:1655   */\n  add\n    /* \"#utility.yul\":1601:1665   */\n  tag_13\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1591:1665   */\n  swap3\n  pop\n    /* \"#utility.yul\":1546:1675   */\n  pop\n    /* \"#utility.yul\":1714:1717   */\n  0x80\n    /* \"#utility.yul\":1741:1805   */\n  tag_33\n    /* \"#utility.yul\":1797:1804   */\n  dup9\n    /* \"#utility.yul\":1788:1794   */\n  dup3\n    /* \"#utility.yul\":1777:1786   */\n  dup10\n    /* \"#utility.yul\":1773:1795   */\n  add\n    /* \"#utility.yul\":1741:1805   */\n  tag_13\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1731:1805   */\n  swap2\n  pop\n    /* \"#utility.yul\":1685:1815   */\n  pop\n    /* \"#utility.yul\":845:1822   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\n    /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":252:11276  contract Pair {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":252:11276  contract Pair {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5fcbd285\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xbff46a4c\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xbff46a4c\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xd0e7e07e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xd21220a7\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf140a35a\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x5fcbd285\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x64e7b85a\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x729132f9\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa996944c\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x443cb4bc\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x443cb4bc\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x5444a39d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x54b2a769\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5a76f25e\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x0902f1ac\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0dfe1681\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x41976e09\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5495:5603  function getReserves() public view returns (uint256, uint256) {... */\n    tag_3:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap3\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":310:331  address public token0 */\n    tag_4:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5847:6294  function getPrice(address inputToken) public view returns (int) {... */\n    tag_5:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":470:493  uint256 public reserve0 */\n    tag_6:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4621:5335  function removeLiquidityInUSD(uint256 usdAmount) external {... */\n    tag_7:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      stop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":6450:6747  function getPriceRatio() public view returns (int) {... */\n    tag_8:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":500:523  uint256 public reserve1 */\n    tag_9:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":366:388  LPToken public lpToken */\n    tag_10:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3051:3625  function addLiquidityInUSD(uint256 usdAmount) external {... */\n    tag_11:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9298:9530  function getDAIperLinkOurDEXPrice() public view returns (uint256) {... */\n    tag_12:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9734:10031  function getDAIperLinkMarketPrice() public view returns (uint256) {... */\n    tag_13:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":11088:11273  function getLPTokenDetails(address user) public view returns (address, uint256) {... */\n    tag_14:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_65\n      swap3\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7813:9116  function swapInUSD(uint256 usdAmount, address inputToken) external {... */\n    tag_15:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n    tag_67:\n      stop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":338:359  address public token1 */\n    tag_16:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7032:7591  function getAmountOut(uint256 amountIn, address inputToken) public view returns (uint256 amountOut) {... */\n    tag_17:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5495:5603  function getReserves() public view returns (uint256, uint256) {... */\n    tag_22:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5539:5546  uint256 */\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5548:5555  uint256 */\n      dup1\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5576:5584  reserve0 */\n      sload(0x03)\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5586:5594  reserve1 */\n      sload(0x04)\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5568:5595  return (reserve0, reserve1) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5495:5603  function getReserves() public view returns (uint256, uint256) {... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":310:331  address public token0 */\n    tag_26:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5847:6294  function getPrice(address inputToken) public view returns (int) {... */\n    tag_32:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5906:5909  int */\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5944:5950  token0 */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5930:5950  inputToken == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5930:5940  inputToken */\n      dup3\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5930:5950  inputToken == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5930:5974  inputToken == token0 || inputToken == token1 */\n      dup1\n      tag_80\n      jumpi\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5968:5974  token1 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5954:5974  inputToken == token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5954:5964  inputToken */\n      dup3\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5954:5974  inputToken == token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5930:5974  inputToken == token0 || inputToken == token1 */\n    tag_80:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5922:5998  require(inputToken == token0 || inputToken == token1, \"Invalid input token\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":6011:6020  int price */\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":6049:6055  token0 */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":6035:6055  inputToken == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":6035:6045  inputToken */\n      dup4\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":6035:6055  inputToken == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":6031:6201  if (inputToken == token0) {... */\n      tag_84\n      jumpi\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":6086:6096  priceFeed0 */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":6086:6112  priceFeed0.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":6086:6114  priceFeed0.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_86\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_86:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":6072:6114  (,price,,,) = priceFeed0.latestRoundData() */\n      swap1\n      swap2\n      swap3\n      swap4\n      pop\n      swap1\n      swap2\n      pop\n      swap1\n      pop\n      pop\n      dup1\n      swap2\n      pop\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":6031:6201  if (inputToken == token0) {... */\n      jump(tag_89)\n    tag_84:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":6161:6171  priceFeed1 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":6161:6187  priceFeed1.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":6161:6189  priceFeed1.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_91\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_91:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_92:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":6147:6189  (,price,,,) = priceFeed1.latestRoundData() */\n      swap1\n      swap2\n      swap3\n      swap4\n      pop\n      swap1\n      swap2\n      pop\n      swap1\n      pop\n      pop\n      dup1\n      swap2\n      pop\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":6031:6201  if (inputToken == token0) {... */\n    tag_89:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":6226:6232  10**10 */\n      0x02540be400\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":6218:6223  price */\n      dup2\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":6218:6232  price * 10**10 */\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":6211:6232  return price * 10**10 */\n      swap2\n      pop\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5847:6294  function getPrice(address inputToken) public view returns (int) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":470:493  uint256 public reserve0 */\n    tag_36:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4621:5335  function removeLiquidityInUSD(uint256 usdAmount) external {... */\n    tag_42:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4755:4769  uint256 price0 */\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4780:4796  getPrice(token0) */\n      tag_96\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4789:4795  token0 */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4780:4788  getPrice */\n      tag_32\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4780:4796  getPrice(token0) */\n      jump\t// in\n    tag_96:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4755:4797  uint256 price0 = uint256(getPrice(token0)) */\n      swap1\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4808:4822  uint256 price1 */\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4833:4849  getPrice(token1) */\n      tag_97\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4842:4848  token1 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4833:4841  getPrice */\n      tag_32\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4833:4849  getPrice(token1) */\n      jump\t// in\n    tag_97:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4808:4850  uint256 price1 = uint256(getPrice(token1)) */\n      swap1\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4958:4973  uint256 amount0 */\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5004:5010  price0 */\n      dup3\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5000:5001  2 */\n      0x02\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5000:5010  2 * price0 */\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4989:4995  10**18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4977:4986  usdAmount */\n      dup6\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4977:4995  usdAmount * 10**18 */\n      tag_100\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_100:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4976:5011  (usdAmount * 10**18) / (2 * price0) */\n      tag_101\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4958:5011  uint256 amount0 = (usdAmount * 10**18) / (2 * price0) */\n      swap1\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5022:5037  uint256 amount1 */\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5068:5074  price1 */\n      dup3\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5064:5065  2 */\n      0x02\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5064:5074  2 * price1 */\n      tag_103\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_103:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5053:5059  10**18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5041:5050  usdAmount */\n      dup7\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5041:5059  usdAmount * 10**18 */\n      tag_104\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_104:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5040:5075  (usdAmount * 10**18) / (2 * price1) */\n      tag_105\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_105:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5022:5075  uint256 amount1 = (usdAmount * 10**18) / (2 * price1) */\n      swap1\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5134:5151  uint256 liquidity */\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5154:5245  min(amount0 * lpToken.totalSupply() / reserve0, amount1 * lpToken.totalSupply() / reserve1) */\n      tag_106\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5192:5200  reserve0 */\n      sload(0x03)\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5168:5175  lpToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5168:5187  lpToken.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5168:5189  lpToken.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_108\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_108:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5158:5165  amount0 */\n      dup6\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5158:5189  amount0 * lpToken.totalSupply() */\n      tag_111\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_111:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5158:5200  amount0 * lpToken.totalSupply() / reserve0 */\n      tag_112\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_112:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5236:5244  reserve1 */\n      sload(0x04)\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5212:5219  lpToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5212:5231  lpToken.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5212:5233  lpToken.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_114\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_114:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_115\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_115:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5202:5209  amount1 */\n      dup6\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5202:5233  amount1 * lpToken.totalSupply() */\n      tag_116\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_116:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5202:5244  amount1 * lpToken.totalSupply() / reserve1 */\n      tag_117\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_117:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5154:5157  min */\n      tag_118\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5154:5245  min(amount0 * lpToken.totalSupply() / reserve0, amount1 * lpToken.totalSupply() / reserve1) */\n      jump\t// in\n    tag_106:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5134:5245  uint256 liquidity = min(amount0 * lpToken.totalSupply() / reserve0, amount1 * lpToken.totalSupply() / reserve1) */\n      swap1\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5301:5327  removeLiquidity(liquidity) */\n      tag_119\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5317:5326  liquidity */\n      dup2\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5301:5316  removeLiquidity */\n      tag_120\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":5301:5327  removeLiquidity(liquidity) */\n      jump\t// in\n    tag_119:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4679:5335  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4621:5335  function removeLiquidityInUSD(uint256 usdAmount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":6450:6747  function getPriceRatio() public view returns (int) {... */\n    tag_44:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":6496:6499  int */\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":6514:6524  int price0 */\n      dup1\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":6531:6541  priceFeed0 */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":6531:6557  priceFeed0.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":6531:6559  priceFeed0.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_123\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_123:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_124\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_124:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":6512:6559  (,int price0,,,) = priceFeed0.latestRoundData() */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":6572:6582  int price1 */\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":6589:6599  priceFeed1 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":6589:6615  priceFeed1.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":6589:6617  priceFeed1.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_126\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_126:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_127\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_127:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":6570:6617  (,int price1,,,) = priceFeed1.latestRoundData() */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":6677:6683  10**10 */\n      0x02540be400\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":6668:6674  price1 */\n      dup2\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":6668:6683  price1 * 10**10 */\n      tag_128\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_128:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":6656:6663  10 ** 8 */\n      0x05f5e100\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":6645:6651  10**10 */\n      0x02540be400\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":6636:6642  price0 */\n      dup5\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":6636:6651  price0 * 10**10 */\n      tag_129\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_129:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":6635:6664  (price0 * 10**10) * (10 ** 8) */\n      tag_130\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_130:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":6635:6684  (price0 * 10**10) * (10 ** 8) / (price1 * 10**10) */\n      tag_131\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":6628:6684  return (price0 * 10**10) * (10 ** 8) / (price1 * 10**10) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":6450:6747  function getPriceRatio() public view returns (int) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":500:523  uint256 public reserve1 */\n    tag_47:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":366:388  LPToken public lpToken */\n    tag_50:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3051:3625  function addLiquidityInUSD(uint256 usdAmount) external {... */\n    tag_55:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3182:3196  uint256 price0 */\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3207:3223  getPrice(token0) */\n      tag_134\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3216:3222  token0 */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3207:3215  getPrice */\n      tag_32\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3207:3223  getPrice(token0) */\n      jump\t// in\n    tag_134:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3182:3224  uint256 price0 = uint256(getPrice(token0)) */\n      swap1\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3235:3249  uint256 price1 */\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3260:3276  getPrice(token1) */\n      tag_135\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3269:3275  token1 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3260:3268  getPrice */\n      tag_32\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3260:3276  getPrice(token1) */\n      jump\t// in\n    tag_135:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3235:3277  uint256 price1 = uint256(getPrice(token1)) */\n      swap1\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3385:3400  uint256 amount0 */\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3431:3437  price0 */\n      dup3\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3427:3428  2 */\n      0x02\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3427:3437  2 * price0 */\n      tag_136\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_136:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3416:3422  10**18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3404:3413  usdAmount */\n      dup6\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3404:3422  usdAmount * 10**18 */\n      tag_137\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_137:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3403:3438  (usdAmount * 10**18) / (2 * price0) */\n      tag_138\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_138:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3385:3438  uint256 amount0 = (usdAmount * 10**18) / (2 * price0) */\n      swap1\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3449:3464  uint256 amount1 */\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3495:3501  price1 */\n      dup3\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3491:3492  2 */\n      0x02\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3491:3501  2 * price1 */\n      tag_139\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_139:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3480:3486  10**18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3468:3477  usdAmount */\n      dup7\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3468:3486  usdAmount * 10**18 */\n      tag_140\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_140:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3467:3502  (usdAmount * 10**18) / (2 * price1) */\n      tag_141\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_141:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3449:3502  uint256 amount1 = (usdAmount * 10**18) / (2 * price1) */\n      swap1\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3587:3617  addLiquidity(amount0, amount1) */\n      tag_142\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3600:3607  amount0 */\n      dup3\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3609:3616  amount1 */\n      dup3\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3587:3599  addLiquidity */\n      tag_143\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3587:3617  addLiquidity(amount0, amount1) */\n      jump\t// in\n    tag_142:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3106:3625  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3051:3625  function addLiquidityInUSD(uint256 usdAmount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9298:9530  function getDAIperLinkOurDEXPrice() public view returns (uint256) {... */\n    tag_57:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9355:9362  uint256 */\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9394:9395  0 */\n      dup1\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9383:9391  reserve0 */\n      sload(0x03)\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9383:9395  reserve0 > 0 */\n      gt\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9383:9411  reserve0 > 0 && reserve1 > 0 */\n      dup1\n      iszero\n      tag_145\n      jumpi\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9410:9411  0 */\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9399:9407  reserve1 */\n      sload(0x04)\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9399:9411  reserve1 > 0 */\n      gt\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9383:9411  reserve0 > 0 && reserve1 > 0 */\n    tag_145:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9375:9436  require(reserve0 > 0 && reserve1 > 0, \"Reserves are not set\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9476:9484  reserve0 */\n      sload(0x03)\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9466:9472  10**18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9455:9463  reserve1 */\n      sload(0x04)\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9455:9472  reserve1 * 10**18 */\n      tag_149\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_149:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9454:9484  (reserve1 * 10**18) / reserve0 */\n      tag_150\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_150:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9447:9484  return (reserve1 * 10**18) / reserve0 */\n      swap1\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9298:9530  function getDAIperLinkOurDEXPrice() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9734:10031  function getDAIperLinkMarketPrice() public view returns (uint256) {... */\n    tag_60:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9791:9798  uint256 */\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9813:9823  int price0 */\n      dup1\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9830:9840  priceFeed0 */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9830:9856  priceFeed0.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9830:9858  priceFeed0.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_153\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_153:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_154\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_154:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9811:9858  (,int price0,,,) = priceFeed0.latestRoundData() */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9871:9881  int price1 */\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9888:9898  priceFeed1 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9888:9914  priceFeed1.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9888:9916  priceFeed1.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_156\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_156:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_157\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_157:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9869:9916  (,int price1,,,) = priceFeed1.latestRoundData() */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9971:9977  price1 */\n      dup1\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9953:9959  10**18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9943:9949  price0 */\n      dup4\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9935:9959  uint256(price0) * 10**18 */\n      tag_158\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_158:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9934:9978  (uint256(price0) * 10**18) / uint256(price1) */\n      tag_159\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_159:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9927:9978  return (uint256(price0) * 10**18) / uint256(price1) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9734:10031  function getDAIperLinkMarketPrice() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":11088:11273  function getLPTokenDetails(address user) public view returns (address, uint256) {... */\n    tag_64:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":11150:11157  address */\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":11159:11166  uint256 */\n      dup1\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":11179:11194  uint256 balance */\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":11197:11204  lpToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":11197:11214  lpToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":11215:11219  user */\n      dup6\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":11197:11220  lpToken.balanceOf(user) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_161:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_163\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_163:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_164\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_164:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":11179:11220  uint256 balance = lpToken.balanceOf(user) */\n      swap1\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":11247:11254  lpToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":11257:11264  balance */\n      dup2\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":11231:11265  return (address(lpToken), balance) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":11088:11273  function getLPTokenDetails(address user) public view returns (address, uint256) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7813:9116  function swapInUSD(uint256 usdAmount, address inputToken) external {... */\n    tag_70:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7913:7919  token0 */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7899:7919  inputToken == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7899:7909  inputToken */\n      dup2\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7899:7919  inputToken == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7899:7943  inputToken == token0 || inputToken == token1 */\n      dup1\n      tag_166\n      jumpi\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7937:7943  token1 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7923:7943  inputToken == token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7923:7933  inputToken */\n      dup2\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7923:7943  inputToken == token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7899:7943  inputToken == token0 || inputToken == token1 */\n    tag_166:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7891:7967  require(inputToken == token0 || inputToken == token1, \"Invalid input token\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap1\n      tag_83\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8045:8059  uint256 price0 */\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8070:8086  getPrice(token0) */\n      tag_169\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8079:8085  token0 */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8070:8078  getPrice */\n      tag_32\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8070:8086  getPrice(token0) */\n      jump\t// in\n    tag_169:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8045:8087  uint256 price0 = uint256(getPrice(token0)) */\n      swap1\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8098:8112  uint256 price1 */\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8123:8139  getPrice(token1) */\n      tag_170\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8132:8138  token1 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8123:8131  getPrice */\n      tag_32\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8123:8139  getPrice(token1) */\n      jump\t// in\n    tag_170:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8098:8140  uint256 price1 = uint256(getPrice(token1)) */\n      swap1\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8153:8171  bool isInputToken0 */\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8189:8195  token0 */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8175:8195  inputToken == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8175:8185  inputToken */\n      dup5\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8175:8195  inputToken == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8153:8196  bool isInputToken0 = (inputToken == token0) */\n      swap1\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8207:8226  address outputToken */\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8229:8242  isInputToken0 */\n      dup2\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8229:8260  isInputToken0 ? token1 : token0 */\n      tag_171\n      jumpi\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8254:8260  token0 */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8229:8260  isInputToken0 ? token1 : token0 */\n      jump(tag_172)\n    tag_171:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8245:8251  token1 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8229:8260  isInputToken0 ? token1 : token0 */\n    tag_172:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8207:8260  address outputToken = isInputToken0 ? token1 : token0 */\n      swap1\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8271:8289  uint256 inputPrice */\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8292:8305  isInputToken0 */\n      dup3\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8292:8323  isInputToken0 ? price0 : price1 */\n      tag_173\n      jumpi\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8317:8323  price1 */\n      dup4\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8292:8323  isInputToken0 ? price0 : price1 */\n      jump(tag_174)\n    tag_173:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8308:8314  price0 */\n      dup5\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8292:8323  isInputToken0 ? price0 : price1 */\n    tag_174:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8271:8323  uint256 inputPrice = isInputToken0 ? price0 : price1 */\n      swap1\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8408:8424  uint256 amountIn */\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8450:8460  inputPrice */\n      dup2\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8440:8446  10**18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8428:8437  usdAmount */\n      dup10\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8428:8446  usdAmount * 10**18 */\n      tag_175\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_175:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8427:8460  (usdAmount * 10**18) / inputPrice */\n      tag_176\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_176:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8408:8460  uint256 amountIn = (usdAmount * 10**18) / inputPrice */\n      swap1\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8545:8562  uint256 amountOut */\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8565:8599  getAmountOut(amountIn, inputToken) */\n      tag_177\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8578:8586  amountIn */\n      dup3\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8588:8598  inputToken */\n      dup10\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8565:8577  getAmountOut */\n      tag_76\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8565:8599  getAmountOut(amountIn, inputToken) */\n      jump\t// in\n    tag_177:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8545:8599  uint256 amountOut = getAmountOut(amountIn, inputToken) */\n      swap1\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8683:8693  inputToken */\n      dup8\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8676:8707  IERC20(inputToken).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8708:8718  msg.sender */\n      caller\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8728:8732  this */\n      address\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8735:8743  amountIn */\n      dup6\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8676:8744  IERC20(inputToken).transferFrom(msg.sender, address(this), amountIn) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_181\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_181:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_182\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8829:8840  outputToken */\n      dup4\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8822:8850  IERC20(outputToken).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8851:8861  msg.sender */\n      caller\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8863:8872  amountOut */\n      dup4\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8822:8873  IERC20(outputToken).transfer(msg.sender, amountOut) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_184\n      swap3\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_184:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_186\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_186:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_187\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_187:\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8922:8935  isInputToken0 */\n      dup5\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8918:9109  if (isInputToken0) {... */\n      iszero\n      tag_188\n      jumpi\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8964:8972  amountIn */\n      dup2\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8952:8960  reserve0 */\n      0x03\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8952:8972  reserve0 += amountIn */\n      dup3\n      dup3\n      sload\n      tag_189\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8999:9008  amountOut */\n      dup1\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8987:8995  reserve1 */\n      0x04\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8987:9008  reserve1 -= amountOut */\n      dup3\n      dup3\n      sload\n      tag_191\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8918:9109  if (isInputToken0) {... */\n      jump(tag_193)\n    tag_188:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9053:9061  amountIn */\n      dup2\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9041:9049  reserve1 */\n      0x04\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9041:9061  reserve1 += amountIn */\n      dup3\n      dup3\n      sload\n      tag_194\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_194:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9088:9097  amountOut */\n      dup1\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9076:9084  reserve0 */\n      0x03\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":9076:9097  reserve0 -= amountOut */\n      dup3\n      dup3\n      sload\n      tag_195\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_195:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":8918:9109  if (isInputToken0) {... */\n    tag_193:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7880:9116  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7813:9116  function swapInUSD(uint256 usdAmount, address inputToken) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":338:359  address public token1 */\n    tag_72:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7032:7591  function getAmountOut(uint256 amountIn, address inputToken) public view returns (uint256 amountOut) {... */\n    tag_76:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7113:7130  uint256 amountOut */\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7165:7171  token0 */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7151:7171  inputToken == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7151:7161  inputToken */\n      dup3\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7151:7171  inputToken == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7151:7195  inputToken == token0 || inputToken == token1 */\n      dup1\n      tag_197\n      jumpi\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7189:7195  token1 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7175:7195  inputToken == token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7175:7185  inputToken */\n      dup3\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7175:7195  inputToken == token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7151:7195  inputToken == token0 || inputToken == token1 */\n    tag_197:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7143:7219  require(inputToken == token0 || inputToken == token1, \"Invalid input token\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap1\n      tag_83\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_198:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7230:7248  bool isInputToken0 */\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7266:7272  token0 */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7252:7272  inputToken == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7252:7262  inputToken */\n      dup4\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7252:7272  inputToken == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7230:7273  bool isInputToken0 = (inputToken == token0) */\n      swap1\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7284:7304  uint256 inputReserve */\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7307:7320  isInputToken0 */\n      dup2\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7307:7342  isInputToken0 ? reserve0 : reserve1 */\n      tag_200\n      jumpi\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7334:7342  reserve1 */\n      sload(0x04)\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7307:7342  isInputToken0 ? reserve0 : reserve1 */\n      jump(tag_201)\n    tag_200:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7323:7331  reserve0 */\n      sload(0x03)\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7307:7342  isInputToken0 ? reserve0 : reserve1 */\n    tag_201:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7284:7342  uint256 inputReserve = isInputToken0 ? reserve0 : reserve1 */\n      swap1\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7353:7374  uint256 outputReserve */\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7377:7390  isInputToken0 */\n      dup3\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7377:7412  isInputToken0 ? reserve1 : reserve0 */\n      tag_202\n      jumpi\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7404:7412  reserve0 */\n      sload(0x03)\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7377:7412  isInputToken0 ? reserve1 : reserve0 */\n      jump(tag_203)\n    tag_202:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7393:7401  reserve1 */\n      sload(0x04)\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7377:7412  isInputToken0 ? reserve1 : reserve0 */\n    tag_203:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7353:7412  uint256 outputReserve = isInputToken0 ? reserve1 : reserve0 */\n      swap1\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7423:7446  uint256 amountInWithFee */\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7466:7470  1000 */\n      0x03e8\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7460:7463  997 */\n      0x03e5\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7449:7457  amountIn */\n      dup9\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7449:7463  amountIn * 997 */\n      tag_204\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_204:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7449:7470  amountIn * 997 / 1000 */\n      tag_205\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_205:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7423:7470  uint256 amountInWithFee = amountIn * 997 / 1000 */\n      swap1\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7567:7582  amountInWithFee */\n      dup1\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7552:7564  inputReserve */\n      dup4\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7552:7582  inputReserve + amountInWithFee */\n      tag_206\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_206:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7535:7548  outputReserve */\n      dup3\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7517:7532  amountInWithFee */\n      dup3\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7517:7548  amountInWithFee * outputReserve */\n      tag_207\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_207:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7517:7583  amountInWithFee * outputReserve / (inputReserve + amountInWithFee) */\n      tag_208\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_208:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7505:7583  amountOut = amountInWithFee * outputReserve / (inputReserve + amountInWithFee) */\n      swap5\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7132:7591  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":7032:7591  function getAmountOut(uint256 amountIn, address inputToken) public view returns (uint256 amountOut) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10745:10841  function min(uint x, uint y) internal pure returns (uint z) {... */\n    tag_118:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10797:10803  uint z */\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10824:10825  y */\n      dup2\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10820:10821  x */\n      dup4\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10820:10825  x < y */\n      lt\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10820:10833  x < y ? x : y */\n      tag_210\n      jumpi\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10832:10833  y */\n      dup2\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10820:10833  x < y ? x : y */\n      jump(tag_211)\n    tag_210:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10828:10829  x */\n      dup3\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10820:10833  x < y ? x : y */\n    tag_211:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10816:10833  z = x < y ? x : y */\n      swap1\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10745:10841  function min(uint x, uint y) internal pure returns (uint z) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3769:4436  function removeLiquidity(uint256 liquidity) internal {... */\n    tag_120:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3853:3854  0 */\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3841:3850  liquidity */\n      dup2\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3841:3854  liquidity > 0 */\n      gt\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3833:3881  require(liquidity > 0, \"Insufficient liquidity\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_214\n      swap1\n      tag_215\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_213:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3894:3909  uint256 amount0 */\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3935:3942  lpToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3935:3954  lpToken.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3935:3956  lpToken.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_217\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_217:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_218\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_218:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3924:3932  reserve0 */\n      sload(0x03)\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3912:3921  liquidity */\n      dup4\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3912:3932  liquidity * reserve0 */\n      tag_219\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_219:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3912:3956  liquidity * reserve0 / lpToken.totalSupply() */\n      tag_220\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_220:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3894:3956  uint256 amount0 = liquidity * reserve0 / lpToken.totalSupply() */\n      swap1\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3967:3982  uint256 amount1 */\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4008:4015  lpToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4008:4027  lpToken.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4008:4029  lpToken.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_222\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_222:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_223\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_223:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3997:4005  reserve1 */\n      sload(0x04)\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3985:3994  liquidity */\n      dup5\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3985:4005  liquidity * reserve1 */\n      tag_224\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_224:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3985:4029  liquidity * reserve1 / lpToken.totalSupply() */\n      tag_225\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_225:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3967:4029  uint256 amount1 = liquidity * reserve1 / lpToken.totalSupply() */\n      swap1\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4060:4061  0 */\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4050:4057  amount0 */\n      dup3\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4050:4061  amount0 > 0 */\n      gt\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4050:4076  amount0 > 0 && amount1 > 0 */\n      dup1\n      iszero\n      tag_226\n      jumpi\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4075:4076  0 */\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4065:4072  amount1 */\n      dup2\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4065:4076  amount1 > 0 */\n      gt\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4050:4076  amount0 > 0 && amount1 > 0 */\n    tag_226:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4042:4111  require(amount0 > 0 && amount1 > 0, \"Insufficient liquidity removed\") */\n      tag_227\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_228\n      swap1\n      tag_229\n      jump\t// in\n    tag_228:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_227:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4124:4131  lpToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4124:4136  lpToken.burn */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9dc29fac\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4137:4147  msg.sender */\n      caller\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4149:4158  liquidity */\n      dup6\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4124:4159  lpToken.burn(msg.sender, liquidity) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_230\n      swap3\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_230:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_231\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_231:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_233\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_233:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4179:4185  token0 */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4172:4195  IERC20(token0).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4196:4206  msg.sender */\n      caller\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4208:4215  amount0 */\n      dup5\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4172:4216  IERC20(token0).transfer(msg.sender, amount0) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_234\n      swap3\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_234:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_236\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_236:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_237\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_237:\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4234:4240  token1 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4227:4250  IERC20(token1).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4251:4261  msg.sender */\n      caller\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4263:4270  amount1 */\n      dup4\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4227:4271  IERC20(token1).transfer(msg.sender, amount1) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_238\n      swap3\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_238:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_240\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_240:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_241\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_241:\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4296:4303  amount0 */\n      dup2\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4284:4292  reserve0 */\n      0x03\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4284:4303  reserve0 -= amount0 */\n      dup3\n      dup3\n      sload\n      tag_242\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_242:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4326:4333  amount1 */\n      dup1\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4314:4322  reserve1 */\n      0x04\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4314:4333  reserve1 -= amount1 */\n      dup3\n      dup3\n      sload\n      tag_243\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_243:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4368:4378  msg.sender */\n      caller\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4351:4428  LiquidityRemoved(msg.sender, amount0, amount1, liquidity, reserve0, reserve1) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x04f7e4f53152cb2cd0e424b2fc990199f0ed4255c7a97a848131f1eeff165f7b\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4380:4387  amount0 */\n      dup4\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4389:4396  amount1 */\n      dup4\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4398:4407  liquidity */\n      dup7\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4409:4417  reserve0 */\n      sload(0x03)\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4419:4427  reserve1 */\n      sload(0x04)\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":4351:4428  LiquidityRemoved(msg.sender, amount0, amount1, liquidity, reserve0, reserve1) */\n      mload(0x40)\n      tag_244\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_244:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3822:4436  {... */\n      pop\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":3769:4436  function removeLiquidity(uint256 liquidity) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2112:2872  function addLiquidity(uint256 amount0, uint256 amount1) internal {... */\n    tag_143:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2195:2201  token0 */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2188:2215  IERC20(token0).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2216:2226  msg.sender */\n      caller\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2236:2240  this */\n      address\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2243:2250  amount0 */\n      dup6\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2188:2251  IERC20(token0).transferFrom(msg.sender, address(this), amount0) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_247\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_247:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_249\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_249:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_250\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_250:\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2269:2275  token1 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2262:2289  IERC20(token1).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2290:2300  msg.sender */\n      caller\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2310:2314  this */\n      address\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2317:2324  amount1 */\n      dup5\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2262:2325  IERC20(token1).transferFrom(msg.sender, address(this), amount1) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_251\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_251:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_253\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_253:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_254\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_254:\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2338:2355  uint256 liquidity */\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2395:2396  0 */\n      dup1\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2370:2377  lpToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2370:2389  lpToken.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2370:2391  lpToken.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_256\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_256:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_257\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_257:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2370:2396  lpToken.totalSupply() == 0 */\n      sub\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2366:2596  if (lpToken.totalSupply() == 0) {... */\n      tag_258\n      jumpi\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2425:2448  sqrt(amount0 * amount1) */\n      tag_259\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2440:2447  amount1 */\n      dup3\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2430:2437  amount0 */\n      dup5\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2430:2447  amount0 * amount1 */\n      tag_260\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_260:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2425:2429  sqrt */\n      tag_261\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2425:2448  sqrt(amount0 * amount1) */\n      jump\t// in\n    tag_259:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2413:2448  liquidity = sqrt(amount0 * amount1) */\n      swap1\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2366:2596  if (lpToken.totalSupply() == 0) {... */\n      jump(tag_262)\n    tag_258:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2493:2584  min(amount0 * lpToken.totalSupply() / reserve0, amount1 * lpToken.totalSupply() / reserve1) */\n      tag_263\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2531:2539  reserve0 */\n      sload(0x03)\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2507:2514  lpToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2507:2526  lpToken.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2507:2528  lpToken.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_265\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_265:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_266\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_266:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2497:2504  amount0 */\n      dup6\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2497:2528  amount0 * lpToken.totalSupply() */\n      tag_267\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_267:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2497:2539  amount0 * lpToken.totalSupply() / reserve0 */\n      tag_268\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_268:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2575:2583  reserve1 */\n      sload(0x04)\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2551:2558  lpToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2551:2570  lpToken.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2551:2572  lpToken.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_270\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_270:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_271\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_271:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2541:2548  amount1 */\n      dup6\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2541:2572  amount1 * lpToken.totalSupply() */\n      tag_272\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_272:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2541:2583  amount1 * lpToken.totalSupply() / reserve1 */\n      tag_273\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_273:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2493:2496  min */\n      tag_118\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2493:2584  min(amount0 * lpToken.totalSupply() / reserve0, amount1 * lpToken.totalSupply() / reserve1) */\n      jump\t// in\n    tag_263:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2481:2584  liquidity = min(amount0 * lpToken.totalSupply() / reserve0, amount1 * lpToken.totalSupply() / reserve1) */\n      swap1\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2366:2596  if (lpToken.totalSupply() == 0) {... */\n    tag_262:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2628:2629  0 */\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2616:2625  liquidity */\n      dup2\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2616:2629  liquidity > 0 */\n      gt\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2608:2665  require(liquidity > 0, \"Insufficient liquidity provided\") */\n      tag_274\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_275\n      swap1\n      tag_276\n      jump\t// in\n    tag_275:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_274:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2676:2683  lpToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2676:2688  lpToken.mint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x40c10f19\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2689:2699  msg.sender */\n      caller\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2701:2710  liquidity */\n      dup4\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2676:2711  lpToken.mint(msg.sender, liquidity) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_277\n      swap3\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_277:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_278\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_278:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_280\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_280:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2736:2743  amount0 */\n      dup3\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2724:2732  reserve0 */\n      0x03\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2724:2743  reserve0 += amount0 */\n      dup3\n      dup3\n      sload\n      tag_281\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_281:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2766:2773  amount1 */\n      dup2\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2754:2762  reserve1 */\n      0x04\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2754:2773  reserve1 += amount1 */\n      dup3\n      dup3\n      sload\n      tag_282\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_282:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2804:2814  msg.sender */\n      caller\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2789:2864  LiquidityAdded(msg.sender, amount0, amount1, liquidity, reserve0, reserve1) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0103e5727ee41ce8741fbdf27e5e596deb21dbe5ae93901499306d10f28d1ef7\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2816:2823  amount0 */\n      dup5\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2825:2832  amount1 */\n      dup5\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2834:2843  liquidity */\n      dup5\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2845:2853  reserve0 */\n      sload(0x03)\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2855:2863  reserve1 */\n      sload(0x04)\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2789:2864  LiquidityAdded(msg.sender, amount0, amount1, liquidity, reserve0, reserve1) */\n      mload(0x40)\n      tag_283\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_283:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2177:2872  {... */\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":2112:2872  function addLiquidity(uint256 amount0, uint256 amount1) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10250:10553  function sqrt(uint y) internal pure returns (uint z) {... */\n    tag_261:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10295:10301  uint z */\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10322:10323  3 */\n      0x03\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10318:10319  y */\n      dup3\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10318:10323  y > 3 */\n      gt\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10314:10546  if (y > 3) {... */\n      iszero\n      tag_285\n      jumpi\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10344:10345  y */\n      dup2\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10340:10345  z = y */\n      swap1\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10360:10366  uint x */\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10377:10378  1 */\n      0x01\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10373:10374  2 */\n      0x02\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10369:10370  y */\n      dup5\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10369:10374  y / 2 */\n      tag_286\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_286:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10369:10378  y / 2 + 1 */\n      tag_287\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_287:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10360:10378  uint x = y / 2 + 1 */\n      swap1\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10393:10485  while (x < z) {... */\n    tag_288:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10404:10405  z */\n      dup2\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10400:10401  x */\n      dup2\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10400:10405  x < z */\n      lt\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10393:10485  while (x < z) {... */\n      iszero\n      tag_289\n      jumpi\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10430:10431  x */\n      dup1\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10426:10431  z = x */\n      swap2\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10468:10469  2 */\n      0x02\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10463:10464  x */\n      dup2\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10459:10460  x */\n      dup3\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10455:10456  y */\n      dup6\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10455:10460  y / x */\n      tag_290\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_290:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10455:10464  y / x + x */\n      tag_291\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_291:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10454:10469  (y / x + x) / 2 */\n      tag_292\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_292:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10450:10469  x = (y / x + x) / 2 */\n      swap1\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10393:10485  while (x < z) {... */\n      jump(tag_288)\n    tag_289:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10325:10496  {... */\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10314:10546  if (y > 3) {... */\n      jump(tag_293)\n    tag_285:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10511:10512  0 */\n      0x00\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10506:10507  y */\n      dup3\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10506:10512  y != 0 */\n      eq\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10502:10546  if (y != 0) {... */\n      tag_294\n      jumpi\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10533:10534  1 */\n      0x01\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10529:10534  z = 1 */\n      swap1\n      pop\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10502:10546  if (y != 0) {... */\n    tag_294:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10314:10546  if (y > 3) {... */\n    tag_293:\n        /* \"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":10250:10553  function sqrt(uint y) internal pure returns (uint z) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_295:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_296:\n        /* \"#utility.yul\":177:201   */\n      tag_339\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_295\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:546   */\n    tag_24:\n        /* \"#utility.yul\":335:339   */\n      0x00\n        /* \"#utility.yul\":373:375   */\n      0x40\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":358:376   */\n      add\n        /* \"#utility.yul\":350:376   */\n      swap1\n      pop\n        /* \"#utility.yul\":386:457   */\n      tag_341\n        /* \"#utility.yul\":454:455   */\n      0x00\n        /* \"#utility.yul\":443:452   */\n      dup4\n        /* \"#utility.yul\":439:456   */\n      add\n        /* \"#utility.yul\":430:436   */\n      dup6\n        /* \"#utility.yul\":386:457   */\n      tag_296\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":467:539   */\n      tag_342\n        /* \"#utility.yul\":535:537   */\n      0x20\n        /* \"#utility.yul\":524:533   */\n      dup4\n        /* \"#utility.yul\":520:538   */\n      add\n        /* \"#utility.yul\":511:517   */\n      dup5\n        /* \"#utility.yul\":467:539   */\n      tag_296\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":214:546   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":552:678   */\n    tag_297:\n        /* \"#utility.yul\":589:596   */\n      0x00\n        /* \"#utility.yul\":629:671   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":622:627   */\n      dup3\n        /* \"#utility.yul\":618:672   */\n      and\n        /* \"#utility.yul\":607:672   */\n      swap1\n      pop\n        /* \"#utility.yul\":552:678   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":684:780   */\n    tag_298:\n        /* \"#utility.yul\":721:728   */\n      0x00\n        /* \"#utility.yul\":750:774   */\n      tag_345\n        /* \"#utility.yul\":768:773   */\n      dup3\n        /* \"#utility.yul\":750:774   */\n      tag_297\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":739:774   */\n      swap1\n      pop\n        /* \"#utility.yul\":684:780   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":786:904   */\n    tag_299:\n        /* \"#utility.yul\":873:897   */\n      tag_347\n        /* \"#utility.yul\":891:896   */\n      dup2\n        /* \"#utility.yul\":873:897   */\n      tag_298\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":868:871   */\n      dup3\n        /* \"#utility.yul\":861:898   */\n      mstore\n        /* \"#utility.yul\":786:904   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":910:1132   */\n    tag_28:\n        /* \"#utility.yul\":1003:1007   */\n      0x00\n        /* \"#utility.yul\":1041:1043   */\n      0x20\n        /* \"#utility.yul\":1030:1039   */\n      dup3\n        /* \"#utility.yul\":1026:1044   */\n      add\n        /* \"#utility.yul\":1018:1044   */\n      swap1\n      pop\n        /* \"#utility.yul\":1054:1125   */\n      tag_349\n        /* \"#utility.yul\":1122:1123   */\n      0x00\n        /* \"#utility.yul\":1111:1120   */\n      dup4\n        /* \"#utility.yul\":1107:1124   */\n      add\n        /* \"#utility.yul\":1098:1104   */\n      dup5\n        /* \"#utility.yul\":1054:1125   */\n      tag_299\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":910:1132   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1219:1336   */\n    tag_301:\n        /* \"#utility.yul\":1328:1329   */\n      0x00\n        /* \"#utility.yul\":1325:1326   */\n      dup1\n        /* \"#utility.yul\":1318:1330   */\n      revert\n        /* \"#utility.yul\":1465:1587   */\n    tag_303:\n        /* \"#utility.yul\":1538:1562   */\n      tag_354\n        /* \"#utility.yul\":1556:1561   */\n      dup2\n        /* \"#utility.yul\":1538:1562   */\n      tag_298\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":1531:1536   */\n      dup2\n        /* \"#utility.yul\":1528:1563   */\n      eq\n        /* \"#utility.yul\":1518:1581   */\n      tag_355\n      jumpi\n        /* \"#utility.yul\":1577:1578   */\n      0x00\n        /* \"#utility.yul\":1574:1575   */\n      dup1\n        /* \"#utility.yul\":1567:1579   */\n      revert\n        /* \"#utility.yul\":1518:1581   */\n    tag_355:\n        /* \"#utility.yul\":1465:1587   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1593:1732   */\n    tag_304:\n        /* \"#utility.yul\":1639:1644   */\n      0x00\n        /* \"#utility.yul\":1677:1683   */\n      dup2\n        /* \"#utility.yul\":1664:1684   */\n      calldataload\n        /* \"#utility.yul\":1655:1684   */\n      swap1\n      pop\n        /* \"#utility.yul\":1693:1726   */\n      tag_357\n        /* \"#utility.yul\":1720:1725   */\n      dup2\n        /* \"#utility.yul\":1693:1726   */\n      tag_303\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":1593:1732   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1738:2067   */\n    tag_31:\n        /* \"#utility.yul\":1797:1803   */\n      0x00\n        /* \"#utility.yul\":1846:1848   */\n      0x20\n        /* \"#utility.yul\":1834:1843   */\n      dup3\n        /* \"#utility.yul\":1825:1832   */\n      dup5\n        /* \"#utility.yul\":1821:1844   */\n      sub\n        /* \"#utility.yul\":1817:1849   */\n      slt\n        /* \"#utility.yul\":1814:1933   */\n      iszero\n      tag_359\n      jumpi\n        /* \"#utility.yul\":1852:1931   */\n      tag_360\n      tag_301\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":1814:1933   */\n    tag_359:\n        /* \"#utility.yul\":1972:1973   */\n      0x00\n        /* \"#utility.yul\":1997:2050   */\n      tag_361\n        /* \"#utility.yul\":2042:2049   */\n      dup5\n        /* \"#utility.yul\":2033:2039   */\n      dup3\n        /* \"#utility.yul\":2022:2031   */\n      dup6\n        /* \"#utility.yul\":2018:2040   */\n      add\n        /* \"#utility.yul\":1997:2050   */\n      tag_304\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":1987:2050   */\n      swap2\n      pop\n        /* \"#utility.yul\":1943:2060   */\n      pop\n        /* \"#utility.yul\":1738:2067   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2073:2149   */\n    tag_305:\n        /* \"#utility.yul\":2109:2116   */\n      0x00\n        /* \"#utility.yul\":2138:2143   */\n      dup2\n        /* \"#utility.yul\":2127:2143   */\n      swap1\n      pop\n        /* \"#utility.yul\":2073:2149   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2155:2270   */\n    tag_306:\n        /* \"#utility.yul\":2240:2263   */\n      tag_364\n        /* \"#utility.yul\":2257:2262   */\n      dup2\n        /* \"#utility.yul\":2240:2263   */\n      tag_305\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":2235:2238   */\n      dup3\n        /* \"#utility.yul\":2228:2264   */\n      mstore\n        /* \"#utility.yul\":2155:2270   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2276:2494   */\n    tag_34:\n        /* \"#utility.yul\":2367:2371   */\n      0x00\n        /* \"#utility.yul\":2405:2407   */\n      0x20\n        /* \"#utility.yul\":2394:2403   */\n      dup3\n        /* \"#utility.yul\":2390:2408   */\n      add\n        /* \"#utility.yul\":2382:2408   */\n      swap1\n      pop\n        /* \"#utility.yul\":2418:2487   */\n      tag_366\n        /* \"#utility.yul\":2484:2485   */\n      0x00\n        /* \"#utility.yul\":2473:2482   */\n      dup4\n        /* \"#utility.yul\":2469:2486   */\n      add\n        /* \"#utility.yul\":2460:2466   */\n      dup5\n        /* \"#utility.yul\":2418:2487   */\n      tag_306\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":2276:2494   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2500:2722   */\n    tag_38:\n        /* \"#utility.yul\":2593:2597   */\n      0x00\n        /* \"#utility.yul\":2631:2633   */\n      0x20\n        /* \"#utility.yul\":2620:2629   */\n      dup3\n        /* \"#utility.yul\":2616:2634   */\n      add\n        /* \"#utility.yul\":2608:2634   */\n      swap1\n      pop\n        /* \"#utility.yul\":2644:2715   */\n      tag_368\n        /* \"#utility.yul\":2712:2713   */\n      0x00\n        /* \"#utility.yul\":2701:2710   */\n      dup4\n        /* \"#utility.yul\":2697:2714   */\n      add\n        /* \"#utility.yul\":2688:2694   */\n      dup5\n        /* \"#utility.yul\":2644:2715   */\n      tag_296\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":2500:2722   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2728:2850   */\n    tag_307:\n        /* \"#utility.yul\":2801:2825   */\n      tag_370\n        /* \"#utility.yul\":2819:2824   */\n      dup2\n        /* \"#utility.yul\":2801:2825   */\n      tag_295\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":2794:2799   */\n      dup2\n        /* \"#utility.yul\":2791:2826   */\n      eq\n        /* \"#utility.yul\":2781:2844   */\n      tag_371\n      jumpi\n        /* \"#utility.yul\":2840:2841   */\n      0x00\n        /* \"#utility.yul\":2837:2838   */\n      dup1\n        /* \"#utility.yul\":2830:2842   */\n      revert\n        /* \"#utility.yul\":2781:2844   */\n    tag_371:\n        /* \"#utility.yul\":2728:2850   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2856:2995   */\n    tag_308:\n        /* \"#utility.yul\":2902:2907   */\n      0x00\n        /* \"#utility.yul\":2940:2946   */\n      dup2\n        /* \"#utility.yul\":2927:2947   */\n      calldataload\n        /* \"#utility.yul\":2918:2947   */\n      swap1\n      pop\n        /* \"#utility.yul\":2956:2989   */\n      tag_373\n        /* \"#utility.yul\":2983:2988   */\n      dup2\n        /* \"#utility.yul\":2956:2989   */\n      tag_307\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":2856:2995   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3001:3330   */\n    tag_41:\n        /* \"#utility.yul\":3060:3066   */\n      0x00\n        /* \"#utility.yul\":3109:3111   */\n      0x20\n        /* \"#utility.yul\":3097:3106   */\n      dup3\n        /* \"#utility.yul\":3088:3095   */\n      dup5\n        /* \"#utility.yul\":3084:3107   */\n      sub\n        /* \"#utility.yul\":3080:3112   */\n      slt\n        /* \"#utility.yul\":3077:3196   */\n      iszero\n      tag_375\n      jumpi\n        /* \"#utility.yul\":3115:3194   */\n      tag_376\n      tag_301\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":3077:3196   */\n    tag_375:\n        /* \"#utility.yul\":3235:3236   */\n      0x00\n        /* \"#utility.yul\":3260:3313   */\n      tag_377\n        /* \"#utility.yul\":3305:3312   */\n      dup5\n        /* \"#utility.yul\":3296:3302   */\n      dup3\n        /* \"#utility.yul\":3285:3294   */\n      dup6\n        /* \"#utility.yul\":3281:3303   */\n      add\n        /* \"#utility.yul\":3260:3313   */\n      tag_308\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":3250:3313   */\n      swap2\n      pop\n        /* \"#utility.yul\":3206:3323   */\n      pop\n        /* \"#utility.yul\":3001:3330   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3336:3396   */\n    tag_309:\n        /* \"#utility.yul\":3364:3367   */\n      0x00\n        /* \"#utility.yul\":3385:3390   */\n      dup2\n        /* \"#utility.yul\":3378:3390   */\n      swap1\n      pop\n        /* \"#utility.yul\":3336:3396   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3402:3544   */\n    tag_310:\n        /* \"#utility.yul\":3452:3461   */\n      0x00\n        /* \"#utility.yul\":3485:3538   */\n      tag_380\n        /* \"#utility.yul\":3503:3537   */\n      tag_381\n        /* \"#utility.yul\":3512:3536   */\n      tag_382\n        /* \"#utility.yul\":3530:3535   */\n      dup5\n        /* \"#utility.yul\":3512:3536   */\n      tag_297\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":3503:3537   */\n      tag_309\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":3485:3538   */\n      tag_297\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":3472:3538   */\n      swap1\n      pop\n        /* \"#utility.yul\":3402:3544   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3550:3676   */\n    tag_311:\n        /* \"#utility.yul\":3600:3609   */\n      0x00\n        /* \"#utility.yul\":3633:3670   */\n      tag_384\n        /* \"#utility.yul\":3664:3669   */\n      dup3\n        /* \"#utility.yul\":3633:3670   */\n      tag_310\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":3620:3670   */\n      swap1\n      pop\n        /* \"#utility.yul\":3550:3676   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3682:3823   */\n    tag_312:\n        /* \"#utility.yul\":3747:3756   */\n      0x00\n        /* \"#utility.yul\":3780:3817   */\n      tag_386\n        /* \"#utility.yul\":3811:3816   */\n      dup3\n        /* \"#utility.yul\":3780:3817   */\n      tag_311\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":3767:3817   */\n      swap1\n      pop\n        /* \"#utility.yul\":3682:3823   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3829:3990   */\n    tag_313:\n        /* \"#utility.yul\":3931:3983   */\n      tag_388\n        /* \"#utility.yul\":3977:3982   */\n      dup2\n        /* \"#utility.yul\":3931:3983   */\n      tag_312\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":3926:3929   */\n      dup3\n        /* \"#utility.yul\":3919:3984   */\n      mstore\n        /* \"#utility.yul\":3829:3990   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3996:4248   */\n    tag_52:\n        /* \"#utility.yul\":4104:4108   */\n      0x00\n        /* \"#utility.yul\":4142:4144   */\n      0x20\n        /* \"#utility.yul\":4131:4140   */\n      dup3\n        /* \"#utility.yul\":4127:4145   */\n      add\n        /* \"#utility.yul\":4119:4145   */\n      swap1\n      pop\n        /* \"#utility.yul\":4155:4241   */\n      tag_390\n        /* \"#utility.yul\":4238:4239   */\n      0x00\n        /* \"#utility.yul\":4227:4236   */\n      dup4\n        /* \"#utility.yul\":4223:4240   */\n      add\n        /* \"#utility.yul\":4214:4220   */\n      dup5\n        /* \"#utility.yul\":4155:4241   */\n      tag_313\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":3996:4248   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4254:4586   */\n    tag_66:\n        /* \"#utility.yul\":4375:4379   */\n      0x00\n        /* \"#utility.yul\":4413:4415   */\n      0x40\n        /* \"#utility.yul\":4402:4411   */\n      dup3\n        /* \"#utility.yul\":4398:4416   */\n      add\n        /* \"#utility.yul\":4390:4416   */\n      swap1\n      pop\n        /* \"#utility.yul\":4426:4497   */\n      tag_392\n        /* \"#utility.yul\":4494:4495   */\n      0x00\n        /* \"#utility.yul\":4483:4492   */\n      dup4\n        /* \"#utility.yul\":4479:4496   */\n      add\n        /* \"#utility.yul\":4470:4476   */\n      dup6\n        /* \"#utility.yul\":4426:4497   */\n      tag_299\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":4507:4579   */\n      tag_393\n        /* \"#utility.yul\":4575:4577   */\n      0x20\n        /* \"#utility.yul\":4564:4573   */\n      dup4\n        /* \"#utility.yul\":4560:4578   */\n      add\n        /* \"#utility.yul\":4551:4557   */\n      dup5\n        /* \"#utility.yul\":4507:4579   */\n      tag_296\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":4254:4586   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4592:5066   */\n    tag_69:\n        /* \"#utility.yul\":4660:4666   */\n      0x00\n        /* \"#utility.yul\":4668:4674   */\n      dup1\n        /* \"#utility.yul\":4717:4719   */\n      0x40\n        /* \"#utility.yul\":4705:4714   */\n      dup4\n        /* \"#utility.yul\":4696:4703   */\n      dup6\n        /* \"#utility.yul\":4692:4715   */\n      sub\n        /* \"#utility.yul\":4688:4720   */\n      slt\n        /* \"#utility.yul\":4685:4804   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":4723:4802   */\n      tag_396\n      tag_301\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":4685:4804   */\n    tag_395:\n        /* \"#utility.yul\":4843:4844   */\n      0x00\n        /* \"#utility.yul\":4868:4921   */\n      tag_397\n        /* \"#utility.yul\":4913:4920   */\n      dup6\n        /* \"#utility.yul\":4904:4910   */\n      dup3\n        /* \"#utility.yul\":4893:4902   */\n      dup7\n        /* \"#utility.yul\":4889:4911   */\n      add\n        /* \"#utility.yul\":4868:4921   */\n      tag_308\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":4858:4921   */\n      swap3\n      pop\n        /* \"#utility.yul\":4814:4931   */\n      pop\n        /* \"#utility.yul\":4970:4972   */\n      0x20\n        /* \"#utility.yul\":4996:5049   */\n      tag_398\n        /* \"#utility.yul\":5041:5048   */\n      dup6\n        /* \"#utility.yul\":5032:5038   */\n      dup3\n        /* \"#utility.yul\":5021:5030   */\n      dup7\n        /* \"#utility.yul\":5017:5039   */\n      add\n        /* \"#utility.yul\":4996:5049   */\n      tag_304\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":4986:5049   */\n      swap2\n      pop\n        /* \"#utility.yul\":4941:5059   */\n      pop\n        /* \"#utility.yul\":4592:5066   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5072:5241   */\n    tag_314:\n        /* \"#utility.yul\":5156:5167   */\n      0x00\n        /* \"#utility.yul\":5190:5196   */\n      dup3\n        /* \"#utility.yul\":5185:5188   */\n      dup3\n        /* \"#utility.yul\":5178:5197   */\n      mstore\n        /* \"#utility.yul\":5230:5234   */\n      0x20\n        /* \"#utility.yul\":5225:5228   */\n      dup3\n        /* \"#utility.yul\":5221:5235   */\n      add\n        /* \"#utility.yul\":5206:5235   */\n      swap1\n      pop\n        /* \"#utility.yul\":5072:5241   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5247:5416   */\n    tag_315:\n        /* \"#utility.yul\":5387:5408   */\n      0x496e76616c696420696e70757420746f6b656e00000000000000000000000000\n        /* \"#utility.yul\":5383:5384   */\n      0x00\n        /* \"#utility.yul\":5375:5381   */\n      dup3\n        /* \"#utility.yul\":5371:5385   */\n      add\n        /* \"#utility.yul\":5364:5409   */\n      mstore\n        /* \"#utility.yul\":5247:5416   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5422:5788   */\n    tag_316:\n        /* \"#utility.yul\":5564:5567   */\n      0x00\n        /* \"#utility.yul\":5585:5652   */\n      tag_402\n        /* \"#utility.yul\":5649:5651   */\n      0x13\n        /* \"#utility.yul\":5644:5647   */\n      dup4\n        /* \"#utility.yul\":5585:5652   */\n      tag_314\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":5578:5652   */\n      swap2\n      pop\n        /* \"#utility.yul\":5661:5754   */\n      tag_403\n        /* \"#utility.yul\":5750:5753   */\n      dup3\n        /* \"#utility.yul\":5661:5754   */\n      tag_315\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":5779:5781   */\n      0x20\n        /* \"#utility.yul\":5774:5777   */\n      dup3\n        /* \"#utility.yul\":5770:5782   */\n      add\n        /* \"#utility.yul\":5763:5782   */\n      swap1\n      pop\n        /* \"#utility.yul\":5422:5788   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5794:6213   */\n    tag_83:\n        /* \"#utility.yul\":5960:5964   */\n      0x00\n        /* \"#utility.yul\":5998:6000   */\n      0x20\n        /* \"#utility.yul\":5987:5996   */\n      dup3\n        /* \"#utility.yul\":5983:6001   */\n      add\n        /* \"#utility.yul\":5975:6001   */\n      swap1\n      pop\n        /* \"#utility.yul\":6047:6056   */\n      dup2\n        /* \"#utility.yul\":6041:6045   */\n      dup2\n        /* \"#utility.yul\":6037:6057   */\n      sub\n        /* \"#utility.yul\":6033:6034   */\n      0x00\n        /* \"#utility.yul\":6022:6031   */\n      dup4\n        /* \"#utility.yul\":6018:6035   */\n      add\n        /* \"#utility.yul\":6011:6058   */\n      mstore\n        /* \"#utility.yul\":6075:6206   */\n      tag_405\n        /* \"#utility.yul\":6201:6205   */\n      dup2\n        /* \"#utility.yul\":6075:6206   */\n      tag_316\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":6067:6206   */\n      swap1\n      pop\n        /* \"#utility.yul\":5794:6213   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6219:6324   */\n    tag_317:\n        /* \"#utility.yul\":6255:6262   */\n      0x00\n        /* \"#utility.yul\":6295:6317   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":6288:6293   */\n      dup3\n        /* \"#utility.yul\":6284:6318   */\n      and\n        /* \"#utility.yul\":6273:6318   */\n      swap1\n      pop\n        /* \"#utility.yul\":6219:6324   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6330:6450   */\n    tag_318:\n        /* \"#utility.yul\":6402:6425   */\n      tag_408\n        /* \"#utility.yul\":6419:6424   */\n      dup2\n        /* \"#utility.yul\":6402:6425   */\n      tag_317\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":6395:6400   */\n      dup2\n        /* \"#utility.yul\":6392:6426   */\n      eq\n        /* \"#utility.yul\":6382:6444   */\n      tag_409\n      jumpi\n        /* \"#utility.yul\":6440:6441   */\n      0x00\n        /* \"#utility.yul\":6437:6438   */\n      dup1\n        /* \"#utility.yul\":6430:6442   */\n      revert\n        /* \"#utility.yul\":6382:6444   */\n    tag_409:\n        /* \"#utility.yul\":6330:6450   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6456:6597   */\n    tag_319:\n        /* \"#utility.yul\":6512:6517   */\n      0x00\n        /* \"#utility.yul\":6543:6549   */\n      dup2\n        /* \"#utility.yul\":6537:6550   */\n      mload\n        /* \"#utility.yul\":6528:6550   */\n      swap1\n      pop\n        /* \"#utility.yul\":6559:6591   */\n      tag_411\n        /* \"#utility.yul\":6585:6590   */\n      dup2\n        /* \"#utility.yul\":6559:6591   */\n      tag_318\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":6456:6597   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6603:6723   */\n    tag_320:\n        /* \"#utility.yul\":6675:6698   */\n      tag_413\n        /* \"#utility.yul\":6692:6697   */\n      dup2\n        /* \"#utility.yul\":6675:6698   */\n      tag_305\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":6668:6673   */\n      dup2\n        /* \"#utility.yul\":6665:6699   */\n      eq\n        /* \"#utility.yul\":6655:6717   */\n      tag_414\n      jumpi\n        /* \"#utility.yul\":6713:6714   */\n      0x00\n        /* \"#utility.yul\":6710:6711   */\n      dup1\n        /* \"#utility.yul\":6703:6715   */\n      revert\n        /* \"#utility.yul\":6655:6717   */\n    tag_414:\n        /* \"#utility.yul\":6603:6723   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6729:6870   */\n    tag_321:\n        /* \"#utility.yul\":6785:6790   */\n      0x00\n        /* \"#utility.yul\":6816:6822   */\n      dup2\n        /* \"#utility.yul\":6810:6823   */\n      mload\n        /* \"#utility.yul\":6801:6823   */\n      swap1\n      pop\n        /* \"#utility.yul\":6832:6864   */\n      tag_416\n        /* \"#utility.yul\":6858:6863   */\n      dup2\n        /* \"#utility.yul\":6832:6864   */\n      tag_320\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":6729:6870   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6876:7019   */\n    tag_322:\n        /* \"#utility.yul\":6933:6938   */\n      0x00\n        /* \"#utility.yul\":6964:6970   */\n      dup2\n        /* \"#utility.yul\":6958:6971   */\n      mload\n        /* \"#utility.yul\":6949:6971   */\n      swap1\n      pop\n        /* \"#utility.yul\":6980:7013   */\n      tag_418\n        /* \"#utility.yul\":7007:7012   */\n      dup2\n        /* \"#utility.yul\":6980:7013   */\n      tag_307\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":6876:7019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7025:7996   */\n    tag_88:\n        /* \"#utility.yul\":7128:7134   */\n      0x00\n        /* \"#utility.yul\":7136:7142   */\n      dup1\n        /* \"#utility.yul\":7144:7150   */\n      0x00\n        /* \"#utility.yul\":7152:7158   */\n      dup1\n        /* \"#utility.yul\":7160:7166   */\n      0x00\n        /* \"#utility.yul\":7209:7212   */\n      0xa0\n        /* \"#utility.yul\":7197:7206   */\n      dup7\n        /* \"#utility.yul\":7188:7195   */\n      dup9\n        /* \"#utility.yul\":7184:7207   */\n      sub\n        /* \"#utility.yul\":7180:7213   */\n      slt\n        /* \"#utility.yul\":7177:7297   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":7216:7295   */\n      tag_421\n      tag_301\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":7177:7297   */\n    tag_420:\n        /* \"#utility.yul\":7336:7337   */\n      0x00\n        /* \"#utility.yul\":7361:7424   */\n      tag_422\n        /* \"#utility.yul\":7416:7423   */\n      dup9\n        /* \"#utility.yul\":7407:7413   */\n      dup3\n        /* \"#utility.yul\":7396:7405   */\n      dup10\n        /* \"#utility.yul\":7392:7414   */\n      add\n        /* \"#utility.yul\":7361:7424   */\n      tag_319\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":7351:7424   */\n      swap6\n      pop\n        /* \"#utility.yul\":7307:7434   */\n      pop\n        /* \"#utility.yul\":7473:7475   */\n      0x20\n        /* \"#utility.yul\":7499:7562   */\n      tag_423\n        /* \"#utility.yul\":7554:7561   */\n      dup9\n        /* \"#utility.yul\":7545:7551   */\n      dup3\n        /* \"#utility.yul\":7534:7543   */\n      dup10\n        /* \"#utility.yul\":7530:7552   */\n      add\n        /* \"#utility.yul\":7499:7562   */\n      tag_321\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":7489:7562   */\n      swap5\n      pop\n        /* \"#utility.yul\":7444:7572   */\n      pop\n        /* \"#utility.yul\":7611:7613   */\n      0x40\n        /* \"#utility.yul\":7637:7701   */\n      tag_424\n        /* \"#utility.yul\":7693:7700   */\n      dup9\n        /* \"#utility.yul\":7684:7690   */\n      dup3\n        /* \"#utility.yul\":7673:7682   */\n      dup10\n        /* \"#utility.yul\":7669:7691   */\n      add\n        /* \"#utility.yul\":7637:7701   */\n      tag_322\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":7627:7701   */\n      swap4\n      pop\n        /* \"#utility.yul\":7582:7711   */\n      pop\n        /* \"#utility.yul\":7750:7752   */\n      0x60\n        /* \"#utility.yul\":7776:7840   */\n      tag_425\n        /* \"#utility.yul\":7832:7839   */\n      dup9\n        /* \"#utility.yul\":7823:7829   */\n      dup3\n        /* \"#utility.yul\":7812:7821   */\n      dup10\n        /* \"#utility.yul\":7808:7830   */\n      add\n        /* \"#utility.yul\":7776:7840   */\n      tag_322\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":7766:7840   */\n      swap3\n      pop\n        /* \"#utility.yul\":7721:7850   */\n      pop\n        /* \"#utility.yul\":7889:7892   */\n      0x80\n        /* \"#utility.yul\":7916:7979   */\n      tag_426\n        /* \"#utility.yul\":7971:7978   */\n      dup9\n        /* \"#utility.yul\":7962:7968   */\n      dup3\n        /* \"#utility.yul\":7951:7960   */\n      dup10\n        /* \"#utility.yul\":7947:7969   */\n      add\n        /* \"#utility.yul\":7916:7979   */\n      tag_319\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":7906:7979   */\n      swap2\n      pop\n        /* \"#utility.yul\":7860:7989   */\n      pop\n        /* \"#utility.yul\":7025:7996   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8002:8182   */\n    tag_323:\n        /* \"#utility.yul\":8050:8127   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8047:8048   */\n      0x00\n        /* \"#utility.yul\":8040:8128   */\n      mstore\n        /* \"#utility.yul\":8147:8151   */\n      0x11\n        /* \"#utility.yul\":8144:8145   */\n      0x04\n        /* \"#utility.yul\":8137:8152   */\n      mstore\n        /* \"#utility.yul\":8171:8175   */\n      0x24\n        /* \"#utility.yul\":8168:8169   */\n      0x00\n        /* \"#utility.yul\":8161:8176   */\n      revert\n        /* \"#utility.yul\":8188:8744   */\n    tag_94:\n        /* \"#utility.yul\":8227:8234   */\n      0x00\n        /* \"#utility.yul\":8250:8269   */\n      tag_429\n        /* \"#utility.yul\":8267:8268   */\n      dup3\n        /* \"#utility.yul\":8250:8269   */\n      tag_305\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":8245:8269   */\n      swap2\n      pop\n        /* \"#utility.yul\":8283:8302   */\n      tag_430\n        /* \"#utility.yul\":8300:8301   */\n      dup4\n        /* \"#utility.yul\":8283:8302   */\n      tag_305\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":8278:8302   */\n      swap3\n      pop\n        /* \"#utility.yul\":8337:8338   */\n      dup3\n        /* \"#utility.yul\":8334:8335   */\n      dup3\n        /* \"#utility.yul\":8330:8339   */\n      mul\n        /* \"#utility.yul\":8359:8388   */\n      tag_431\n        /* \"#utility.yul\":8376:8387   */\n      dup2\n        /* \"#utility.yul\":8359:8388   */\n      tag_305\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":8348:8388   */\n      swap2\n      pop\n        /* \"#utility.yul\":8446:8512   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8443:8444   */\n      dup5\n        /* \"#utility.yul\":8440:8513   */\n      eq\n        /* \"#utility.yul\":8436:8437   */\n      0x00\n        /* \"#utility.yul\":8433:8434   */\n      dup5\n        /* \"#utility.yul\":8429:8438   */\n      slt\n        /* \"#utility.yul\":8425:8514   */\n      and\n        /* \"#utility.yul\":8422:8537   */\n      iszero\n      tag_432\n      jumpi\n        /* \"#utility.yul\":8517:8535   */\n      tag_433\n      tag_323\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":8422:8537   */\n    tag_432:\n        /* \"#utility.yul\":8687:8688   */\n      dup3\n        /* \"#utility.yul\":8678:8685   */\n      dup3\n        /* \"#utility.yul\":8673:8689   */\n      sdiv\n        /* \"#utility.yul\":8670:8671   */\n      dup5\n        /* \"#utility.yul\":8667:8690   */\n      eq\n        /* \"#utility.yul\":8647:8648   */\n      dup4\n        /* \"#utility.yul\":8640:8649   */\n      iszero\n        /* \"#utility.yul\":8620:8704   */\n      or\n        /* \"#utility.yul\":8597:8737   */\n      tag_434\n      jumpi\n        /* \"#utility.yul\":8717:8735   */\n      tag_435\n      tag_323\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":8597:8737   */\n    tag_434:\n        /* \"#utility.yul\":8235:8744   */\n      pop\n        /* \"#utility.yul\":8188:8744   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8750:9160   */\n    tag_99:\n        /* \"#utility.yul\":8790:8797   */\n      0x00\n        /* \"#utility.yul\":8813:8833   */\n      tag_437\n        /* \"#utility.yul\":8831:8832   */\n      dup3\n        /* \"#utility.yul\":8813:8833   */\n      tag_295\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":8808:8833   */\n      swap2\n      pop\n        /* \"#utility.yul\":8847:8867   */\n      tag_438\n        /* \"#utility.yul\":8865:8866   */\n      dup4\n        /* \"#utility.yul\":8847:8867   */\n      tag_295\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":8842:8867   */\n      swap3\n      pop\n        /* \"#utility.yul\":8902:8903   */\n      dup3\n        /* \"#utility.yul\":8899:8900   */\n      dup3\n        /* \"#utility.yul\":8895:8904   */\n      mul\n        /* \"#utility.yul\":8924:8954   */\n      tag_439\n        /* \"#utility.yul\":8942:8953   */\n      dup2\n        /* \"#utility.yul\":8924:8954   */\n      tag_295\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":8913:8954   */\n      swap2\n      pop\n        /* \"#utility.yul\":9103:9104   */\n      dup3\n        /* \"#utility.yul\":9094:9101   */\n      dup3\n        /* \"#utility.yul\":9090:9105   */\n      div\n        /* \"#utility.yul\":9087:9088   */\n      dup5\n        /* \"#utility.yul\":9084:9106   */\n      eq\n        /* \"#utility.yul\":9064:9065   */\n      dup4\n        /* \"#utility.yul\":9057:9066   */\n      iszero\n        /* \"#utility.yul\":9037:9120   */\n      or\n        /* \"#utility.yul\":9014:9153   */\n      tag_440\n      jumpi\n        /* \"#utility.yul\":9133:9151   */\n      tag_441\n      tag_323\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":9014:9153   */\n    tag_440:\n        /* \"#utility.yul\":8798:9160   */\n      pop\n        /* \"#utility.yul\":8750:9160   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9166:9346   */\n    tag_324:\n        /* \"#utility.yul\":9214:9291   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9211:9212   */\n      0x00\n        /* \"#utility.yul\":9204:9292   */\n      mstore\n        /* \"#utility.yul\":9311:9315   */\n      0x12\n        /* \"#utility.yul\":9308:9309   */\n      0x04\n        /* \"#utility.yul\":9301:9316   */\n      mstore\n        /* \"#utility.yul\":9335:9339   */\n      0x24\n        /* \"#utility.yul\":9332:9333   */\n      0x00\n        /* \"#utility.yul\":9325:9340   */\n      revert\n        /* \"#utility.yul\":9352:9537   */\n    tag_102:\n        /* \"#utility.yul\":9392:9393   */\n      0x00\n        /* \"#utility.yul\":9409:9429   */\n      tag_444\n        /* \"#utility.yul\":9427:9428   */\n      dup3\n        /* \"#utility.yul\":9409:9429   */\n      tag_295\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":9404:9429   */\n      swap2\n      pop\n        /* \"#utility.yul\":9443:9463   */\n      tag_445\n        /* \"#utility.yul\":9461:9462   */\n      dup4\n        /* \"#utility.yul\":9443:9463   */\n      tag_295\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":9438:9463   */\n      swap3\n      pop\n        /* \"#utility.yul\":9482:9483   */\n      dup3\n        /* \"#utility.yul\":9472:9507   */\n      tag_446\n      jumpi\n        /* \"#utility.yul\":9487:9505   */\n      tag_447\n      tag_324\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":9472:9507   */\n    tag_446:\n        /* \"#utility.yul\":9529:9530   */\n      dup3\n        /* \"#utility.yul\":9526:9527   */\n      dup3\n        /* \"#utility.yul\":9522:9531   */\n      div\n        /* \"#utility.yul\":9517:9531   */\n      swap1\n      pop\n        /* \"#utility.yul\":9352:9537   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9543:9894   */\n    tag_110:\n        /* \"#utility.yul\":9613:9619   */\n      0x00\n        /* \"#utility.yul\":9662:9664   */\n      0x20\n        /* \"#utility.yul\":9650:9659   */\n      dup3\n        /* \"#utility.yul\":9641:9648   */\n      dup5\n        /* \"#utility.yul\":9637:9660   */\n      sub\n        /* \"#utility.yul\":9633:9665   */\n      slt\n        /* \"#utility.yul\":9630:9749   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":9668:9747   */\n      tag_450\n      tag_301\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":9630:9749   */\n    tag_449:\n        /* \"#utility.yul\":9788:9789   */\n      0x00\n        /* \"#utility.yul\":9813:9877   */\n      tag_451\n        /* \"#utility.yul\":9869:9876   */\n      dup5\n        /* \"#utility.yul\":9860:9866   */\n      dup3\n        /* \"#utility.yul\":9849:9858   */\n      dup6\n        /* \"#utility.yul\":9845:9867   */\n      add\n        /* \"#utility.yul\":9813:9877   */\n      tag_322\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":9803:9877   */\n      swap2\n      pop\n        /* \"#utility.yul\":9759:9887   */\n      pop\n        /* \"#utility.yul\":9543:9894   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9900:10285   */\n    tag_132:\n        /* \"#utility.yul\":9939:9940   */\n      0x00\n        /* \"#utility.yul\":9956:9975   */\n      tag_453\n        /* \"#utility.yul\":9973:9974   */\n      dup3\n        /* \"#utility.yul\":9956:9975   */\n      tag_305\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":9951:9975   */\n      swap2\n      pop\n        /* \"#utility.yul\":9989:10008   */\n      tag_454\n        /* \"#utility.yul\":10006:10007   */\n      dup4\n        /* \"#utility.yul\":9989:10008   */\n      tag_305\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":9984:10008   */\n      swap3\n      pop\n        /* \"#utility.yul\":10027:10028   */\n      dup3\n        /* \"#utility.yul\":10017:10052   */\n      tag_455\n      jumpi\n        /* \"#utility.yul\":10032:10050   */\n      tag_456\n      tag_324\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":10017:10052   */\n    tag_455:\n        /* \"#utility.yul\":10218:10219   */\n      0x01\n        /* \"#utility.yul\":10215:10216   */\n      0x00\n        /* \"#utility.yul\":10211:10220   */\n      sub\n        /* \"#utility.yul\":10208:10209   */\n      dup4\n        /* \"#utility.yul\":10205:10221   */\n      eq\n        /* \"#utility.yul\":10124:10190   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10121:10122   */\n      dup4\n        /* \"#utility.yul\":10118:10191   */\n      eq\n        /* \"#utility.yul\":10101:10231   */\n      and\n        /* \"#utility.yul\":10098:10254   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":10234:10252   */\n      tag_458\n      tag_323\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":10098:10254   */\n    tag_457:\n        /* \"#utility.yul\":10277:10278   */\n      dup3\n        /* \"#utility.yul\":10274:10275   */\n      dup3\n        /* \"#utility.yul\":10269:10279   */\n      sdiv\n        /* \"#utility.yul\":10264:10279   */\n      swap1\n      pop\n        /* \"#utility.yul\":9900:10285   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10291:10461   */\n    tag_325:\n        /* \"#utility.yul\":10431:10453   */\n      0x526573657276657320617265206e6f7420736574000000000000000000000000\n        /* \"#utility.yul\":10427:10428   */\n      0x00\n        /* \"#utility.yul\":10419:10425   */\n      dup3\n        /* \"#utility.yul\":10415:10429   */\n      add\n        /* \"#utility.yul\":10408:10454   */\n      mstore\n        /* \"#utility.yul\":10291:10461   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10467:10833   */\n    tag_326:\n        /* \"#utility.yul\":10609:10612   */\n      0x00\n        /* \"#utility.yul\":10630:10697   */\n      tag_461\n        /* \"#utility.yul\":10694:10696   */\n      0x14\n        /* \"#utility.yul\":10689:10692   */\n      dup4\n        /* \"#utility.yul\":10630:10697   */\n      tag_314\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":10623:10697   */\n      swap2\n      pop\n        /* \"#utility.yul\":10706:10799   */\n      tag_462\n        /* \"#utility.yul\":10795:10798   */\n      dup3\n        /* \"#utility.yul\":10706:10799   */\n      tag_325\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":10824:10826   */\n      0x20\n        /* \"#utility.yul\":10819:10822   */\n      dup3\n        /* \"#utility.yul\":10815:10827   */\n      add\n        /* \"#utility.yul\":10808:10827   */\n      swap1\n      pop\n        /* \"#utility.yul\":10467:10833   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10839:11258   */\n    tag_148:\n        /* \"#utility.yul\":11005:11009   */\n      0x00\n        /* \"#utility.yul\":11043:11045   */\n      0x20\n        /* \"#utility.yul\":11032:11041   */\n      dup3\n        /* \"#utility.yul\":11028:11046   */\n      add\n        /* \"#utility.yul\":11020:11046   */\n      swap1\n      pop\n        /* \"#utility.yul\":11092:11101   */\n      dup2\n        /* \"#utility.yul\":11086:11090   */\n      dup2\n        /* \"#utility.yul\":11082:11102   */\n      sub\n        /* \"#utility.yul\":11078:11079   */\n      0x00\n        /* \"#utility.yul\":11067:11076   */\n      dup4\n        /* \"#utility.yul\":11063:11080   */\n      add\n        /* \"#utility.yul\":11056:11103   */\n      mstore\n        /* \"#utility.yul\":11120:11251   */\n      tag_464\n        /* \"#utility.yul\":11246:11250   */\n      dup2\n        /* \"#utility.yul\":11120:11251   */\n      tag_326\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":11112:11251   */\n      swap1\n      pop\n        /* \"#utility.yul\":10839:11258   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11264:11706   */\n    tag_179:\n        /* \"#utility.yul\":11413:11417   */\n      0x00\n        /* \"#utility.yul\":11451:11453   */\n      0x60\n        /* \"#utility.yul\":11440:11449   */\n      dup3\n        /* \"#utility.yul\":11436:11454   */\n      add\n        /* \"#utility.yul\":11428:11454   */\n      swap1\n      pop\n        /* \"#utility.yul\":11464:11535   */\n      tag_466\n        /* \"#utility.yul\":11532:11533   */\n      0x00\n        /* \"#utility.yul\":11521:11530   */\n      dup4\n        /* \"#utility.yul\":11517:11534   */\n      add\n        /* \"#utility.yul\":11508:11514   */\n      dup7\n        /* \"#utility.yul\":11464:11535   */\n      tag_299\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":11545:11617   */\n      tag_467\n        /* \"#utility.yul\":11613:11615   */\n      0x20\n        /* \"#utility.yul\":11602:11611   */\n      dup4\n        /* \"#utility.yul\":11598:11616   */\n      add\n        /* \"#utility.yul\":11589:11595   */\n      dup6\n        /* \"#utility.yul\":11545:11617   */\n      tag_299\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":11627:11699   */\n      tag_468\n        /* \"#utility.yul\":11695:11697   */\n      0x40\n        /* \"#utility.yul\":11684:11693   */\n      dup4\n        /* \"#utility.yul\":11680:11698   */\n      add\n        /* \"#utility.yul\":11671:11677   */\n      dup5\n        /* \"#utility.yul\":11627:11699   */\n      tag_296\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":11264:11706   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11712:11802   */\n    tag_327:\n        /* \"#utility.yul\":11746:11753   */\n      0x00\n        /* \"#utility.yul\":11789:11794   */\n      dup2\n        /* \"#utility.yul\":11782:11795   */\n      iszero\n        /* \"#utility.yul\":11775:11796   */\n      iszero\n        /* \"#utility.yul\":11764:11796   */\n      swap1\n      pop\n        /* \"#utility.yul\":11712:11802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11808:11924   */\n    tag_328:\n        /* \"#utility.yul\":11878:11899   */\n      tag_471\n        /* \"#utility.yul\":11893:11898   */\n      dup2\n        /* \"#utility.yul\":11878:11899   */\n      tag_327\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":11871:11876   */\n      dup2\n        /* \"#utility.yul\":11868:11900   */\n      eq\n        /* \"#utility.yul\":11858:11918   */\n      tag_472\n      jumpi\n        /* \"#utility.yul\":11914:11915   */\n      0x00\n        /* \"#utility.yul\":11911:11912   */\n      dup1\n        /* \"#utility.yul\":11904:11916   */\n      revert\n        /* \"#utility.yul\":11858:11918   */\n    tag_472:\n        /* \"#utility.yul\":11808:11924   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11930:12067   */\n    tag_329:\n        /* \"#utility.yul\":11984:11989   */\n      0x00\n        /* \"#utility.yul\":12015:12021   */\n      dup2\n        /* \"#utility.yul\":12009:12022   */\n      mload\n        /* \"#utility.yul\":12000:12022   */\n      swap1\n      pop\n        /* \"#utility.yul\":12031:12061   */\n      tag_474\n        /* \"#utility.yul\":12055:12060   */\n      dup2\n        /* \"#utility.yul\":12031:12061   */\n      tag_328\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":11930:12067   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12073:12418   */\n    tag_183:\n        /* \"#utility.yul\":12140:12146   */\n      0x00\n        /* \"#utility.yul\":12189:12191   */\n      0x20\n        /* \"#utility.yul\":12177:12186   */\n      dup3\n        /* \"#utility.yul\":12168:12175   */\n      dup5\n        /* \"#utility.yul\":12164:12187   */\n      sub\n        /* \"#utility.yul\":12160:12192   */\n      slt\n        /* \"#utility.yul\":12157:12276   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":12195:12274   */\n      tag_477\n      tag_301\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":12157:12276   */\n    tag_476:\n        /* \"#utility.yul\":12315:12316   */\n      0x00\n        /* \"#utility.yul\":12340:12401   */\n      tag_478\n        /* \"#utility.yul\":12393:12400   */\n      dup5\n        /* \"#utility.yul\":12384:12390   */\n      dup3\n        /* \"#utility.yul\":12373:12382   */\n      dup6\n        /* \"#utility.yul\":12369:12391   */\n      add\n        /* \"#utility.yul\":12340:12401   */\n      tag_329\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":12330:12401   */\n      swap2\n      pop\n        /* \"#utility.yul\":12286:12411   */\n      pop\n        /* \"#utility.yul\":12073:12418   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12424:12615   */\n    tag_190:\n        /* \"#utility.yul\":12464:12467   */\n      0x00\n        /* \"#utility.yul\":12483:12503   */\n      tag_480\n        /* \"#utility.yul\":12501:12502   */\n      dup3\n        /* \"#utility.yul\":12483:12503   */\n      tag_295\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":12478:12503   */\n      swap2\n      pop\n        /* \"#utility.yul\":12517:12537   */\n      tag_481\n        /* \"#utility.yul\":12535:12536   */\n      dup4\n        /* \"#utility.yul\":12517:12537   */\n      tag_295\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":12512:12537   */\n      swap3\n      pop\n        /* \"#utility.yul\":12560:12561   */\n      dup3\n        /* \"#utility.yul\":12557:12558   */\n      dup3\n        /* \"#utility.yul\":12553:12562   */\n      add\n        /* \"#utility.yul\":12546:12562   */\n      swap1\n      pop\n        /* \"#utility.yul\":12581:12584   */\n      dup1\n        /* \"#utility.yul\":12578:12579   */\n      dup3\n        /* \"#utility.yul\":12575:12585   */\n      gt\n        /* \"#utility.yul\":12572:12608   */\n      iszero\n      tag_482\n      jumpi\n        /* \"#utility.yul\":12588:12606   */\n      tag_483\n      tag_323\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":12572:12608   */\n    tag_482:\n        /* \"#utility.yul\":12424:12615   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12621:12815   */\n    tag_192:\n        /* \"#utility.yul\":12661:12665   */\n      0x00\n        /* \"#utility.yul\":12681:12701   */\n      tag_485\n        /* \"#utility.yul\":12699:12700   */\n      dup3\n        /* \"#utility.yul\":12681:12701   */\n      tag_295\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":12676:12701   */\n      swap2\n      pop\n        /* \"#utility.yul\":12715:12735   */\n      tag_486\n        /* \"#utility.yul\":12733:12734   */\n      dup4\n        /* \"#utility.yul\":12715:12735   */\n      tag_295\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":12710:12735   */\n      swap3\n      pop\n        /* \"#utility.yul\":12759:12760   */\n      dup3\n        /* \"#utility.yul\":12756:12757   */\n      dup3\n        /* \"#utility.yul\":12752:12761   */\n      sub\n        /* \"#utility.yul\":12744:12761   */\n      swap1\n      pop\n        /* \"#utility.yul\":12783:12784   */\n      dup2\n        /* \"#utility.yul\":12777:12781   */\n      dup2\n        /* \"#utility.yul\":12774:12785   */\n      gt\n        /* \"#utility.yul\":12771:12808   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":12788:12806   */\n      tag_488\n      tag_323\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":12771:12808   */\n    tag_487:\n        /* \"#utility.yul\":12621:12815   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12821:12993   */\n    tag_330:\n        /* \"#utility.yul\":12961:12985   */\n      0x496e73756666696369656e74206c697175696469747900000000000000000000\n        /* \"#utility.yul\":12957:12958   */\n      0x00\n        /* \"#utility.yul\":12949:12955   */\n      dup3\n        /* \"#utility.yul\":12945:12959   */\n      add\n        /* \"#utility.yul\":12938:12986   */\n      mstore\n        /* \"#utility.yul\":12821:12993   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12999:13365   */\n    tag_331:\n        /* \"#utility.yul\":13141:13144   */\n      0x00\n        /* \"#utility.yul\":13162:13229   */\n      tag_491\n        /* \"#utility.yul\":13226:13228   */\n      0x16\n        /* \"#utility.yul\":13221:13224   */\n      dup4\n        /* \"#utility.yul\":13162:13229   */\n      tag_314\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":13155:13229   */\n      swap2\n      pop\n        /* \"#utility.yul\":13238:13331   */\n      tag_492\n        /* \"#utility.yul\":13327:13330   */\n      dup3\n        /* \"#utility.yul\":13238:13331   */\n      tag_330\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":13356:13358   */\n      0x20\n        /* \"#utility.yul\":13351:13354   */\n      dup3\n        /* \"#utility.yul\":13347:13359   */\n      add\n        /* \"#utility.yul\":13340:13359   */\n      swap1\n      pop\n        /* \"#utility.yul\":12999:13365   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13371:13790   */\n    tag_215:\n        /* \"#utility.yul\":13537:13541   */\n      0x00\n        /* \"#utility.yul\":13575:13577   */\n      0x20\n        /* \"#utility.yul\":13564:13573   */\n      dup3\n        /* \"#utility.yul\":13560:13578   */\n      add\n        /* \"#utility.yul\":13552:13578   */\n      swap1\n      pop\n        /* \"#utility.yul\":13624:13633   */\n      dup2\n        /* \"#utility.yul\":13618:13622   */\n      dup2\n        /* \"#utility.yul\":13614:13634   */\n      sub\n        /* \"#utility.yul\":13610:13611   */\n      0x00\n        /* \"#utility.yul\":13599:13608   */\n      dup4\n        /* \"#utility.yul\":13595:13612   */\n      add\n        /* \"#utility.yul\":13588:13635   */\n      mstore\n        /* \"#utility.yul\":13652:13783   */\n      tag_494\n        /* \"#utility.yul\":13778:13782   */\n      dup2\n        /* \"#utility.yul\":13652:13783   */\n      tag_331\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":13644:13783   */\n      swap1\n      pop\n        /* \"#utility.yul\":13371:13790   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13796:13976   */\n    tag_332:\n        /* \"#utility.yul\":13936:13968   */\n      0x496e73756666696369656e74206c69717569646974792072656d6f7665640000\n        /* \"#utility.yul\":13932:13933   */\n      0x00\n        /* \"#utility.yul\":13924:13930   */\n      dup3\n        /* \"#utility.yul\":13920:13934   */\n      add\n        /* \"#utility.yul\":13913:13969   */\n      mstore\n        /* \"#utility.yul\":13796:13976   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13982:14348   */\n    tag_333:\n        /* \"#utility.yul\":14124:14127   */\n      0x00\n        /* \"#utility.yul\":14145:14212   */\n      tag_497\n        /* \"#utility.yul\":14209:14211   */\n      0x1e\n        /* \"#utility.yul\":14204:14207   */\n      dup4\n        /* \"#utility.yul\":14145:14212   */\n      tag_314\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":14138:14212   */\n      swap2\n      pop\n        /* \"#utility.yul\":14221:14314   */\n      tag_498\n        /* \"#utility.yul\":14310:14313   */\n      dup3\n        /* \"#utility.yul\":14221:14314   */\n      tag_332\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":14339:14341   */\n      0x20\n        /* \"#utility.yul\":14334:14337   */\n      dup3\n        /* \"#utility.yul\":14330:14342   */\n      add\n        /* \"#utility.yul\":14323:14342   */\n      swap1\n      pop\n        /* \"#utility.yul\":13982:14348   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14354:14773   */\n    tag_229:\n        /* \"#utility.yul\":14520:14524   */\n      0x00\n        /* \"#utility.yul\":14558:14560   */\n      0x20\n        /* \"#utility.yul\":14547:14556   */\n      dup3\n        /* \"#utility.yul\":14543:14561   */\n      add\n        /* \"#utility.yul\":14535:14561   */\n      swap1\n      pop\n        /* \"#utility.yul\":14607:14616   */\n      dup2\n        /* \"#utility.yul\":14601:14605   */\n      dup2\n        /* \"#utility.yul\":14597:14617   */\n      sub\n        /* \"#utility.yul\":14593:14594   */\n      0x00\n        /* \"#utility.yul\":14582:14591   */\n      dup4\n        /* \"#utility.yul\":14578:14595   */\n      add\n        /* \"#utility.yul\":14571:14618   */\n      mstore\n        /* \"#utility.yul\":14635:14766   */\n      tag_500\n        /* \"#utility.yul\":14761:14765   */\n      dup2\n        /* \"#utility.yul\":14635:14766   */\n      tag_333\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":14627:14766   */\n      swap1\n      pop\n        /* \"#utility.yul\":14354:14773   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14779:15443   */\n    tag_245:\n        /* \"#utility.yul\":14984:14988   */\n      0x00\n        /* \"#utility.yul\":15022:15025   */\n      0xa0\n        /* \"#utility.yul\":15011:15020   */\n      dup3\n        /* \"#utility.yul\":15007:15026   */\n      add\n        /* \"#utility.yul\":14999:15026   */\n      swap1\n      pop\n        /* \"#utility.yul\":15036:15107   */\n      tag_502\n        /* \"#utility.yul\":15104:15105   */\n      0x00\n        /* \"#utility.yul\":15093:15102   */\n      dup4\n        /* \"#utility.yul\":15089:15106   */\n      add\n        /* \"#utility.yul\":15080:15086   */\n      dup9\n        /* \"#utility.yul\":15036:15107   */\n      tag_296\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":15117:15189   */\n      tag_503\n        /* \"#utility.yul\":15185:15187   */\n      0x20\n        /* \"#utility.yul\":15174:15183   */\n      dup4\n        /* \"#utility.yul\":15170:15188   */\n      add\n        /* \"#utility.yul\":15161:15167   */\n      dup8\n        /* \"#utility.yul\":15117:15189   */\n      tag_296\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":15199:15271   */\n      tag_504\n        /* \"#utility.yul\":15267:15269   */\n      0x40\n        /* \"#utility.yul\":15256:15265   */\n      dup4\n        /* \"#utility.yul\":15252:15270   */\n      add\n        /* \"#utility.yul\":15243:15249   */\n      dup7\n        /* \"#utility.yul\":15199:15271   */\n      tag_296\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":15281:15353   */\n      tag_505\n        /* \"#utility.yul\":15349:15351   */\n      0x60\n        /* \"#utility.yul\":15338:15347   */\n      dup4\n        /* \"#utility.yul\":15334:15352   */\n      add\n        /* \"#utility.yul\":15325:15331   */\n      dup6\n        /* \"#utility.yul\":15281:15353   */\n      tag_296\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":15363:15436   */\n      tag_506\n        /* \"#utility.yul\":15431:15434   */\n      0x80\n        /* \"#utility.yul\":15420:15429   */\n      dup4\n        /* \"#utility.yul\":15416:15435   */\n      add\n        /* \"#utility.yul\":15407:15413   */\n      dup5\n        /* \"#utility.yul\":15363:15436   */\n      tag_296\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":14779:15443   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15449:15630   */\n    tag_334:\n        /* \"#utility.yul\":15589:15622   */\n      0x496e73756666696369656e74206c69717569646974792070726f766964656400\n        /* \"#utility.yul\":15585:15586   */\n      0x00\n        /* \"#utility.yul\":15577:15583   */\n      dup3\n        /* \"#utility.yul\":15573:15587   */\n      add\n        /* \"#utility.yul\":15566:15623   */\n      mstore\n        /* \"#utility.yul\":15449:15630   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15636:16002   */\n    tag_335:\n        /* \"#utility.yul\":15778:15781   */\n      0x00\n        /* \"#utility.yul\":15799:15866   */\n      tag_509\n        /* \"#utility.yul\":15863:15865   */\n      0x1f\n        /* \"#utility.yul\":15858:15861   */\n      dup4\n        /* \"#utility.yul\":15799:15866   */\n      tag_314\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":15792:15866   */\n      swap2\n      pop\n        /* \"#utility.yul\":15875:15968   */\n      tag_510\n        /* \"#utility.yul\":15964:15967   */\n      dup3\n        /* \"#utility.yul\":15875:15968   */\n      tag_334\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":15993:15995   */\n      0x20\n        /* \"#utility.yul\":15988:15991   */\n      dup3\n        /* \"#utility.yul\":15984:15996   */\n      add\n        /* \"#utility.yul\":15977:15996   */\n      swap1\n      pop\n        /* \"#utility.yul\":15636:16002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16008:16427   */\n    tag_276:\n        /* \"#utility.yul\":16174:16178   */\n      0x00\n        /* \"#utility.yul\":16212:16214   */\n      0x20\n        /* \"#utility.yul\":16201:16210   */\n      dup3\n        /* \"#utility.yul\":16197:16215   */\n      add\n        /* \"#utility.yul\":16189:16215   */\n      swap1\n      pop\n        /* \"#utility.yul\":16261:16270   */\n      dup2\n        /* \"#utility.yul\":16255:16259   */\n      dup2\n        /* \"#utility.yul\":16251:16271   */\n      sub\n        /* \"#utility.yul\":16247:16248   */\n      0x00\n        /* \"#utility.yul\":16236:16245   */\n      dup4\n        /* \"#utility.yul\":16232:16249   */\n      add\n        /* \"#utility.yul\":16225:16272   */\n      mstore\n        /* \"#utility.yul\":16289:16420   */\n      tag_512\n        /* \"#utility.yul\":16415:16419   */\n      dup2\n        /* \"#utility.yul\":16289:16420   */\n      tag_335\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":16281:16420   */\n      swap1\n      pop\n        /* \"#utility.yul\":16008:16427   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122037286150b3f20ff346ca5f29aefc1ebd02c24bc8a77673463ed48ad45eddef4b64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_966": {
									"entryPoint": null,
									"id": 966,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_addresst_address_fromMemory": {
									"entryPoint": 485,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 388,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 384,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 438,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1825:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:8",
														"type": ""
													}
												],
												"src": "466:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:8"
															},
															"nodeType": "YulIf",
															"src": "621:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:8",
														"type": ""
													}
												],
												"src": "568:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:8",
														"type": ""
													}
												],
												"src": "696:143:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "990:832:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1037:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1039:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1039:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1039:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1011:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1020:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1007:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1007:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1032:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1003:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1003:33:8"
															},
															"nodeType": "YulIf",
															"src": "1000:120:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1130:128:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1145:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1159:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1149:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1174:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1220:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1231:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1216:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1216:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1240:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1184:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1184:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1174:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1268:129:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1283:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1297:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1287:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1313:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1359:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1370:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1355:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1355:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1379:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1323:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1323:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1313:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1407:129:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1422:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1436:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1426:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1452:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1462:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1462:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1452:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1546:129:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:8",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1591:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1637:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1648:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1633:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1633:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1657:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1601:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1601:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1685:130:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1700:17:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1714:3:8",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1704:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1731:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1777:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1788:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1773:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1773:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1797:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1741:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1741:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "1731:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "928:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "939:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "951:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "959:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "967:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "975:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "983:6:8",
														"type": ""
													}
												],
												"src": "845:977:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b50604051620026c3380380620026c38339818101604052810190620000369190620001e5565b845f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050505062000269565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620001af8262000184565b9050919050565b620001c181620001a3565b8114620001cc575f80fd5b50565b5f81519050620001df81620001b6565b92915050565b5f805f805f60a0868803121562000201576200020062000180565b5b5f6200021088828901620001cf565b95505060206200022388828901620001cf565b94505060406200023688828901620001cf565b93505060606200024988828901620001cf565b92505060806200025c88828901620001cf565b9150509295509295909350565b61244c80620002775f395ff3fe608060405234801561000f575f80fd5b50600436106100f3575f3560e01c80635fcbd28511610095578063bff46a4c11610064578063bff46a4c14610250578063d0e7e07e14610281578063d21220a71461029d578063f140a35a146102bb576100f3565b80635fcbd285146101da57806364e7b85a146101f8578063729132f914610214578063a996944c14610232576100f3565b8063443cb4bc116100d1578063443cb4bc146101645780635444a39d1461018257806354b2a7691461019e5780635a76f25e146101bc576100f3565b80630902f1ac146100f75780630dfe16811461011657806341976e0914610134575b5f80fd5b6100ff6102eb565b60405161010d929190611b9a565b60405180910390f35b61011e6102fb565b60405161012b9190611c00565b60405180910390f35b61014e60048036038101906101499190611c47565b61031e565b60405161015b9190611c8a565b60405180910390f35b61016c6105b1565b6040516101799190611ca3565b60405180910390f35b61019c60048036038101906101979190611ce6565b6105b7565b005b6101a66107d3565b6040516101b39190611c8a565b60405180910390f35b6101c4610940565b6040516101d19190611ca3565b60405180910390f35b6101e2610946565b6040516101ef9190611d6c565b60405180910390f35b610212600480360381019061020d9190611ce6565b61096b565b005b61021c610a30565b6040516102299190611ca3565b60405180910390f35b61023a610aaa565b6040516102479190611ca3565b60405180910390f35b61026a60048036038101906102659190611c47565b610bfb565b604051610278929190611d85565b60405180910390f35b61029b60048036038101906102969190611dac565b610cc6565b005b6102a5611054565b6040516102b29190611c00565b60405180910390f35b6102d560048036038101906102d09190611dac565b611079565b6040516102e29190611ca3565b60405180910390f35b5f80600354600454915091509091565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614806103c5575060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b610404576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103fb90611e44565b60405180910390fd5b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036104fa5760055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156104c2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104e69190611edf565b909192935090915090505080915050610598565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610564573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105889190611edf565b9091929350909150905050809150505b6402540be400816105a99190611f83565b915050919050565b60035481565b5f6105e05f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661031e565b90505f61060d60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661031e565b90505f82600261061d9190611ff9565b670de0b6b3a7640000856106319190611ff9565b61063b9190612067565b90505f82600261064b9190611ff9565b670de0b6b3a76400008661065f9190611ff9565b6106699190612067565b90505f6107c060035460025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106dc573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107009190612097565b8561070b9190611ff9565b6107159190612067565b60045460025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610782573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107a69190612097565b856107b19190611ff9565b6107bb9190612067565b611225565b90506107cb8161123d565b505050505050565b5f8060055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561083f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108639190611edf565b5050509150505f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156108d4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108f89190611edf565b5050509150506402540be4008161090f9190611f83565b6305f5e1006402540be400846109259190611f83565b61092f9190611f83565b61093991906120c2565b9250505090565b60045481565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f6109945f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661031e565b90505f6109c160015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661031e565b90505f8260026109d19190611ff9565b670de0b6b3a7640000856109e59190611ff9565b6109ef9190612067565b90505f8260026109ff9190611ff9565b670de0b6b3a764000086610a139190611ff9565b610a1d9190612067565b9050610a29828261166e565b5050505050565b5f80600354118015610a4357505f600454115b610a82576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7990612174565b60405180910390fd5b600354670de0b6b3a7640000600454610a9b9190611ff9565b610aa59190612067565b905090565b5f8060055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610b16573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b3a9190611edf565b5050509150505f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610bab573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bcf9190611edf565b50505091505080670de0b6b3a764000083610bea9190611ff9565b610bf49190612067565b9250505090565b5f805f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b8152600401610c589190611c00565b602060405180830381865afa158015610c73573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c979190612097565b905060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16819250925050915091565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480610d6b575060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610daa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da190611e44565b60405180910390fd5b5f610dd35f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661031e565b90505f610e0060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661031e565b90505f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161490505f81610e7f575f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610ea2565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165b90505f82610eb05783610eb2565b845b90505f81670de0b6b3a764000089610eca9190611ff9565b610ed49190612067565b90505f610ee18289611079565b90508773ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610f2093929190612192565b6020604051808303815f875af1158015610f3c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f6091906121fc565b508373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610f9c929190611d85565b6020604051808303815f875af1158015610fb8573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610fdc91906121fc565b508415611018578160035f828254610ff49190612227565b925050819055508060045f82825461100c919061225a565b92505081905550611049565b8160045f8282546110299190612227565b925050819055508060035f828254611041919061225a565b925050819055505b505050505050505050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161480611120575060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b61115f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115690611e44565b60405180910390fd5b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161490505f816111bf576004546111c3565b6003545b90505f826111d3576003546111d7565b6004545b90505f6103e86103e5886111eb9190611ff9565b6111f59190612067565b905080836112039190612227565b828261120f9190611ff9565b6112199190612067565b94505050505092915050565b5f8183106112335781611235565b825b905092915050565b5f811161127f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611276906122d7565b60405180910390fd5b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112ea573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061130e9190612097565b6003548361131c9190611ff9565b6113269190612067565b90505f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611393573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113b79190612097565b600454846113c59190611ff9565b6113cf9190612067565b90505f821180156113df57505f81115b61141e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114159061233f565b60405180910390fd5b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639dc29fac33856040518363ffffffff1660e01b815260040161147a929190611d85565b5f604051808303815f87803b158015611491575f80fd5b505af11580156114a3573d5f803e3d5ffd5b505050505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401611501929190611d85565b6020604051808303815f875af115801561151d573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061154191906121fc565b5060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161159e929190611d85565b6020604051808303815f875af11580156115ba573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115de91906121fc565b508160035f8282546115f0919061225a565b925050819055508060045f828254611608919061225a565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f04f7e4f53152cb2cd0e424b2fc990199f0ed4255c7a97a848131f1eeff165f7b83838660035460045460405161166195949392919061235d565b60405180910390a2505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016116ca93929190612192565b6020604051808303815f875af11580156116e6573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061170a91906121fc565b5060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161176993929190612192565b6020604051808303815f875af1158015611785573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906117a991906121fc565b505f8060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611816573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061183a9190612097565b0361185a57611853828461184e9190611ff9565b611b0b565b90506119b1565b6119ae60035460025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156118ca573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118ee9190612097565b856118f99190611ff9565b6119039190612067565b60045460025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611970573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119949190612097565b8561199f9190611ff9565b6119a99190612067565b611225565b90505b5f81116119f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119ea906123f8565b60405180910390fd5b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b8152600401611a4f929190611d85565b5f604051808303815f87803b158015611a66575f80fd5b505af1158015611a78573d5f803e3d5ffd5b505050508260035f828254611a8d9190612227565b925050819055508160045f828254611aa59190612227565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f0103e5727ee41ce8741fbdf27e5e596deb21dbe5ae93901499306d10f28d1ef7848484600354600454604051611afe95949392919061235d565b60405180910390a2505050565b5f6003821115611b70578190505f6001600284611b289190612067565b611b329190612227565b90505b81811015611b6a578091506002818285611b4f9190612067565b611b599190612227565b611b639190612067565b9050611b35565b50611b7d565b5f8214611b7c57600190505b5b919050565b5f819050919050565b611b9481611b82565b82525050565b5f604082019050611bad5f830185611b8b565b611bba6020830184611b8b565b9392505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611bea82611bc1565b9050919050565b611bfa81611be0565b82525050565b5f602082019050611c135f830184611bf1565b92915050565b5f80fd5b611c2681611be0565b8114611c30575f80fd5b50565b5f81359050611c4181611c1d565b92915050565b5f60208284031215611c5c57611c5b611c19565b5b5f611c6984828501611c33565b91505092915050565b5f819050919050565b611c8481611c72565b82525050565b5f602082019050611c9d5f830184611c7b565b92915050565b5f602082019050611cb65f830184611b8b565b92915050565b611cc581611b82565b8114611ccf575f80fd5b50565b5f81359050611ce081611cbc565b92915050565b5f60208284031215611cfb57611cfa611c19565b5b5f611d0884828501611cd2565b91505092915050565b5f819050919050565b5f611d34611d2f611d2a84611bc1565b611d11565b611bc1565b9050919050565b5f611d4582611d1a565b9050919050565b5f611d5682611d3b565b9050919050565b611d6681611d4c565b82525050565b5f602082019050611d7f5f830184611d5d565b92915050565b5f604082019050611d985f830185611bf1565b611da56020830184611b8b565b9392505050565b5f8060408385031215611dc257611dc1611c19565b5b5f611dcf85828601611cd2565b9250506020611de085828601611c33565b9150509250929050565b5f82825260208201905092915050565b7f496e76616c696420696e70757420746f6b656e000000000000000000000000005f82015250565b5f611e2e601383611dea565b9150611e3982611dfa565b602082019050919050565b5f6020820190508181035f830152611e5b81611e22565b9050919050565b5f69ffffffffffffffffffff82169050919050565b611e8081611e62565b8114611e8a575f80fd5b50565b5f81519050611e9b81611e77565b92915050565b611eaa81611c72565b8114611eb4575f80fd5b50565b5f81519050611ec581611ea1565b92915050565b5f81519050611ed981611cbc565b92915050565b5f805f805f60a08688031215611ef857611ef7611c19565b5b5f611f0588828901611e8d565b9550506020611f1688828901611eb7565b9450506040611f2788828901611ecb565b9350506060611f3888828901611ecb565b9250506080611f4988828901611e8d565b9150509295509295909350565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611f8d82611c72565b9150611f9883611c72565b9250828202611fa681611c72565b91507f800000000000000000000000000000000000000000000000000000000000000084145f84121615611fdd57611fdc611f56565b5b8282058414831517611ff257611ff1611f56565b5b5092915050565b5f61200382611b82565b915061200e83611b82565b925082820261201c81611b82565b9150828204841483151761203357612032611f56565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61207182611b82565b915061207c83611b82565b92508261208c5761208b61203a565b5b828204905092915050565b5f602082840312156120ac576120ab611c19565b5b5f6120b984828501611ecb565b91505092915050565b5f6120cc82611c72565b91506120d783611c72565b9250826120e7576120e661203a565b5b60015f0383147f80000000000000000000000000000000000000000000000000000000000000008314161561211f5761211e611f56565b5b828205905092915050565b7f526573657276657320617265206e6f74207365740000000000000000000000005f82015250565b5f61215e601483611dea565b91506121698261212a565b602082019050919050565b5f6020820190508181035f83015261218b81612152565b9050919050565b5f6060820190506121a55f830186611bf1565b6121b26020830185611bf1565b6121bf6040830184611b8b565b949350505050565b5f8115159050919050565b6121db816121c7565b81146121e5575f80fd5b50565b5f815190506121f6816121d2565b92915050565b5f6020828403121561221157612210611c19565b5b5f61221e848285016121e8565b91505092915050565b5f61223182611b82565b915061223c83611b82565b925082820190508082111561225457612253611f56565b5b92915050565b5f61226482611b82565b915061226f83611b82565b925082820390508181111561228757612286611f56565b5b92915050565b7f496e73756666696369656e74206c6971756964697479000000000000000000005f82015250565b5f6122c1601683611dea565b91506122cc8261228d565b602082019050919050565b5f6020820190508181035f8301526122ee816122b5565b9050919050565b7f496e73756666696369656e74206c69717569646974792072656d6f76656400005f82015250565b5f612329601e83611dea565b9150612334826122f5565b602082019050919050565b5f6020820190508181035f8301526123568161231d565b9050919050565b5f60a0820190506123705f830188611b8b565b61237d6020830187611b8b565b61238a6040830186611b8b565b6123976060830185611b8b565b6123a46080830184611b8b565b9695505050505050565b7f496e73756666696369656e74206c69717569646974792070726f7669646564005f82015250565b5f6123e2601f83611dea565b91506123ed826123ae565b602082019050919050565b5f6020820190508181035f83015261240f816123d6565b905091905056fea264697066735822122037286150b3f20ff346ca5f29aefc1ebd02c24bc8a77673463ed48ad45eddef4b64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x26C3 CODESIZE SUB DUP1 PUSH3 0x26C3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x1E5 JUMP JUMPDEST DUP5 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP PUSH3 0x269 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x1AF DUP3 PUSH3 0x184 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1C1 DUP2 PUSH3 0x1A3 JUMP JUMPDEST DUP2 EQ PUSH3 0x1CC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x1DF DUP2 PUSH3 0x1B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x201 JUMPI PUSH3 0x200 PUSH3 0x180 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x210 DUP9 DUP3 DUP10 ADD PUSH3 0x1CF JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH3 0x223 DUP9 DUP3 DUP10 ADD PUSH3 0x1CF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH3 0x236 DUP9 DUP3 DUP10 ADD PUSH3 0x1CF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH3 0x249 DUP9 DUP3 DUP10 ADD PUSH3 0x1CF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH3 0x25C DUP9 DUP3 DUP10 ADD PUSH3 0x1CF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x244C DUP1 PUSH3 0x277 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5FCBD285 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xBFF46A4C GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xBFF46A4C EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xD0E7E07E EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0xF140A35A EQ PUSH2 0x2BB JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x5FCBD285 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x64E7B85A EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x729132F9 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0xA996944C EQ PUSH2 0x232 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x443CB4BC GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x443CB4BC EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x5444A39D EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x54B2A769 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x5A76F25E EQ PUSH2 0x1BC JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x902F1AC EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x41976E09 EQ PUSH2 0x134 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFF PUSH2 0x2EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10D SWAP3 SWAP2 SWAP1 PUSH2 0x1B9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11E PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x1C00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x1C47 JUMP JUMPDEST PUSH2 0x31E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15B SWAP2 SWAP1 PUSH2 0x1C8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH2 0x5B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x1CE6 JUMP JUMPDEST PUSH2 0x5B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A6 PUSH2 0x7D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x1C8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH2 0x940 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E2 PUSH2 0x946 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0x1D6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x212 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x1CE6 JUMP JUMPDEST PUSH2 0x96B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21C PUSH2 0xA30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23A PUSH2 0xAAA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x1C47 JUMP JUMPDEST PUSH2 0xBFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP3 SWAP2 SWAP1 PUSH2 0x1D85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x1DAC JUMP JUMPDEST PUSH2 0xCC6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A5 PUSH2 0x1054 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x1C00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x1DAC JUMP JUMPDEST PUSH2 0x1079 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x3C5 JUMPI POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x404 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FB SWAP1 PUSH2 0x1E44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4FA JUMPI PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4C2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4E6 SWAP2 SWAP1 PUSH2 0x1EDF JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP SWAP1 SWAP2 POP SWAP1 POP POP DUP1 SWAP2 POP POP PUSH2 0x598 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x564 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x588 SWAP2 SWAP1 PUSH2 0x1EDF JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP SWAP1 SWAP2 POP SWAP1 POP POP DUP1 SWAP2 POP POP JUMPDEST PUSH5 0x2540BE400 DUP2 PUSH2 0x5A9 SWAP2 SWAP1 PUSH2 0x1F83 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x5E0 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x31E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x60D PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x31E JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0x2 PUSH2 0x61D SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x631 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x63B SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0x2 PUSH2 0x64B SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x65F SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x669 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x7C0 PUSH1 0x3 SLOAD PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6DC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x700 SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST DUP6 PUSH2 0x70B SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x715 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x782 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7A6 SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST DUP6 PUSH2 0x7B1 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x7BB SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST PUSH2 0x1225 JUMP JUMPDEST SWAP1 POP PUSH2 0x7CB DUP2 PUSH2 0x123D JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x83F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x863 SWAP2 SWAP1 PUSH2 0x1EDF JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8D4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8F8 SWAP2 SWAP1 PUSH2 0x1EDF JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH5 0x2540BE400 DUP2 PUSH2 0x90F SWAP2 SWAP1 PUSH2 0x1F83 JUMP JUMPDEST PUSH4 0x5F5E100 PUSH5 0x2540BE400 DUP5 PUSH2 0x925 SWAP2 SWAP1 PUSH2 0x1F83 JUMP JUMPDEST PUSH2 0x92F SWAP2 SWAP1 PUSH2 0x1F83 JUMP JUMPDEST PUSH2 0x939 SWAP2 SWAP1 PUSH2 0x20C2 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x994 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x31E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x9C1 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x31E JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0x2 PUSH2 0x9D1 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x9E5 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x9EF SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0x2 PUSH2 0x9FF SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0xA13 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0xA1D SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP PUSH2 0xA29 DUP3 DUP3 PUSH2 0x166E JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x3 SLOAD GT DUP1 ISZERO PUSH2 0xA43 JUMPI POP PUSH0 PUSH1 0x4 SLOAD GT JUMPDEST PUSH2 0xA82 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA79 SWAP1 PUSH2 0x2174 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0x4 SLOAD PUSH2 0xA9B SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0xAA5 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB16 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB3A SWAP2 SWAP1 PUSH2 0x1EDF JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBAB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBCF SWAP2 SWAP1 PUSH2 0x1EDF JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0xBEA SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0xBF4 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC58 SWAP2 SWAP1 PUSH2 0x1C00 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC73 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC97 SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xD6B JUMPI POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xDAA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDA1 SWAP1 PUSH2 0x1E44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xDD3 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x31E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xE00 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x31E JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP PUSH0 DUP2 PUSH2 0xE7F JUMPI PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH2 0xEB0 JUMPI DUP4 PUSH2 0xEB2 JUMP JUMPDEST DUP5 JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH8 0xDE0B6B3A7640000 DUP10 PUSH2 0xECA SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0xED4 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xEE1 DUP3 DUP10 PUSH2 0x1079 JUMP JUMPDEST SWAP1 POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF20 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2192 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF3C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF60 SWAP2 SWAP1 PUSH2 0x21FC JUMP JUMPDEST POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9C SWAP3 SWAP2 SWAP1 PUSH2 0x1D85 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFB8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFDC SWAP2 SWAP1 PUSH2 0x21FC JUMP JUMPDEST POP DUP5 ISZERO PUSH2 0x1018 JUMPI DUP2 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xFF4 SWAP2 SWAP1 PUSH2 0x2227 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x100C SWAP2 SWAP1 PUSH2 0x225A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1049 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1029 SWAP2 SWAP1 PUSH2 0x2227 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1041 SWAP2 SWAP1 PUSH2 0x225A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1120 JUMPI POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x115F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1156 SWAP1 PUSH2 0x1E44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP PUSH0 DUP2 PUSH2 0x11BF JUMPI PUSH1 0x4 SLOAD PUSH2 0x11C3 JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH2 0x11D3 JUMPI PUSH1 0x3 SLOAD PUSH2 0x11D7 JUMP JUMPDEST PUSH1 0x4 SLOAD JUMPDEST SWAP1 POP PUSH0 PUSH2 0x3E8 PUSH2 0x3E5 DUP9 PUSH2 0x11EB SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x11F5 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH2 0x1203 SWAP2 SWAP1 PUSH2 0x2227 JUMP JUMPDEST DUP3 DUP3 PUSH2 0x120F SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x1219 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 LT PUSH2 0x1233 JUMPI DUP2 PUSH2 0x1235 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x127F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1276 SWAP1 PUSH2 0x22D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12EA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x130E SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP4 PUSH2 0x131C SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x1326 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1393 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13B7 SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP5 PUSH2 0x13C5 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x13CF SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0x13DF JUMPI POP PUSH0 DUP2 GT JUMPDEST PUSH2 0x141E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1415 SWAP1 PUSH2 0x233F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9DC29FAC CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x147A SWAP3 SWAP2 SWAP1 PUSH2 0x1D85 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1491 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14A3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1501 SWAP3 SWAP2 SWAP1 PUSH2 0x1D85 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x151D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1541 SWAP2 SWAP1 PUSH2 0x21FC JUMP JUMPDEST POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x159E SWAP3 SWAP2 SWAP1 PUSH2 0x1D85 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15BA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15DE SWAP2 SWAP1 PUSH2 0x21FC JUMP JUMPDEST POP DUP2 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x15F0 SWAP2 SWAP1 PUSH2 0x225A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1608 SWAP2 SWAP1 PUSH2 0x225A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4F7E4F53152CB2CD0E424B2FC990199F0ED4255C7A97A848131F1EEFF165F7B DUP4 DUP4 DUP7 PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH2 0x1661 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x235D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16CA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2192 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16E6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x170A SWAP2 SWAP1 PUSH2 0x21FC JUMP JUMPDEST POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1769 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2192 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1785 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17A9 SWAP2 SWAP1 PUSH2 0x21FC JUMP JUMPDEST POP PUSH0 DUP1 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1816 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x183A SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST SUB PUSH2 0x185A JUMPI PUSH2 0x1853 DUP3 DUP5 PUSH2 0x184E SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x1B0B JUMP JUMPDEST SWAP1 POP PUSH2 0x19B1 JUMP JUMPDEST PUSH2 0x19AE PUSH1 0x3 SLOAD PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18CA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18EE SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST DUP6 PUSH2 0x18F9 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x1903 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1970 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1994 SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST DUP6 PUSH2 0x199F SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x19A9 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST PUSH2 0x1225 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH0 DUP2 GT PUSH2 0x19F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19EA SWAP1 PUSH2 0x23F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A4F SWAP3 SWAP2 SWAP1 PUSH2 0x1D85 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A66 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A78 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP3 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1A8D SWAP2 SWAP1 PUSH2 0x2227 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1AA5 SWAP2 SWAP1 PUSH2 0x2227 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x103E5727EE41CE8741FBDF27E5E596DEB21DBE5AE93901499306D10F28D1EF7 DUP5 DUP5 DUP5 PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH2 0x1AFE SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x235D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x1B70 JUMPI DUP2 SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x2 DUP5 PUSH2 0x1B28 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST PUSH2 0x1B32 SWAP2 SWAP1 PUSH2 0x2227 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B6A JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 PUSH2 0x1B4F SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST PUSH2 0x1B59 SWAP2 SWAP1 PUSH2 0x2227 JUMP JUMPDEST PUSH2 0x1B63 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B35 JUMP JUMPDEST POP PUSH2 0x1B7D JUMP JUMPDEST PUSH0 DUP3 EQ PUSH2 0x1B7C JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B94 DUP2 PUSH2 0x1B82 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1BAD PUSH0 DUP4 ADD DUP6 PUSH2 0x1B8B JUMP JUMPDEST PUSH2 0x1BBA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B8B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1BEA DUP3 PUSH2 0x1BC1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BFA DUP2 PUSH2 0x1BE0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C13 PUSH0 DUP4 ADD DUP5 PUSH2 0x1BF1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1C26 DUP2 PUSH2 0x1BE0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C30 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C41 DUP2 PUSH2 0x1C1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C5C JUMPI PUSH2 0x1C5B PUSH2 0x1C19 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C69 DUP5 DUP3 DUP6 ADD PUSH2 0x1C33 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C84 DUP2 PUSH2 0x1C72 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C9D PUSH0 DUP4 ADD DUP5 PUSH2 0x1C7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CB6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B8B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CC5 DUP2 PUSH2 0x1B82 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CCF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CE0 DUP2 PUSH2 0x1CBC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CFB JUMPI PUSH2 0x1CFA PUSH2 0x1C19 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D08 DUP5 DUP3 DUP6 ADD PUSH2 0x1CD2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D34 PUSH2 0x1D2F PUSH2 0x1D2A DUP5 PUSH2 0x1BC1 JUMP JUMPDEST PUSH2 0x1D11 JUMP JUMPDEST PUSH2 0x1BC1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D45 DUP3 PUSH2 0x1D1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D56 DUP3 PUSH2 0x1D3B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D66 DUP2 PUSH2 0x1D4C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D7F PUSH0 DUP4 ADD DUP5 PUSH2 0x1D5D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D98 PUSH0 DUP4 ADD DUP6 PUSH2 0x1BF1 JUMP JUMPDEST PUSH2 0x1DA5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B8B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DC2 JUMPI PUSH2 0x1DC1 PUSH2 0x1C19 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DCF DUP6 DUP3 DUP7 ADD PUSH2 0x1CD2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DE0 DUP6 DUP3 DUP7 ADD PUSH2 0x1C33 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420696E70757420746F6B656E00000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E2E PUSH1 0x13 DUP4 PUSH2 0x1DEA JUMP JUMPDEST SWAP2 POP PUSH2 0x1E39 DUP3 PUSH2 0x1DFA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E5B DUP2 PUSH2 0x1E22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E80 DUP2 PUSH2 0x1E62 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E8A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E9B DUP2 PUSH2 0x1E77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EAA DUP2 PUSH2 0x1C72 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EB4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1EC5 DUP2 PUSH2 0x1EA1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1ED9 DUP2 PUSH2 0x1CBC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1EF8 JUMPI PUSH2 0x1EF7 PUSH2 0x1C19 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F05 DUP9 DUP3 DUP10 ADD PUSH2 0x1E8D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1F16 DUP9 DUP3 DUP10 ADD PUSH2 0x1EB7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1F27 DUP9 DUP3 DUP10 ADD PUSH2 0x1ECB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1F38 DUP9 DUP3 DUP10 ADD PUSH2 0x1ECB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x1F49 DUP9 DUP3 DUP10 ADD PUSH2 0x1E8D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1F8D DUP3 PUSH2 0x1C72 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F98 DUP4 PUSH2 0x1C72 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1FA6 DUP2 PUSH2 0x1C72 JUMP JUMPDEST SWAP2 POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP5 EQ PUSH0 DUP5 SLT AND ISZERO PUSH2 0x1FDD JUMPI PUSH2 0x1FDC PUSH2 0x1F56 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1FF2 JUMPI PUSH2 0x1FF1 PUSH2 0x1F56 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2003 DUP3 PUSH2 0x1B82 JUMP JUMPDEST SWAP2 POP PUSH2 0x200E DUP4 PUSH2 0x1B82 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x201C DUP2 PUSH2 0x1B82 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2033 JUMPI PUSH2 0x2032 PUSH2 0x1F56 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2071 DUP3 PUSH2 0x1B82 JUMP JUMPDEST SWAP2 POP PUSH2 0x207C DUP4 PUSH2 0x1B82 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x208C JUMPI PUSH2 0x208B PUSH2 0x203A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20AC JUMPI PUSH2 0x20AB PUSH2 0x1C19 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20B9 DUP5 DUP3 DUP6 ADD PUSH2 0x1ECB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20CC DUP3 PUSH2 0x1C72 JUMP JUMPDEST SWAP2 POP PUSH2 0x20D7 DUP4 PUSH2 0x1C72 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x20E7 JUMPI PUSH2 0x20E6 PUSH2 0x203A JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH0 SUB DUP4 EQ PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP4 EQ AND ISZERO PUSH2 0x211F JUMPI PUSH2 0x211E PUSH2 0x1F56 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x526573657276657320617265206E6F7420736574000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x215E PUSH1 0x14 DUP4 PUSH2 0x1DEA JUMP JUMPDEST SWAP2 POP PUSH2 0x2169 DUP3 PUSH2 0x212A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x218B DUP2 PUSH2 0x2152 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x21A5 PUSH0 DUP4 ADD DUP7 PUSH2 0x1BF1 JUMP JUMPDEST PUSH2 0x21B2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1BF1 JUMP JUMPDEST PUSH2 0x21BF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B8B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21DB DUP2 PUSH2 0x21C7 JUMP JUMPDEST DUP2 EQ PUSH2 0x21E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x21F6 DUP2 PUSH2 0x21D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2211 JUMPI PUSH2 0x2210 PUSH2 0x1C19 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x221E DUP5 DUP3 DUP6 ADD PUSH2 0x21E8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2231 DUP3 PUSH2 0x1B82 JUMP JUMPDEST SWAP2 POP PUSH2 0x223C DUP4 PUSH2 0x1B82 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2254 JUMPI PUSH2 0x2253 PUSH2 0x1F56 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2264 DUP3 PUSH2 0x1B82 JUMP JUMPDEST SWAP2 POP PUSH2 0x226F DUP4 PUSH2 0x1B82 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2287 JUMPI PUSH2 0x2286 PUSH2 0x1F56 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206C697175696469747900000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22C1 PUSH1 0x16 DUP4 PUSH2 0x1DEA JUMP JUMPDEST SWAP2 POP PUSH2 0x22CC DUP3 PUSH2 0x228D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22EE DUP2 PUSH2 0x22B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206C69717569646974792072656D6F7665640000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2329 PUSH1 0x1E DUP4 PUSH2 0x1DEA JUMP JUMPDEST SWAP2 POP PUSH2 0x2334 DUP3 PUSH2 0x22F5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2356 DUP2 PUSH2 0x231D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2370 PUSH0 DUP4 ADD DUP9 PUSH2 0x1B8B JUMP JUMPDEST PUSH2 0x237D PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1B8B JUMP JUMPDEST PUSH2 0x238A PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1B8B JUMP JUMPDEST PUSH2 0x2397 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1B8B JUMP JUMPDEST PUSH2 0x23A4 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1B8B JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206C69717569646974792070726F766964656400 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23E2 PUSH1 0x1F DUP4 PUSH2 0x1DEA JUMP JUMPDEST SWAP2 POP PUSH2 0x23ED DUP3 PUSH2 0x23AE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x240F DUP2 PUSH2 0x23D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY 0x28 PUSH2 0x50B3 CALLCODE 0xF RETURN CHAINID 0xCA PUSH0 0x29 0xAE 0xFC 0x1E 0xBD MUL 0xC2 0x4B 0xC8 0xA7 PUSH23 0x73463ED48AD45EDDEF4B64736F6C634300081400330000 ",
							"sourceMap": "252:11024:7:-:0;;;1455:474;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1733:7;1724:6;;:16;;;;;;;;;;;;;;;;;;1760:7;1751:6;;:16;;;;;;;;;;;;;;;;;;1813:11;1778:10;;:47;;;;;;;;;;;;;;;;;;1871:11;1836:10;;:47;;;;;;;;;;;;;;;;;;1912:8;1894:7;;:27;;;;;;;;;;;;;;;;;;1455:474;;;;;252:11024;;88:117:8;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:977::-;951:6;959;967;975;983;1032:3;1020:9;1011:7;1007:23;1003:33;1000:120;;;1039:79;;:::i;:::-;1000:120;1159:1;1184:64;1240:7;1231:6;1220:9;1216:22;1184:64;:::i;:::-;1174:74;;1130:128;1297:2;1323:64;1379:7;1370:6;1359:9;1355:22;1323:64;:::i;:::-;1313:74;;1268:129;1436:2;1462:64;1518:7;1509:6;1498:9;1494:22;1462:64;:::i;:::-;1452:74;;1407:129;1575:2;1601:64;1657:7;1648:6;1637:9;1633:22;1601:64;:::i;:::-;1591:74;;1546:129;1714:3;1741:64;1797:7;1788:6;1777:9;1773:22;1741:64;:::i;:::-;1731:74;;1685:130;845:977;;;;;;;;:::o;252:11024:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@addLiquidityInUSD_1130": {
									"entryPoint": 2411,
									"id": 1130,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addLiquidity_1072": {
									"entryPoint": 5742,
									"id": 1072,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getAmountOut_1456": {
									"entryPoint": 4217,
									"id": 1456,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getDAIperLinkMarketPrice_1636": {
									"entryPoint": 2730,
									"id": 1636,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getDAIperLinkOurDEXPrice_1602": {
									"entryPoint": 2608,
									"id": 1602,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getLPTokenDetails_1736": {
									"entryPoint": 3067,
									"id": 1736,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@getPriceRatio_1395": {
									"entryPoint": 2003,
									"id": 1395,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getPrice_1357": {
									"entryPoint": 798,
									"id": 1357,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getReserves_1308": {
									"entryPoint": 747,
									"id": 1308,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@lpToken_887": {
									"entryPoint": 2374,
									"id": 887,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@min_1711": {
									"entryPoint": 4645,
									"id": 1711,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@removeLiquidityInUSD_1295": {
									"entryPoint": 1463,
									"id": 1295,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@removeLiquidity_1219": {
									"entryPoint": 4669,
									"id": 1219,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@reserve0_889": {
									"entryPoint": 1457,
									"id": 889,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reserve1_891": {
									"entryPoint": 2368,
									"id": 891,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sqrt_1691": {
									"entryPoint": 6923,
									"id": 1691,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@swapInUSD_1575": {
									"entryPoint": 3270,
									"id": 1575,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@token0_882": {
									"entryPoint": 763,
									"id": 882,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token1_884": {
									"entryPoint": 4180,
									"id": 884,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 7219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 8680,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int256_fromMemory": {
									"entryPoint": 7863,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7378,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 7883,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint80_fromMemory": {
									"entryPoint": 7821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7239,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 8700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 8343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 7596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 7903,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7153,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_LPToken_$875_to_t_address_fromStack": {
									"entryPoint": 7517,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_int256_to_t_int256_fromStack": {
									"entryPoint": 7291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_20ad566edbd5d53cb1cde2112f5439aeea9b1d035ff04f86720a4c46f6412c00_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_27d5f3f66243758e6691dcd57e9bf312a7560459ee4acdda4b073260b5a54fc4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8989,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8885,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8383d29ebbe792827fefa7997bfaff9ad7589c06cb05191eef1178dddc2412a2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_84f0c120f9c89279530f293487f2886c10a3854abff7bba8786124cc26b0c21a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7714,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7051,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7168,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8594,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7557,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_LPToken_$875__to_t_address__fromStack_reversed": {
									"entryPoint": 7532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed": {
									"entryPoint": 7306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_20ad566edbd5d53cb1cde2112f5439aeea9b1d035ff04f86720a4c46f6412c00__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9208,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_27d5f3f66243758e6691dcd57e9bf312a7560459ee4acdda4b073260b5a54fc4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9023,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8383d29ebbe792827fefa7997bfaff9ad7589c06cb05191eef1178dddc2412a2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_84f0c120f9c89279530f293487f2886c10a3854abff7bba8786124cc26b0c21a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7331,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7066,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9053,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8743,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_int256": {
									"entryPoint": 8386,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8295,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_int256": {
									"entryPoint": 8067,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8794,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 7282,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7105,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7042,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint80": {
									"entryPoint": 7778,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_LPToken_$875_to_t_address": {
									"entryPoint": 7500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 7483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 7450,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 7441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8022,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8250,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7193,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_20ad566edbd5d53cb1cde2112f5439aeea9b1d035ff04f86720a4c46f6412c00": {
									"entryPoint": 9134,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_27d5f3f66243758e6691dcd57e9bf312a7560459ee4acdda4b073260b5a54fc4": {
									"entryPoint": 8949,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad": {
									"entryPoint": 8845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8383d29ebbe792827fefa7997bfaff9ad7589c06cb05191eef1178dddc2412a2": {
									"entryPoint": 8490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_84f0c120f9c89279530f293487f2886c10a3854abff7bba8786124cc26b0c21a": {
									"entryPoint": 7674,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7197,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 7841,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7356,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint80": {
									"entryPoint": 7799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16430:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:8",
														"type": ""
													}
												],
												"src": "7:77:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:8",
														"type": ""
													}
												],
												"src": "90:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "340:206:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "350:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "373:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "358:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "350:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "430:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "443:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "454:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "439:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "439:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "386:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "386:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "511:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "524:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "535:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "520:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "467:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "467:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "467:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "304:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "316:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "324:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "335:4:8",
														"type": ""
													}
												],
												"src": "214:332:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "622:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "629:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "618:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "618:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "607:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "579:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "589:7:8",
														"type": ""
													}
												],
												"src": "552:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "729:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "739:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "768:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "750:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "750:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "739:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "711:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "721:7:8",
														"type": ""
													}
												],
												"src": "684:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "851:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "868:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "891:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "873:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "873:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "861:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "861:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "861:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "839:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "846:3:8",
														"type": ""
													}
												],
												"src": "786:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1008:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1018:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1030:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1026:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1026:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1018:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1098:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1111:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1122:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1107:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1107:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1054:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1054:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1054:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "980:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "992:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1003:4:8",
														"type": ""
													}
												],
												"src": "910:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1178:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1188:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1204:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1198:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1198:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1188:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1171:6:8",
														"type": ""
													}
												],
												"src": "1138:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1308:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1325:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1328:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1318:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1318:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1318:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1219:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1431:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1451:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1441:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1441:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1441:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1342:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1508:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1565:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1574:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1577:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1567:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1567:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1567:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1531:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1556:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1538:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1538:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1528:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1528:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1521:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1521:43:8"
															},
															"nodeType": "YulIf",
															"src": "1518:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1501:5:8",
														"type": ""
													}
												],
												"src": "1465:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1645:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1655:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1677:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1664:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1664:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1655:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1720:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1693:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1693:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1693:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1623:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1631:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1639:5:8",
														"type": ""
													}
												],
												"src": "1593:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1804:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1850:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1852:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1852:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1852:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1825:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1834:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1821:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1821:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1846:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1817:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1817:32:8"
															},
															"nodeType": "YulIf",
															"src": "1814:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1943:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1958:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1972:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1962:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1987:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2022:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2033:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2018:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2018:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2042:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1997:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1997:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1987:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1774:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1785:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1797:6:8",
														"type": ""
													}
												],
												"src": "1738:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2117:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2127:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2138:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2127:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2099:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2109:7:8",
														"type": ""
													}
												],
												"src": "2073:76:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2218:52:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2235:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2257:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int256",
																			"nodeType": "YulIdentifier",
																			"src": "2240:16:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2240:23:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2228:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2228:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2228:36:8"
														}
													]
												},
												"name": "abi_encode_t_int256_to_t_int256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2206:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2213:3:8",
														"type": ""
													}
												],
												"src": "2155:115:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2372:122:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2382:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2394:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2405:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2390:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2390:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2382:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2460:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2473:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2484:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2469:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2469:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2418:41:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2418:69:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2418:69:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2344:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2356:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2367:4:8",
														"type": ""
													}
												],
												"src": "2276:218:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2598:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2608:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2620:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2631:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2616:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2616:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2608:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2688:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2701:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2712:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2697:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2697:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2644:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2644:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2644:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2570:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2582:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2593:4:8",
														"type": ""
													}
												],
												"src": "2500:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2771:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2828:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2837:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2840:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2830:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2830:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2830:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2794:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2819:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2801:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2801:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2791:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2791:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2784:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2784:43:8"
															},
															"nodeType": "YulIf",
															"src": "2781:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2764:5:8",
														"type": ""
													}
												],
												"src": "2728:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2908:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2918:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2940:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2927:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2927:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2918:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2983:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2956:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2956:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2956:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2886:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2894:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2902:5:8",
														"type": ""
													}
												],
												"src": "2856:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3067:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3113:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3115:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3115:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3115:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3088:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3097:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3084:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3084:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3109:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3080:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3080:32:8"
															},
															"nodeType": "YulIf",
															"src": "3077:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "3206:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3221:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3235:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3225:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3250:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3285:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3296:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3281:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3281:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3305:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3260:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3260:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3250:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3037:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3048:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3060:6:8",
														"type": ""
													}
												],
												"src": "3001:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3368:28:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3378:12:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3385:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3378:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3354:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3364:3:8",
														"type": ""
													}
												],
												"src": "3336:60:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3462:82:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3472:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3530:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "3512:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3512:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "3503:8:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3503:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3485:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3485:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3472:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3442:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3452:9:8",
														"type": ""
													}
												],
												"src": "3402:142:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3610:66:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3620:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3664:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3633:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3633:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3620:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3590:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3600:9:8",
														"type": ""
													}
												],
												"src": "3550:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3757:66:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3767:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3811:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3780:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3780:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3767:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_LPToken_$875_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3737:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3747:9:8",
														"type": ""
													}
												],
												"src": "3682:141:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3909:81:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3926:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3977:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_LPToken_$875_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3931:45:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3931:52:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3919:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3919:65:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3919:65:8"
														}
													]
												},
												"name": "abi_encode_t_contract$_LPToken_$875_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3897:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3904:3:8",
														"type": ""
													}
												],
												"src": "3829:161:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4109:139:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4119:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4131:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4142:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4127:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4127:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4119:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4214:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4227:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4238:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4223:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4223:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_LPToken_$875_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4155:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4155:86:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4155:86:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_LPToken_$875__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4081:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4093:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4104:4:8",
														"type": ""
													}
												],
												"src": "3996:252:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4380:206:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4390:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4402:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4413:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4398:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4398:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4390:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4470:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4483:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4494:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4479:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4479:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4426:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4426:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4426:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4551:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4564:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4575:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4560:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4560:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4507:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4507:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4507:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4344:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4356:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4364:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4375:4:8",
														"type": ""
													}
												],
												"src": "4254:332:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4675:391:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4721:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4723:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4723:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4723:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4696:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4705:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4692:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4692:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4717:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4688:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4688:32:8"
															},
															"nodeType": "YulIf",
															"src": "4685:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "4814:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4829:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4843:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4833:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4858:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4893:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4904:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4889:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4889:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4913:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4868:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4868:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4858:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4941:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4956:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4970:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4960:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4986:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5021:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5032:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5017:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5017:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5041:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4996:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4996:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4986:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4637:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4648:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4660:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4668:6:8",
														"type": ""
													}
												],
												"src": "4592:474:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5168:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5185:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5190:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5178:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5178:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5178:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5206:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5225:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5230:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5221:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5221:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5206:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5140:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5145:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5156:11:8",
														"type": ""
													}
												],
												"src": "5072:169:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5353:63:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5375:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5383:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5371:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5371:14:8"
																	},
																	{
																		"hexValue": "496e76616c696420696e70757420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5387:21:8",
																		"type": "",
																		"value": "Invalid input token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5364:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5364:45:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5364:45:8"
														}
													]
												},
												"name": "store_literal_in_memory_84f0c120f9c89279530f293487f2886c10a3854abff7bba8786124cc26b0c21a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5345:6:8",
														"type": ""
													}
												],
												"src": "5247:169:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5568:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5578:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5644:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5649:2:8",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5585:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5585:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5578:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5750:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_84f0c120f9c89279530f293487f2886c10a3854abff7bba8786124cc26b0c21a",
																	"nodeType": "YulIdentifier",
																	"src": "5661:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5661:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5661:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5763:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5774:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5779:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5770:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5770:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5763:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_84f0c120f9c89279530f293487f2886c10a3854abff7bba8786124cc26b0c21a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5556:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5564:3:8",
														"type": ""
													}
												],
												"src": "5422:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5965:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5975:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5987:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5998:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5983:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5983:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5975:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6022:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6033:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6018:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6018:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6041:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6047:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6037:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6037:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6011:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6011:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6011:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6067:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6201:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_84f0c120f9c89279530f293487f2886c10a3854abff7bba8786124cc26b0c21a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6075:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6075:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6067:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_84f0c120f9c89279530f293487f2886c10a3854abff7bba8786124cc26b0c21a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5945:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5960:4:8",
														"type": ""
													}
												],
												"src": "5794:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6263:61:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6273:45:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6288:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6295:22:8",
																		"type": "",
																		"value": "0xffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6284:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6284:34:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6273:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint80",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6245:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6255:7:8",
														"type": ""
													}
												],
												"src": "6219:105:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6372:78:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6428:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6437:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6440:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6430:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6430:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6430:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6395:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6419:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint80",
																					"nodeType": "YulIdentifier",
																					"src": "6402:16:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6402:23:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6392:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6392:34:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6385:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6385:42:8"
															},
															"nodeType": "YulIf",
															"src": "6382:62:8"
														}
													]
												},
												"name": "validator_revert_t_uint80",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6365:5:8",
														"type": ""
													}
												],
												"src": "6330:120:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6518:79:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6528:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6543:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6537:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6537:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6528:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6585:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint80",
																	"nodeType": "YulIdentifier",
																	"src": "6559:25:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6559:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6559:32:8"
														}
													]
												},
												"name": "abi_decode_t_uint80_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6496:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6504:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6512:5:8",
														"type": ""
													}
												],
												"src": "6456:141:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6645:78:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6701:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6710:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6713:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6703:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6703:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6703:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6668:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6692:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nodeType": "YulIdentifier",
																					"src": "6675:16:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6675:23:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6665:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6665:34:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6658:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6658:42:8"
															},
															"nodeType": "YulIf",
															"src": "6655:62:8"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6638:5:8",
														"type": ""
													}
												],
												"src": "6603:120:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6791:79:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6801:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6816:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6810:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6810:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6801:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6858:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "6832:25:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6832:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6832:32:8"
														}
													]
												},
												"name": "abi_decode_t_int256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6769:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6777:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6785:5:8",
														"type": ""
													}
												],
												"src": "6729:141:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6939:80:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6949:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6964:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6958:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6958:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6949:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7007:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6980:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6980:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6980:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6917:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6925:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6933:5:8",
														"type": ""
													}
												],
												"src": "6876:143:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7167:829:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7214:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7216:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7216:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7216:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7188:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7197:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7184:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7184:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7209:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7180:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7180:33:8"
															},
															"nodeType": "YulIf",
															"src": "7177:120:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "7307:127:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7322:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7336:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7326:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7351:73:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7396:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7407:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7392:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7392:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7416:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7361:30:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7361:63:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7351:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7444:128:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7459:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7473:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7463:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7489:73:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7534:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7545:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7530:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7530:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7554:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7499:30:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7499:63:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "7489:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7582:129:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7597:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7611:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7601:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7627:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7673:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7684:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7669:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7669:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7693:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7637:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7637:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "7627:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7721:129:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7736:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7750:2:8",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7740:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7766:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7812:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7823:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7808:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7808:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7832:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7776:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7776:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "7766:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7860:129:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7875:17:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7889:3:8",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7879:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7906:73:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7951:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7962:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7947:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7947:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7971:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7916:30:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7916:63:8"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "7906:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7105:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7116:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7128:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7136:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7144:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7152:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7160:6:8",
														"type": ""
													}
												],
												"src": "7025:971:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8030:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8047:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8050:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8040:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8040:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8040:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8144:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8147:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8137:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8137:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8137:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8168:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8171:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8161:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8161:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8161:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8002:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8235:509:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8245:24:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8267:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "8250:16:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8250:19:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8245:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8278:24:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8300:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "8283:16:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8283:19:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8278:1:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8311:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8334:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8337:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "8330:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8330:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "8315:11:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8348:40:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "8376:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "8359:16:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8359:29:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "8348:7:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8515:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8517:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8517:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8517:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "8433:1:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8436:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8429:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8429:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "8443:1:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8446:66:8",
																				"type": "",
																				"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8440:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8440:73:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8425:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8425:89:8"
															},
															"nodeType": "YulIf",
															"src": "8422:115:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8715:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8717:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8717:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8717:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "8647:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "8640:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8640:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "8670:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "8678:7:8"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "8687:1:8"
																							}
																						],
																						"functionName": {
																							"name": "sdiv",
																							"nodeType": "YulIdentifier",
																							"src": "8673:4:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8673:16:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "8667:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8667:23:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "8620:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8620:84:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8600:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8600:114:8"
															},
															"nodeType": "YulIf",
															"src": "8597:140:8"
														}
													]
												},
												"name": "checked_mul_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8218:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8221:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "8227:7:8",
														"type": ""
													}
												],
												"src": "8188:556:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8798:362:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8808:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8831:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8813:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8813:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8808:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8842:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8865:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8847:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8847:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8842:1:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8876:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8899:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8902:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "8895:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8895:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "8880:11:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8913:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "8942:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8924:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8924:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "8913:7:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9131:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9133:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9133:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9133:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9064:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9057:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9057:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "9087:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "9094:7:8"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "9103:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "9090:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9090:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "9084:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9084:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "9037:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9037:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9017:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9017:113:8"
															},
															"nodeType": "YulIf",
															"src": "9014:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8781:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8784:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "8790:7:8",
														"type": ""
													}
												],
												"src": "8750:410:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9194:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9211:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9214:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9204:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9204:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9204:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9308:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9311:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9301:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9301:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9301:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9332:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9335:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9325:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9325:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9325:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "9166:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9394:143:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9404:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9427:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9409:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9409:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9404:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9438:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9461:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9443:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9443:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9438:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9485:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "9487:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9487:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9487:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9482:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9475:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9475:9:8"
															},
															"nodeType": "YulIf",
															"src": "9472:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9517:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9526:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9529:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "9522:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9522:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "9517:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9383:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9386:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "9392:1:8",
														"type": ""
													}
												],
												"src": "9352:185:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9620:274:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9666:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9668:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9668:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9668:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9641:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9650:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9637:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9637:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9662:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9633:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9633:32:8"
															},
															"nodeType": "YulIf",
															"src": "9630:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "9759:128:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9774:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9788:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9778:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9803:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9849:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9860:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9845:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9845:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9869:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "9813:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9813:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9803:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9590:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9601:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9613:6:8",
														"type": ""
													}
												],
												"src": "9543:351:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9941:344:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9951:24:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9973:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "9956:16:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9956:19:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9951:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9984:24:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10006:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "9989:16:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9989:19:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9984:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10030:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "10032:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10032:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10032:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10027:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10020:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10020:9:8"
															},
															"nodeType": "YulIf",
															"src": "10017:35:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10232:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10234:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10234:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10234:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "10121:1:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10124:66:8",
																				"type": "",
																				"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10118:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10118:73:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10208:1:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10215:1:8",
																						"type": "",
																						"value": "0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10218:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "10211:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10211:9:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10205:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10205:16:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10101:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10101:130:8"
															},
															"nodeType": "YulIf",
															"src": "10098:156:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10264:15:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10274:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10277:1:8"
																	}
																],
																"functionName": {
																	"name": "sdiv",
																	"nodeType": "YulIdentifier",
																	"src": "10269:4:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10269:10:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "10264:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9930:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9933:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "9939:1:8",
														"type": ""
													}
												],
												"src": "9900:385:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10397:64:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10419:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10427:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10415:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10415:14:8"
																	},
																	{
																		"hexValue": "526573657276657320617265206e6f7420736574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10431:22:8",
																		"type": "",
																		"value": "Reserves are not set"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10408:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10408:46:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10408:46:8"
														}
													]
												},
												"name": "store_literal_in_memory_8383d29ebbe792827fefa7997bfaff9ad7589c06cb05191eef1178dddc2412a2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10389:6:8",
														"type": ""
													}
												],
												"src": "10291:170:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10613:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10623:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10689:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10694:2:8",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10630:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10630:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10623:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10795:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8383d29ebbe792827fefa7997bfaff9ad7589c06cb05191eef1178dddc2412a2",
																	"nodeType": "YulIdentifier",
																	"src": "10706:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10706:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10706:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10808:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10819:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10824:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10815:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10815:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10808:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8383d29ebbe792827fefa7997bfaff9ad7589c06cb05191eef1178dddc2412a2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10601:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10609:3:8",
														"type": ""
													}
												],
												"src": "10467:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11010:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11020:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11032:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11043:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11028:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11028:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11020:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11067:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11078:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11063:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11063:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11086:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11092:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11082:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11082:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11056:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11056:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11056:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11112:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11246:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8383d29ebbe792827fefa7997bfaff9ad7589c06cb05191eef1178dddc2412a2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11120:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11120:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11112:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8383d29ebbe792827fefa7997bfaff9ad7589c06cb05191eef1178dddc2412a2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10990:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11005:4:8",
														"type": ""
													}
												],
												"src": "10839:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11418:288:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11428:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11440:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11451:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11436:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11436:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11428:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11508:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11521:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11532:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11517:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11517:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11464:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11464:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11464:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11589:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11602:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11613:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11598:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11598:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11545:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11545:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11545:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11671:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11684:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11695:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11680:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11680:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11627:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11627:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11627:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11374:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11386:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11394:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11402:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11413:4:8",
														"type": ""
													}
												],
												"src": "11264:442:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11754:48:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11764:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11789:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11782:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11782:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11775:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11775:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11764:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11736:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11746:7:8",
														"type": ""
													}
												],
												"src": "11712:90:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11848:76:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11902:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11911:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11914:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11904:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11904:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11904:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11871:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11893:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "11878:14:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11878:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11868:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11868:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11861:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11861:40:8"
															},
															"nodeType": "YulIf",
															"src": "11858:60:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11841:5:8",
														"type": ""
													}
												],
												"src": "11808:116:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11990:77:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12000:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "12015:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12009:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12009:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "12000:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12055:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "12031:23:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12031:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12031:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "11968:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11976:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11984:5:8",
														"type": ""
													}
												],
												"src": "11930:137:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12147:271:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12193:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "12195:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12195:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12195:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12168:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12177:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12164:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12164:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12189:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12160:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12160:32:8"
															},
															"nodeType": "YulIf",
															"src": "12157:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "12286:125:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12301:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12315:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12305:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12330:71:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12373:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12384:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12369:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12369:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12393:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "12340:28:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12340:61:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "12330:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12117:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "12128:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12140:6:8",
														"type": ""
													}
												],
												"src": "12073:345:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12468:147:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12478:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12501:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12483:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12483:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12478:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12512:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12535:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12517:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12517:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12512:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12546:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12557:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12560:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12553:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12553:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "12546:3:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12586:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12588:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12588:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12588:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12578:1:8"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "12581:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12575:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12575:10:8"
															},
															"nodeType": "YulIf",
															"src": "12572:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12455:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12458:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "12464:3:8",
														"type": ""
													}
												],
												"src": "12424:191:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12666:149:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12676:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12699:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12681:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12681:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12676:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12710:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12733:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12715:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12715:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12710:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12744:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12756:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12759:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12752:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12752:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "12744:4:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12786:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12788:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12788:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12788:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "12777:4:8"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12783:1:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12774:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12774:11:8"
															},
															"nodeType": "YulIf",
															"src": "12771:37:8"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12652:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12655:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "12661:4:8",
														"type": ""
													}
												],
												"src": "12621:194:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12927:66:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12949:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12957:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12945:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12945:14:8"
																	},
																	{
																		"hexValue": "496e73756666696369656e74206c6971756964697479",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12961:24:8",
																		"type": "",
																		"value": "Insufficient liquidity"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12938:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12938:48:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12938:48:8"
														}
													]
												},
												"name": "store_literal_in_memory_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12919:6:8",
														"type": ""
													}
												],
												"src": "12821:172:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13145:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13155:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13221:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13226:2:8",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13162:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13162:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13155:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13327:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad",
																	"nodeType": "YulIdentifier",
																	"src": "13238:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13238:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13238:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13340:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13351:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13356:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13347:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13347:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13340:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13133:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13141:3:8",
														"type": ""
													}
												],
												"src": "12999:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13542:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13552:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13564:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13575:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13560:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13560:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13552:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13599:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13610:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13595:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13595:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13618:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13624:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13614:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13614:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13588:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13588:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13588:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13644:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13778:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13652:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13652:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13644:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13522:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13537:4:8",
														"type": ""
													}
												],
												"src": "13371:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13902:74:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13924:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13932:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13920:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13920:14:8"
																	},
																	{
																		"hexValue": "496e73756666696369656e74206c69717569646974792072656d6f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13936:32:8",
																		"type": "",
																		"value": "Insufficient liquidity removed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13913:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13913:56:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13913:56:8"
														}
													]
												},
												"name": "store_literal_in_memory_27d5f3f66243758e6691dcd57e9bf312a7560459ee4acdda4b073260b5a54fc4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13894:6:8",
														"type": ""
													}
												],
												"src": "13796:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14128:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14138:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14204:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14209:2:8",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14145:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14145:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14138:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14310:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_27d5f3f66243758e6691dcd57e9bf312a7560459ee4acdda4b073260b5a54fc4",
																	"nodeType": "YulIdentifier",
																	"src": "14221:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14221:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14221:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14323:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14334:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14339:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14330:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14330:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14323:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_27d5f3f66243758e6691dcd57e9bf312a7560459ee4acdda4b073260b5a54fc4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14116:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14124:3:8",
														"type": ""
													}
												],
												"src": "13982:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14525:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14535:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14547:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14558:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14543:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14543:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14535:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14582:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14593:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14578:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14578:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14601:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14607:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14597:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14597:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14571:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14571:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14571:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14627:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14761:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_27d5f3f66243758e6691dcd57e9bf312a7560459ee4acdda4b073260b5a54fc4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14635:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14635:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14627:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_27d5f3f66243758e6691dcd57e9bf312a7560459ee4acdda4b073260b5a54fc4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14505:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14520:4:8",
														"type": ""
													}
												],
												"src": "14354:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14989:454:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14999:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15011:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15022:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15007:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15007:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14999:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15080:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15093:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15104:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15089:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15089:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15036:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15036:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15036:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15161:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15174:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15185:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15170:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15170:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15117:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15117:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15117:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15243:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15256:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15267:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15252:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15252:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15199:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15199:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15199:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "15325:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15338:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15349:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15334:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15334:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15281:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15281:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15281:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "15407:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15420:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15431:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15416:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15416:19:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15363:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15363:73:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15363:73:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14929:9:8",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "14941:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "14949:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "14957:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14965:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14973:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14984:4:8",
														"type": ""
													}
												],
												"src": "14779:664:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15555:75:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15577:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15585:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15573:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15573:14:8"
																	},
																	{
																		"hexValue": "496e73756666696369656e74206c69717569646974792070726f7669646564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15589:33:8",
																		"type": "",
																		"value": "Insufficient liquidity provided"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15566:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15566:57:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15566:57:8"
														}
													]
												},
												"name": "store_literal_in_memory_20ad566edbd5d53cb1cde2112f5439aeea9b1d035ff04f86720a4c46f6412c00",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15547:6:8",
														"type": ""
													}
												],
												"src": "15449:181:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15782:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15792:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15858:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15863:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15799:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15799:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15792:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15964:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_20ad566edbd5d53cb1cde2112f5439aeea9b1d035ff04f86720a4c46f6412c00",
																	"nodeType": "YulIdentifier",
																	"src": "15875:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15875:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15875:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15977:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15988:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15993:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15984:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15984:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15977:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_20ad566edbd5d53cb1cde2112f5439aeea9b1d035ff04f86720a4c46f6412c00_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15770:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15778:3:8",
														"type": ""
													}
												],
												"src": "15636:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16179:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16189:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16201:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16212:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16197:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16197:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16189:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16236:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16247:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16232:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16232:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16255:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16261:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16251:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16251:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16225:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16225:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16225:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16281:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16415:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_20ad566edbd5d53cb1cde2112f5439aeea9b1d035ff04f86720a4c46f6412c00_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16289:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16289:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16281:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_20ad566edbd5d53cb1cde2112f5439aeea9b1d035ff04f86720a4c46f6412c00__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16159:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16174:4:8",
														"type": ""
													}
												],
												"src": "16008:419:8"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_LPToken_$875_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_LPToken_$875_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_LPToken_$875_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_LPToken_$875__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_LPToken_$875_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_84f0c120f9c89279530f293487f2886c10a3854abff7bba8786124cc26b0c21a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid input token\")\n\n    }\n\n    function abi_encode_t_stringliteral_84f0c120f9c89279530f293487f2886c10a3854abff7bba8786124cc26b0c21a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_84f0c120f9c89279530f293487f2886c10a3854abff7bba8786124cc26b0c21a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_84f0c120f9c89279530f293487f2886c10a3854abff7bba8786124cc26b0c21a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_84f0c120f9c89279530f293487f2886c10a3854abff7bba8786124cc26b0c21a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_int256(x, y) -> product {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_int256(product_raw)\n\n        // special case\n        if and(slt(x, 0), eq(y, 0x8000000000000000000000000000000000000000000000000000000000000000)) { panic_error_0x11() }\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, sdiv(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_div_t_int256(x, y) -> r {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        // overflow for minVal / -1\n        if and(\n            eq(x, 0x8000000000000000000000000000000000000000000000000000000000000000),\n            eq(y, sub(0, 1))\n        ) { panic_error_0x11() }\n\n        r := sdiv(x, y)\n    }\n\n    function store_literal_in_memory_8383d29ebbe792827fefa7997bfaff9ad7589c06cb05191eef1178dddc2412a2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Reserves are not set\")\n\n    }\n\n    function abi_encode_t_stringliteral_8383d29ebbe792827fefa7997bfaff9ad7589c06cb05191eef1178dddc2412a2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_8383d29ebbe792827fefa7997bfaff9ad7589c06cb05191eef1178dddc2412a2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8383d29ebbe792827fefa7997bfaff9ad7589c06cb05191eef1178dddc2412a2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8383d29ebbe792827fefa7997bfaff9ad7589c06cb05191eef1178dddc2412a2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient liquidity\")\n\n    }\n\n    function abi_encode_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_27d5f3f66243758e6691dcd57e9bf312a7560459ee4acdda4b073260b5a54fc4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient liquidity removed\")\n\n    }\n\n    function abi_encode_t_stringliteral_27d5f3f66243758e6691dcd57e9bf312a7560459ee4acdda4b073260b5a54fc4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_27d5f3f66243758e6691dcd57e9bf312a7560459ee4acdda4b073260b5a54fc4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_27d5f3f66243758e6691dcd57e9bf312a7560459ee4acdda4b073260b5a54fc4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_27d5f3f66243758e6691dcd57e9bf312a7560459ee4acdda4b073260b5a54fc4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function store_literal_in_memory_20ad566edbd5d53cb1cde2112f5439aeea9b1d035ff04f86720a4c46f6412c00(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient liquidity provided\")\n\n    }\n\n    function abi_encode_t_stringliteral_20ad566edbd5d53cb1cde2112f5439aeea9b1d035ff04f86720a4c46f6412c00_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_20ad566edbd5d53cb1cde2112f5439aeea9b1d035ff04f86720a4c46f6412c00(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_20ad566edbd5d53cb1cde2112f5439aeea9b1d035ff04f86720a4c46f6412c00__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_20ad566edbd5d53cb1cde2112f5439aeea9b1d035ff04f86720a4c46f6412c00_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5FCBD285 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xBFF46A4C GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xBFF46A4C EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xD0E7E07E EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0xF140A35A EQ PUSH2 0x2BB JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x5FCBD285 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x64E7B85A EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x729132F9 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0xA996944C EQ PUSH2 0x232 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x443CB4BC GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x443CB4BC EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x5444A39D EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x54B2A769 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x5A76F25E EQ PUSH2 0x1BC JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x902F1AC EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x41976E09 EQ PUSH2 0x134 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFF PUSH2 0x2EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10D SWAP3 SWAP2 SWAP1 PUSH2 0x1B9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11E PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x1C00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x1C47 JUMP JUMPDEST PUSH2 0x31E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15B SWAP2 SWAP1 PUSH2 0x1C8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH2 0x5B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x1CE6 JUMP JUMPDEST PUSH2 0x5B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A6 PUSH2 0x7D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x1C8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH2 0x940 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E2 PUSH2 0x946 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0x1D6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x212 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x1CE6 JUMP JUMPDEST PUSH2 0x96B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21C PUSH2 0xA30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23A PUSH2 0xAAA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x1C47 JUMP JUMPDEST PUSH2 0xBFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP3 SWAP2 SWAP1 PUSH2 0x1D85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x1DAC JUMP JUMPDEST PUSH2 0xCC6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A5 PUSH2 0x1054 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x1C00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x1DAC JUMP JUMPDEST PUSH2 0x1079 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x3C5 JUMPI POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x404 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FB SWAP1 PUSH2 0x1E44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4FA JUMPI PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4C2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4E6 SWAP2 SWAP1 PUSH2 0x1EDF JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP SWAP1 SWAP2 POP SWAP1 POP POP DUP1 SWAP2 POP POP PUSH2 0x598 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x564 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x588 SWAP2 SWAP1 PUSH2 0x1EDF JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP SWAP1 SWAP2 POP SWAP1 POP POP DUP1 SWAP2 POP POP JUMPDEST PUSH5 0x2540BE400 DUP2 PUSH2 0x5A9 SWAP2 SWAP1 PUSH2 0x1F83 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x5E0 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x31E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x60D PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x31E JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0x2 PUSH2 0x61D SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x631 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x63B SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0x2 PUSH2 0x64B SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x65F SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x669 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x7C0 PUSH1 0x3 SLOAD PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6DC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x700 SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST DUP6 PUSH2 0x70B SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x715 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x782 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7A6 SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST DUP6 PUSH2 0x7B1 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x7BB SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST PUSH2 0x1225 JUMP JUMPDEST SWAP1 POP PUSH2 0x7CB DUP2 PUSH2 0x123D JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x83F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x863 SWAP2 SWAP1 PUSH2 0x1EDF JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8D4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8F8 SWAP2 SWAP1 PUSH2 0x1EDF JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH5 0x2540BE400 DUP2 PUSH2 0x90F SWAP2 SWAP1 PUSH2 0x1F83 JUMP JUMPDEST PUSH4 0x5F5E100 PUSH5 0x2540BE400 DUP5 PUSH2 0x925 SWAP2 SWAP1 PUSH2 0x1F83 JUMP JUMPDEST PUSH2 0x92F SWAP2 SWAP1 PUSH2 0x1F83 JUMP JUMPDEST PUSH2 0x939 SWAP2 SWAP1 PUSH2 0x20C2 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x994 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x31E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x9C1 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x31E JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0x2 PUSH2 0x9D1 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x9E5 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x9EF SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0x2 PUSH2 0x9FF SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0xA13 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0xA1D SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP PUSH2 0xA29 DUP3 DUP3 PUSH2 0x166E JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x3 SLOAD GT DUP1 ISZERO PUSH2 0xA43 JUMPI POP PUSH0 PUSH1 0x4 SLOAD GT JUMPDEST PUSH2 0xA82 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA79 SWAP1 PUSH2 0x2174 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0x4 SLOAD PUSH2 0xA9B SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0xAA5 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB16 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB3A SWAP2 SWAP1 PUSH2 0x1EDF JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBAB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBCF SWAP2 SWAP1 PUSH2 0x1EDF JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0xBEA SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0xBF4 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC58 SWAP2 SWAP1 PUSH2 0x1C00 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC73 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC97 SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xD6B JUMPI POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xDAA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDA1 SWAP1 PUSH2 0x1E44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xDD3 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x31E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xE00 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x31E JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP PUSH0 DUP2 PUSH2 0xE7F JUMPI PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH2 0xEB0 JUMPI DUP4 PUSH2 0xEB2 JUMP JUMPDEST DUP5 JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH8 0xDE0B6B3A7640000 DUP10 PUSH2 0xECA SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0xED4 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xEE1 DUP3 DUP10 PUSH2 0x1079 JUMP JUMPDEST SWAP1 POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF20 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2192 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF3C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF60 SWAP2 SWAP1 PUSH2 0x21FC JUMP JUMPDEST POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9C SWAP3 SWAP2 SWAP1 PUSH2 0x1D85 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFB8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFDC SWAP2 SWAP1 PUSH2 0x21FC JUMP JUMPDEST POP DUP5 ISZERO PUSH2 0x1018 JUMPI DUP2 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xFF4 SWAP2 SWAP1 PUSH2 0x2227 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x100C SWAP2 SWAP1 PUSH2 0x225A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1049 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1029 SWAP2 SWAP1 PUSH2 0x2227 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1041 SWAP2 SWAP1 PUSH2 0x225A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1120 JUMPI POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x115F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1156 SWAP1 PUSH2 0x1E44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP PUSH0 DUP2 PUSH2 0x11BF JUMPI PUSH1 0x4 SLOAD PUSH2 0x11C3 JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH2 0x11D3 JUMPI PUSH1 0x3 SLOAD PUSH2 0x11D7 JUMP JUMPDEST PUSH1 0x4 SLOAD JUMPDEST SWAP1 POP PUSH0 PUSH2 0x3E8 PUSH2 0x3E5 DUP9 PUSH2 0x11EB SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x11F5 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH2 0x1203 SWAP2 SWAP1 PUSH2 0x2227 JUMP JUMPDEST DUP3 DUP3 PUSH2 0x120F SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x1219 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 LT PUSH2 0x1233 JUMPI DUP2 PUSH2 0x1235 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x127F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1276 SWAP1 PUSH2 0x22D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12EA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x130E SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP4 PUSH2 0x131C SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x1326 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1393 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13B7 SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP5 PUSH2 0x13C5 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x13CF SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0x13DF JUMPI POP PUSH0 DUP2 GT JUMPDEST PUSH2 0x141E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1415 SWAP1 PUSH2 0x233F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9DC29FAC CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x147A SWAP3 SWAP2 SWAP1 PUSH2 0x1D85 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1491 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14A3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1501 SWAP3 SWAP2 SWAP1 PUSH2 0x1D85 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x151D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1541 SWAP2 SWAP1 PUSH2 0x21FC JUMP JUMPDEST POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x159E SWAP3 SWAP2 SWAP1 PUSH2 0x1D85 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15BA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15DE SWAP2 SWAP1 PUSH2 0x21FC JUMP JUMPDEST POP DUP2 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x15F0 SWAP2 SWAP1 PUSH2 0x225A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1608 SWAP2 SWAP1 PUSH2 0x225A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4F7E4F53152CB2CD0E424B2FC990199F0ED4255C7A97A848131F1EEFF165F7B DUP4 DUP4 DUP7 PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH2 0x1661 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x235D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16CA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2192 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16E6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x170A SWAP2 SWAP1 PUSH2 0x21FC JUMP JUMPDEST POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1769 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2192 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1785 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17A9 SWAP2 SWAP1 PUSH2 0x21FC JUMP JUMPDEST POP PUSH0 DUP1 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1816 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x183A SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST SUB PUSH2 0x185A JUMPI PUSH2 0x1853 DUP3 DUP5 PUSH2 0x184E SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x1B0B JUMP JUMPDEST SWAP1 POP PUSH2 0x19B1 JUMP JUMPDEST PUSH2 0x19AE PUSH1 0x3 SLOAD PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18CA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18EE SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST DUP6 PUSH2 0x18F9 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x1903 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1970 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1994 SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST DUP6 PUSH2 0x199F SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x19A9 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST PUSH2 0x1225 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH0 DUP2 GT PUSH2 0x19F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19EA SWAP1 PUSH2 0x23F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A4F SWAP3 SWAP2 SWAP1 PUSH2 0x1D85 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A66 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A78 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP3 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1A8D SWAP2 SWAP1 PUSH2 0x2227 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1AA5 SWAP2 SWAP1 PUSH2 0x2227 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x103E5727EE41CE8741FBDF27E5E596DEB21DBE5AE93901499306D10F28D1EF7 DUP5 DUP5 DUP5 PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH2 0x1AFE SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x235D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x1B70 JUMPI DUP2 SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x2 DUP5 PUSH2 0x1B28 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST PUSH2 0x1B32 SWAP2 SWAP1 PUSH2 0x2227 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B6A JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 PUSH2 0x1B4F SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST PUSH2 0x1B59 SWAP2 SWAP1 PUSH2 0x2227 JUMP JUMPDEST PUSH2 0x1B63 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B35 JUMP JUMPDEST POP PUSH2 0x1B7D JUMP JUMPDEST PUSH0 DUP3 EQ PUSH2 0x1B7C JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B94 DUP2 PUSH2 0x1B82 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1BAD PUSH0 DUP4 ADD DUP6 PUSH2 0x1B8B JUMP JUMPDEST PUSH2 0x1BBA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B8B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1BEA DUP3 PUSH2 0x1BC1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BFA DUP2 PUSH2 0x1BE0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C13 PUSH0 DUP4 ADD DUP5 PUSH2 0x1BF1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1C26 DUP2 PUSH2 0x1BE0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C30 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C41 DUP2 PUSH2 0x1C1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C5C JUMPI PUSH2 0x1C5B PUSH2 0x1C19 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C69 DUP5 DUP3 DUP6 ADD PUSH2 0x1C33 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C84 DUP2 PUSH2 0x1C72 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C9D PUSH0 DUP4 ADD DUP5 PUSH2 0x1C7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CB6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B8B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CC5 DUP2 PUSH2 0x1B82 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CCF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CE0 DUP2 PUSH2 0x1CBC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CFB JUMPI PUSH2 0x1CFA PUSH2 0x1C19 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D08 DUP5 DUP3 DUP6 ADD PUSH2 0x1CD2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D34 PUSH2 0x1D2F PUSH2 0x1D2A DUP5 PUSH2 0x1BC1 JUMP JUMPDEST PUSH2 0x1D11 JUMP JUMPDEST PUSH2 0x1BC1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D45 DUP3 PUSH2 0x1D1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D56 DUP3 PUSH2 0x1D3B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D66 DUP2 PUSH2 0x1D4C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D7F PUSH0 DUP4 ADD DUP5 PUSH2 0x1D5D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D98 PUSH0 DUP4 ADD DUP6 PUSH2 0x1BF1 JUMP JUMPDEST PUSH2 0x1DA5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B8B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DC2 JUMPI PUSH2 0x1DC1 PUSH2 0x1C19 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DCF DUP6 DUP3 DUP7 ADD PUSH2 0x1CD2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DE0 DUP6 DUP3 DUP7 ADD PUSH2 0x1C33 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420696E70757420746F6B656E00000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E2E PUSH1 0x13 DUP4 PUSH2 0x1DEA JUMP JUMPDEST SWAP2 POP PUSH2 0x1E39 DUP3 PUSH2 0x1DFA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E5B DUP2 PUSH2 0x1E22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E80 DUP2 PUSH2 0x1E62 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E8A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E9B DUP2 PUSH2 0x1E77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EAA DUP2 PUSH2 0x1C72 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EB4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1EC5 DUP2 PUSH2 0x1EA1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1ED9 DUP2 PUSH2 0x1CBC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1EF8 JUMPI PUSH2 0x1EF7 PUSH2 0x1C19 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F05 DUP9 DUP3 DUP10 ADD PUSH2 0x1E8D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1F16 DUP9 DUP3 DUP10 ADD PUSH2 0x1EB7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1F27 DUP9 DUP3 DUP10 ADD PUSH2 0x1ECB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1F38 DUP9 DUP3 DUP10 ADD PUSH2 0x1ECB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x1F49 DUP9 DUP3 DUP10 ADD PUSH2 0x1E8D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1F8D DUP3 PUSH2 0x1C72 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F98 DUP4 PUSH2 0x1C72 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1FA6 DUP2 PUSH2 0x1C72 JUMP JUMPDEST SWAP2 POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP5 EQ PUSH0 DUP5 SLT AND ISZERO PUSH2 0x1FDD JUMPI PUSH2 0x1FDC PUSH2 0x1F56 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1FF2 JUMPI PUSH2 0x1FF1 PUSH2 0x1F56 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2003 DUP3 PUSH2 0x1B82 JUMP JUMPDEST SWAP2 POP PUSH2 0x200E DUP4 PUSH2 0x1B82 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x201C DUP2 PUSH2 0x1B82 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2033 JUMPI PUSH2 0x2032 PUSH2 0x1F56 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2071 DUP3 PUSH2 0x1B82 JUMP JUMPDEST SWAP2 POP PUSH2 0x207C DUP4 PUSH2 0x1B82 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x208C JUMPI PUSH2 0x208B PUSH2 0x203A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20AC JUMPI PUSH2 0x20AB PUSH2 0x1C19 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20B9 DUP5 DUP3 DUP6 ADD PUSH2 0x1ECB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20CC DUP3 PUSH2 0x1C72 JUMP JUMPDEST SWAP2 POP PUSH2 0x20D7 DUP4 PUSH2 0x1C72 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x20E7 JUMPI PUSH2 0x20E6 PUSH2 0x203A JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH0 SUB DUP4 EQ PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP4 EQ AND ISZERO PUSH2 0x211F JUMPI PUSH2 0x211E PUSH2 0x1F56 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x526573657276657320617265206E6F7420736574000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x215E PUSH1 0x14 DUP4 PUSH2 0x1DEA JUMP JUMPDEST SWAP2 POP PUSH2 0x2169 DUP3 PUSH2 0x212A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x218B DUP2 PUSH2 0x2152 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x21A5 PUSH0 DUP4 ADD DUP7 PUSH2 0x1BF1 JUMP JUMPDEST PUSH2 0x21B2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1BF1 JUMP JUMPDEST PUSH2 0x21BF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B8B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21DB DUP2 PUSH2 0x21C7 JUMP JUMPDEST DUP2 EQ PUSH2 0x21E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x21F6 DUP2 PUSH2 0x21D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2211 JUMPI PUSH2 0x2210 PUSH2 0x1C19 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x221E DUP5 DUP3 DUP6 ADD PUSH2 0x21E8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2231 DUP3 PUSH2 0x1B82 JUMP JUMPDEST SWAP2 POP PUSH2 0x223C DUP4 PUSH2 0x1B82 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2254 JUMPI PUSH2 0x2253 PUSH2 0x1F56 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2264 DUP3 PUSH2 0x1B82 JUMP JUMPDEST SWAP2 POP PUSH2 0x226F DUP4 PUSH2 0x1B82 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2287 JUMPI PUSH2 0x2286 PUSH2 0x1F56 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206C697175696469747900000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22C1 PUSH1 0x16 DUP4 PUSH2 0x1DEA JUMP JUMPDEST SWAP2 POP PUSH2 0x22CC DUP3 PUSH2 0x228D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22EE DUP2 PUSH2 0x22B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206C69717569646974792072656D6F7665640000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2329 PUSH1 0x1E DUP4 PUSH2 0x1DEA JUMP JUMPDEST SWAP2 POP PUSH2 0x2334 DUP3 PUSH2 0x22F5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2356 DUP2 PUSH2 0x231D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2370 PUSH0 DUP4 ADD DUP9 PUSH2 0x1B8B JUMP JUMPDEST PUSH2 0x237D PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1B8B JUMP JUMPDEST PUSH2 0x238A PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1B8B JUMP JUMPDEST PUSH2 0x2397 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1B8B JUMP JUMPDEST PUSH2 0x23A4 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1B8B JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206C69717569646974792070726F766964656400 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23E2 PUSH1 0x1F DUP4 PUSH2 0x1DEA JUMP JUMPDEST SWAP2 POP PUSH2 0x23ED DUP3 PUSH2 0x23AE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x240F DUP2 PUSH2 0x23D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY 0x28 PUSH2 0x50B3 CALLCODE 0xF RETURN CHAINID 0xCA PUSH0 0x29 0xAE 0xFC 0x1E 0xBD MUL 0xC2 0x4B 0xC8 0xA7 PUSH23 0x73463ED48AD45EDDEF4B64736F6C634300081400330000 ",
							"sourceMap": "252:11024:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5495:108;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;310:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5847:447;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;470:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4621:714;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6450:297;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;500:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;366:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3051:574;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9298:232;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9734:297;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11088:185;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;7813:1303;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;338:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7032:559;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5495:108;5539:7;5548;5576:8;;5586;;5568:27;;;;5495:108;;:::o;310:21::-;;;;;;;;;;;;:::o;5847:447::-;5906:3;5944:6;;;;;;;;;;;5930:20;;:10;:20;;;:44;;;;5968:6;;;;;;;;;;;5954:20;;:10;:20;;;5930:44;5922:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;6011:9;6049:6;;;;;;;;;;;6035:20;;:10;:20;;;6031:170;;6086:10;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6072:42;;;;;;;;;;;;;;;6031:170;;;6161:10;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6147:42;;;;;;;;;;;;;;;6031:170;6226:6;6218:5;:14;;;;:::i;:::-;6211:21;;;5847:447;;;:::o;470:23::-;;;;:::o;4621:714::-;4755:14;4780:16;4789:6;;;;;;;;;;4780:8;:16::i;:::-;4755:42;;4808:14;4833:16;4842:6;;;;;;;;;;;4833:8;:16::i;:::-;4808:42;;4958:15;5004:6;5000:1;:10;;;;:::i;:::-;4989:6;4977:9;:18;;;;:::i;:::-;4976:35;;;;:::i;:::-;4958:53;;5022:15;5068:6;5064:1;:10;;;;:::i;:::-;5053:6;5041:9;:18;;;;:::i;:::-;5040:35;;;;:::i;:::-;5022:53;;5134:17;5154:91;5192:8;;5168:7;;;;;;;;;;;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5158:7;:31;;;;:::i;:::-;:42;;;;:::i;:::-;5236:8;;5212:7;;;;;;;;;;;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5202:7;:31;;;;:::i;:::-;:42;;;;:::i;:::-;5154:3;:91::i;:::-;5134:111;;5301:26;5317:9;5301:15;:26::i;:::-;4679:656;;;;;4621:714;:::o;6450:297::-;6496:3;6514:10;6531;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6512:47;;;;;;6572:10;6589;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6570:47;;;;;;6677:6;6668;:15;;;;:::i;:::-;6656:7;6645:6;6636;:15;;;;:::i;:::-;6635:29;;;;:::i;:::-;:49;;;;:::i;:::-;6628:56;;;;6450:297;:::o;500:23::-;;;;:::o;366:22::-;;;;;;;;;;;;;:::o;3051:574::-;3182:14;3207:16;3216:6;;;;;;;;;;3207:8;:16::i;:::-;3182:42;;3235:14;3260:16;3269:6;;;;;;;;;;;3260:8;:16::i;:::-;3235:42;;3385:15;3431:6;3427:1;:10;;;;:::i;:::-;3416:6;3404:9;:18;;;;:::i;:::-;3403:35;;;;:::i;:::-;3385:53;;3449:15;3495:6;3491:1;:10;;;;:::i;:::-;3480:6;3468:9;:18;;;;:::i;:::-;3467:35;;;;:::i;:::-;3449:53;;3587:30;3600:7;3609;3587:12;:30::i;:::-;3106:519;;;;3051:574;:::o;9298:232::-;9355:7;9394:1;9383:8;;:12;:28;;;;;9410:1;9399:8;;:12;9383:28;9375:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;9476:8;;9466:6;9455:8;;:17;;;;:::i;:::-;9454:30;;;;:::i;:::-;9447:37;;9298:232;:::o;9734:297::-;9791:7;9813:10;9830;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9811:47;;;;;;9871:10;9888;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9869:47;;;;;;9971:6;9953;9943;9935:24;;;;:::i;:::-;9934:44;;;;:::i;:::-;9927:51;;;;9734:297;:::o;11088:185::-;11150:7;11159;11179:15;11197:7;;;;;;;;;;;:17;;;11215:4;11197:23;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11179:41;;11247:7;;;;;;;;;;;11257;11231:34;;;;;11088:185;;;:::o;7813:1303::-;7913:6;;;;;;;;;;7899:20;;:10;:20;;;:44;;;;7937:6;;;;;;;;;;;7923:20;;:10;:20;;;7899:44;7891:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;8045:14;8070:16;8079:6;;;;;;;;;;8070:8;:16::i;:::-;8045:42;;8098:14;8123:16;8132:6;;;;;;;;;;;8123:8;:16::i;:::-;8098:42;;8153:18;8189:6;;;;;;;;;;;8175:20;;:10;:20;;;8153:43;;8207:19;8229:13;:31;;8254:6;;;;;;;;;;8229:31;;;8245:6;;;;;;;;;;;8229:31;8207:53;;8271:18;8292:13;:31;;8317:6;8292:31;;;8308:6;8292:31;8271:52;;8408:16;8450:10;8440:6;8428:9;:18;;;;:::i;:::-;8427:33;;;;:::i;:::-;8408:52;;8545:17;8565:34;8578:8;8588:10;8565:12;:34::i;:::-;8545:54;;8683:10;8676:31;;;8708:10;8728:4;8735:8;8676:68;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8829:11;8822:28;;;8851:10;8863:9;8822:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8922:13;8918:191;;;8964:8;8952;;:20;;;;;;;:::i;:::-;;;;;;;;8999:9;8987:8;;:21;;;;;;;:::i;:::-;;;;;;;;8918:191;;;9053:8;9041;;:20;;;;;;;:::i;:::-;;;;;;;;9088:9;9076:8;;:21;;;;;;;:::i;:::-;;;;;;;;8918:191;7880:1236;;;;;;;7813:1303;;:::o;338:21::-;;;;;;;;;;;;;:::o;7032:559::-;7113:17;7165:6;;;;;;;;;;;7151:20;;:10;:20;;;:44;;;;7189:6;;;;;;;;;;;7175:20;;:10;:20;;;7151:44;7143:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;7230:18;7266:6;;;;;;;;;;;7252:20;;:10;:20;;;7230:43;;7284:20;7307:13;:35;;7334:8;;7307:35;;;7323:8;;7307:35;7284:58;;7353:21;7377:13;:35;;7404:8;;7377:35;;;7393:8;;7377:35;7353:59;;7423:23;7466:4;7460:3;7449:8;:14;;;;:::i;:::-;:21;;;;:::i;:::-;7423:47;;7567:15;7552:12;:30;;;;:::i;:::-;7535:13;7517:15;:31;;;;:::i;:::-;:66;;;;:::i;:::-;7505:78;;7132:459;;;;7032:559;;;;:::o;10745:96::-;10797:6;10824:1;10820;:5;:13;;10832:1;10820:13;;;10828:1;10820:13;10816:17;;10745:96;;;;:::o;3769:667::-;3853:1;3841:9;:13;3833:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;3894:15;3935:7;;;;;;;;;;;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3924:8;;3912:9;:20;;;;:::i;:::-;:44;;;;:::i;:::-;3894:62;;3967:15;4008:7;;;;;;;;;;;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3997:8;;3985:9;:20;;;;:::i;:::-;:44;;;;:::i;:::-;3967:62;;4060:1;4050:7;:11;:26;;;;;4075:1;4065:7;:11;4050:26;4042:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;4124:7;;;;;;;;;;;:12;;;4137:10;4149:9;4124:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4179:6;;;;;;;;;;4172:23;;;4196:10;4208:7;4172:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4234:6;;;;;;;;;;;4227:23;;;4251:10;4263:7;4227:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4296:7;4284:8;;:19;;;;;;;:::i;:::-;;;;;;;;4326:7;4314:8;;:19;;;;;;;:::i;:::-;;;;;;;;4368:10;4351:77;;;4380:7;4389;4398:9;4409:8;;4419;;4351:77;;;;;;;;;;:::i;:::-;;;;;;;;3822:614;;3769:667;:::o;2112:760::-;2195:6;;;;;;;;;;2188:27;;;2216:10;2236:4;2243:7;2188:63;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2269:6;;;;;;;;;;;2262:27;;;2290:10;2310:4;2317:7;2262:63;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2338:17;2395:1;2370:7;;;;;;;;;;;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:26;2366:230;;2425:23;2440:7;2430;:17;;;;:::i;:::-;2425:4;:23::i;:::-;2413:35;;2366:230;;;2493:91;2531:8;;2507:7;;;;;;;;;;;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2497:7;:31;;;;:::i;:::-;:42;;;;:::i;:::-;2575:8;;2551:7;;;;;;;;;;;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2541:7;:31;;;;:::i;:::-;:42;;;;:::i;:::-;2493:3;:91::i;:::-;2481:103;;2366:230;2628:1;2616:9;:13;2608:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;2676:7;;;;;;;;;;;:12;;;2689:10;2701:9;2676:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2736:7;2724:8;;:19;;;;;;;:::i;:::-;;;;;;;;2766:7;2754:8;;:19;;;;;;;:::i;:::-;;;;;;;;2804:10;2789:75;;;2816:7;2825;2834:9;2845:8;;2855;;2789:75;;;;;;;;;;:::i;:::-;;;;;;;;2177:695;2112:760;;:::o;10250:303::-;10295:6;10322:1;10318;:5;10314:232;;;10344:1;10340:5;;10360:6;10377:1;10373;10369;:5;;;;:::i;:::-;:9;;;;:::i;:::-;10360:18;;10393:92;10404:1;10400;:5;10393:92;;;10430:1;10426:5;;10468:1;10463;10459;10455;:5;;;;:::i;:::-;:9;;;;:::i;:::-;10454:15;;;;:::i;:::-;10450:19;;10393:92;;;10325:171;10314:232;;;10511:1;10506;:6;10502:44;;10533:1;10529:5;;10502:44;10314:232;10250:303;;;:::o;7:77:8:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:332::-;335:4;373:2;362:9;358:18;350:26;;386:71;454:1;443:9;439:17;430:6;386:71;:::i;:::-;467:72;535:2;524:9;520:18;511:6;467:72;:::i;:::-;214:332;;;;;:::o;552:126::-;589:7;629:42;622:5;618:54;607:65;;552:126;;;:::o;684:96::-;721:7;750:24;768:5;750:24;:::i;:::-;739:35;;684:96;;;:::o;786:118::-;873:24;891:5;873:24;:::i;:::-;868:3;861:37;786:118;;:::o;910:222::-;1003:4;1041:2;1030:9;1026:18;1018:26;;1054:71;1122:1;1111:9;1107:17;1098:6;1054:71;:::i;:::-;910:222;;;;:::o;1219:117::-;1328:1;1325;1318:12;1465:122;1538:24;1556:5;1538:24;:::i;:::-;1531:5;1528:35;1518:63;;1577:1;1574;1567:12;1518:63;1465:122;:::o;1593:139::-;1639:5;1677:6;1664:20;1655:29;;1693:33;1720:5;1693:33;:::i;:::-;1593:139;;;;:::o;1738:329::-;1797:6;1846:2;1834:9;1825:7;1821:23;1817:32;1814:119;;;1852:79;;:::i;:::-;1814:119;1972:1;1997:53;2042:7;2033:6;2022:9;2018:22;1997:53;:::i;:::-;1987:63;;1943:117;1738:329;;;;:::o;2073:76::-;2109:7;2138:5;2127:16;;2073:76;;;:::o;2155:115::-;2240:23;2257:5;2240:23;:::i;:::-;2235:3;2228:36;2155:115;;:::o;2276:218::-;2367:4;2405:2;2394:9;2390:18;2382:26;;2418:69;2484:1;2473:9;2469:17;2460:6;2418:69;:::i;:::-;2276:218;;;;:::o;2500:222::-;2593:4;2631:2;2620:9;2616:18;2608:26;;2644:71;2712:1;2701:9;2697:17;2688:6;2644:71;:::i;:::-;2500:222;;;;:::o;2728:122::-;2801:24;2819:5;2801:24;:::i;:::-;2794:5;2791:35;2781:63;;2840:1;2837;2830:12;2781:63;2728:122;:::o;2856:139::-;2902:5;2940:6;2927:20;2918:29;;2956:33;2983:5;2956:33;:::i;:::-;2856:139;;;;:::o;3001:329::-;3060:6;3109:2;3097:9;3088:7;3084:23;3080:32;3077:119;;;3115:79;;:::i;:::-;3077:119;3235:1;3260:53;3305:7;3296:6;3285:9;3281:22;3260:53;:::i;:::-;3250:63;;3206:117;3001:329;;;;:::o;3336:60::-;3364:3;3385:5;3378:12;;3336:60;;;:::o;3402:142::-;3452:9;3485:53;3503:34;3512:24;3530:5;3512:24;:::i;:::-;3503:34;:::i;:::-;3485:53;:::i;:::-;3472:66;;3402:142;;;:::o;3550:126::-;3600:9;3633:37;3664:5;3633:37;:::i;:::-;3620:50;;3550:126;;;:::o;3682:141::-;3747:9;3780:37;3811:5;3780:37;:::i;:::-;3767:50;;3682:141;;;:::o;3829:161::-;3931:52;3977:5;3931:52;:::i;:::-;3926:3;3919:65;3829:161;;:::o;3996:252::-;4104:4;4142:2;4131:9;4127:18;4119:26;;4155:86;4238:1;4227:9;4223:17;4214:6;4155:86;:::i;:::-;3996:252;;;;:::o;4254:332::-;4375:4;4413:2;4402:9;4398:18;4390:26;;4426:71;4494:1;4483:9;4479:17;4470:6;4426:71;:::i;:::-;4507:72;4575:2;4564:9;4560:18;4551:6;4507:72;:::i;:::-;4254:332;;;;;:::o;4592:474::-;4660:6;4668;4717:2;4705:9;4696:7;4692:23;4688:32;4685:119;;;4723:79;;:::i;:::-;4685:119;4843:1;4868:53;4913:7;4904:6;4893:9;4889:22;4868:53;:::i;:::-;4858:63;;4814:117;4970:2;4996:53;5041:7;5032:6;5021:9;5017:22;4996:53;:::i;:::-;4986:63;;4941:118;4592:474;;;;;:::o;5072:169::-;5156:11;5190:6;5185:3;5178:19;5230:4;5225:3;5221:14;5206:29;;5072:169;;;;:::o;5247:::-;5387:21;5383:1;5375:6;5371:14;5364:45;5247:169;:::o;5422:366::-;5564:3;5585:67;5649:2;5644:3;5585:67;:::i;:::-;5578:74;;5661:93;5750:3;5661:93;:::i;:::-;5779:2;5774:3;5770:12;5763:19;;5422:366;;;:::o;5794:419::-;5960:4;5998:2;5987:9;5983:18;5975:26;;6047:9;6041:4;6037:20;6033:1;6022:9;6018:17;6011:47;6075:131;6201:4;6075:131;:::i;:::-;6067:139;;5794:419;;;:::o;6219:105::-;6255:7;6295:22;6288:5;6284:34;6273:45;;6219:105;;;:::o;6330:120::-;6402:23;6419:5;6402:23;:::i;:::-;6395:5;6392:34;6382:62;;6440:1;6437;6430:12;6382:62;6330:120;:::o;6456:141::-;6512:5;6543:6;6537:13;6528:22;;6559:32;6585:5;6559:32;:::i;:::-;6456:141;;;;:::o;6603:120::-;6675:23;6692:5;6675:23;:::i;:::-;6668:5;6665:34;6655:62;;6713:1;6710;6703:12;6655:62;6603:120;:::o;6729:141::-;6785:5;6816:6;6810:13;6801:22;;6832:32;6858:5;6832:32;:::i;:::-;6729:141;;;;:::o;6876:143::-;6933:5;6964:6;6958:13;6949:22;;6980:33;7007:5;6980:33;:::i;:::-;6876:143;;;;:::o;7025:971::-;7128:6;7136;7144;7152;7160;7209:3;7197:9;7188:7;7184:23;7180:33;7177:120;;;7216:79;;:::i;:::-;7177:120;7336:1;7361:63;7416:7;7407:6;7396:9;7392:22;7361:63;:::i;:::-;7351:73;;7307:127;7473:2;7499:63;7554:7;7545:6;7534:9;7530:22;7499:63;:::i;:::-;7489:73;;7444:128;7611:2;7637:64;7693:7;7684:6;7673:9;7669:22;7637:64;:::i;:::-;7627:74;;7582:129;7750:2;7776:64;7832:7;7823:6;7812:9;7808:22;7776:64;:::i;:::-;7766:74;;7721:129;7889:3;7916:63;7971:7;7962:6;7951:9;7947:22;7916:63;:::i;:::-;7906:73;;7860:129;7025:971;;;;;;;;:::o;8002:180::-;8050:77;8047:1;8040:88;8147:4;8144:1;8137:15;8171:4;8168:1;8161:15;8188:556;8227:7;8250:19;8267:1;8250:19;:::i;:::-;8245:24;;8283:19;8300:1;8283:19;:::i;:::-;8278:24;;8337:1;8334;8330:9;8359:29;8376:11;8359:29;:::i;:::-;8348:40;;8446:66;8443:1;8440:73;8436:1;8433;8429:9;8425:89;8422:115;;;8517:18;;:::i;:::-;8422:115;8687:1;8678:7;8673:16;8670:1;8667:23;8647:1;8640:9;8620:84;8597:140;;8717:18;;:::i;:::-;8597:140;8235:509;8188:556;;;;:::o;8750:410::-;8790:7;8813:20;8831:1;8813:20;:::i;:::-;8808:25;;8847:20;8865:1;8847:20;:::i;:::-;8842:25;;8902:1;8899;8895:9;8924:30;8942:11;8924:30;:::i;:::-;8913:41;;9103:1;9094:7;9090:15;9087:1;9084:22;9064:1;9057:9;9037:83;9014:139;;9133:18;;:::i;:::-;9014:139;8798:362;8750:410;;;;:::o;9166:180::-;9214:77;9211:1;9204:88;9311:4;9308:1;9301:15;9335:4;9332:1;9325:15;9352:185;9392:1;9409:20;9427:1;9409:20;:::i;:::-;9404:25;;9443:20;9461:1;9443:20;:::i;:::-;9438:25;;9482:1;9472:35;;9487:18;;:::i;:::-;9472:35;9529:1;9526;9522:9;9517:14;;9352:185;;;;:::o;9543:351::-;9613:6;9662:2;9650:9;9641:7;9637:23;9633:32;9630:119;;;9668:79;;:::i;:::-;9630:119;9788:1;9813:64;9869:7;9860:6;9849:9;9845:22;9813:64;:::i;:::-;9803:74;;9759:128;9543:351;;;;:::o;9900:385::-;9939:1;9956:19;9973:1;9956:19;:::i;:::-;9951:24;;9989:19;10006:1;9989:19;:::i;:::-;9984:24;;10027:1;10017:35;;10032:18;;:::i;:::-;10017:35;10218:1;10215;10211:9;10208:1;10205:16;10124:66;10121:1;10118:73;10101:130;10098:156;;;10234:18;;:::i;:::-;10098:156;10277:1;10274;10269:10;10264:15;;9900:385;;;;:::o;10291:170::-;10431:22;10427:1;10419:6;10415:14;10408:46;10291:170;:::o;10467:366::-;10609:3;10630:67;10694:2;10689:3;10630:67;:::i;:::-;10623:74;;10706:93;10795:3;10706:93;:::i;:::-;10824:2;10819:3;10815:12;10808:19;;10467:366;;;:::o;10839:419::-;11005:4;11043:2;11032:9;11028:18;11020:26;;11092:9;11086:4;11082:20;11078:1;11067:9;11063:17;11056:47;11120:131;11246:4;11120:131;:::i;:::-;11112:139;;10839:419;;;:::o;11264:442::-;11413:4;11451:2;11440:9;11436:18;11428:26;;11464:71;11532:1;11521:9;11517:17;11508:6;11464:71;:::i;:::-;11545:72;11613:2;11602:9;11598:18;11589:6;11545:72;:::i;:::-;11627;11695:2;11684:9;11680:18;11671:6;11627:72;:::i;:::-;11264:442;;;;;;:::o;11712:90::-;11746:7;11789:5;11782:13;11775:21;11764:32;;11712:90;;;:::o;11808:116::-;11878:21;11893:5;11878:21;:::i;:::-;11871:5;11868:32;11858:60;;11914:1;11911;11904:12;11858:60;11808:116;:::o;11930:137::-;11984:5;12015:6;12009:13;12000:22;;12031:30;12055:5;12031:30;:::i;:::-;11930:137;;;;:::o;12073:345::-;12140:6;12189:2;12177:9;12168:7;12164:23;12160:32;12157:119;;;12195:79;;:::i;:::-;12157:119;12315:1;12340:61;12393:7;12384:6;12373:9;12369:22;12340:61;:::i;:::-;12330:71;;12286:125;12073:345;;;;:::o;12424:191::-;12464:3;12483:20;12501:1;12483:20;:::i;:::-;12478:25;;12517:20;12535:1;12517:20;:::i;:::-;12512:25;;12560:1;12557;12553:9;12546:16;;12581:3;12578:1;12575:10;12572:36;;;12588:18;;:::i;:::-;12572:36;12424:191;;;;:::o;12621:194::-;12661:4;12681:20;12699:1;12681:20;:::i;:::-;12676:25;;12715:20;12733:1;12715:20;:::i;:::-;12710:25;;12759:1;12756;12752:9;12744:17;;12783:1;12777:4;12774:11;12771:37;;;12788:18;;:::i;:::-;12771:37;12621:194;;;;:::o;12821:172::-;12961:24;12957:1;12949:6;12945:14;12938:48;12821:172;:::o;12999:366::-;13141:3;13162:67;13226:2;13221:3;13162:67;:::i;:::-;13155:74;;13238:93;13327:3;13238:93;:::i;:::-;13356:2;13351:3;13347:12;13340:19;;12999:366;;;:::o;13371:419::-;13537:4;13575:2;13564:9;13560:18;13552:26;;13624:9;13618:4;13614:20;13610:1;13599:9;13595:17;13588:47;13652:131;13778:4;13652:131;:::i;:::-;13644:139;;13371:419;;;:::o;13796:180::-;13936:32;13932:1;13924:6;13920:14;13913:56;13796:180;:::o;13982:366::-;14124:3;14145:67;14209:2;14204:3;14145:67;:::i;:::-;14138:74;;14221:93;14310:3;14221:93;:::i;:::-;14339:2;14334:3;14330:12;14323:19;;13982:366;;;:::o;14354:419::-;14520:4;14558:2;14547:9;14543:18;14535:26;;14607:9;14601:4;14597:20;14593:1;14582:9;14578:17;14571:47;14635:131;14761:4;14635:131;:::i;:::-;14627:139;;14354:419;;;:::o;14779:664::-;14984:4;15022:3;15011:9;15007:19;14999:27;;15036:71;15104:1;15093:9;15089:17;15080:6;15036:71;:::i;:::-;15117:72;15185:2;15174:9;15170:18;15161:6;15117:72;:::i;:::-;15199;15267:2;15256:9;15252:18;15243:6;15199:72;:::i;:::-;15281;15349:2;15338:9;15334:18;15325:6;15281:72;:::i;:::-;15363:73;15431:3;15420:9;15416:19;15407:6;15363:73;:::i;:::-;14779:664;;;;;;;;:::o;15449:181::-;15589:33;15585:1;15577:6;15573:14;15566:57;15449:181;:::o;15636:366::-;15778:3;15799:67;15863:2;15858:3;15799:67;:::i;:::-;15792:74;;15875:93;15964:3;15875:93;:::i;:::-;15993:2;15988:3;15984:12;15977:19;;15636:366;;;:::o;16008:419::-;16174:4;16212:2;16201:9;16197:18;16189:26;;16261:9;16255:4;16251:20;16247:1;16236:9;16232:17;16225:47;16289:131;16415:4;16289:131;:::i;:::-;16281:139;;16008:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1858400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addLiquidityInUSD(uint256)": "infinite",
								"getAmountOut(uint256,address)": "infinite",
								"getDAIperLinkMarketPrice()": "infinite",
								"getDAIperLinkOurDEXPrice()": "infinite",
								"getLPTokenDetails(address)": "infinite",
								"getPrice(address)": "infinite",
								"getPriceRatio()": "infinite",
								"getReserves()": "infinite",
								"lpToken()": "infinite",
								"removeLiquidityInUSD(uint256)": "infinite",
								"reserve0()": "2448",
								"reserve1()": "2514",
								"swapInUSD(uint256,address)": "infinite",
								"token0()": "2551",
								"token1()": "2574"
							},
							"internal": {
								"addLiquidity(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "63",
								"removeLiquidity(uint256)": "infinite",
								"sqrt(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 252,
									"end": 11276,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 252,
									"end": 11276,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 252,
									"end": 11276,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1455,
									"end": 1929,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 1455,
									"end": 1929,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1455,
									"end": 1929,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1455,
									"end": 1929,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1455,
									"end": 1929,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1455,
									"end": 1929,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1455,
									"end": 1929,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1455,
									"end": 1929,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1455,
									"end": 1929,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1455,
									"end": 1929,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1455,
									"end": 1929,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1455,
									"end": 1929,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1455,
									"end": 1929,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1455,
									"end": 1929,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1455,
									"end": 1929,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 1455,
									"end": 1929,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1455,
									"end": 1929,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1455,
									"end": 1929,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1455,
									"end": 1929,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1455,
									"end": 1929,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1455,
									"end": 1929,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1455,
									"end": 1929,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1455,
									"end": 1929,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1455,
									"end": 1929,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1455,
									"end": 1929,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1455,
									"end": 1929,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1455,
									"end": 1929,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1455,
									"end": 1929,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1455,
									"end": 1929,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1455,
									"end": 1929,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1455,
									"end": 1929,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1455,
									"end": 1929,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1455,
									"end": 1929,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1455,
									"end": 1929,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1455,
									"end": 1929,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1733,
									"end": 1740,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1724,
									"end": 1730,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1724,
									"end": 1730,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1724,
									"end": 1740,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1724,
									"end": 1740,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1724,
									"end": 1740,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1724,
									"end": 1740,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1724,
									"end": 1740,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1724,
									"end": 1740,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1724,
									"end": 1740,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1724,
									"end": 1740,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1724,
									"end": 1740,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1724,
									"end": 1740,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1724,
									"end": 1740,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1724,
									"end": 1740,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1724,
									"end": 1740,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1724,
									"end": 1740,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1724,
									"end": 1740,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1724,
									"end": 1740,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1724,
									"end": 1740,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1724,
									"end": 1740,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1760,
									"end": 1767,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1751,
									"end": 1757,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1751,
									"end": 1757,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1751,
									"end": 1767,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1751,
									"end": 1767,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1751,
									"end": 1767,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1751,
									"end": 1767,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1751,
									"end": 1767,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1751,
									"end": 1767,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1751,
									"end": 1767,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1751,
									"end": 1767,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1751,
									"end": 1767,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1751,
									"end": 1767,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1751,
									"end": 1767,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1751,
									"end": 1767,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1751,
									"end": 1767,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1751,
									"end": 1767,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1751,
									"end": 1767,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1751,
									"end": 1767,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1751,
									"end": 1767,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1751,
									"end": 1767,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1813,
									"end": 1824,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1778,
									"end": 1788,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1778,
									"end": 1788,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1778,
									"end": 1825,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1778,
									"end": 1825,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1778,
									"end": 1825,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1778,
									"end": 1825,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1778,
									"end": 1825,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1778,
									"end": 1825,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1778,
									"end": 1825,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1778,
									"end": 1825,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1778,
									"end": 1825,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1778,
									"end": 1825,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1778,
									"end": 1825,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1778,
									"end": 1825,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1778,
									"end": 1825,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1778,
									"end": 1825,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1778,
									"end": 1825,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1778,
									"end": 1825,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1778,
									"end": 1825,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1778,
									"end": 1825,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1871,
									"end": 1882,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1836,
									"end": 1846,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 1836,
									"end": 1846,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1836,
									"end": 1883,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1836,
									"end": 1883,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1836,
									"end": 1883,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1836,
									"end": 1883,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1836,
									"end": 1883,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1836,
									"end": 1883,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1836,
									"end": 1883,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1836,
									"end": 1883,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1836,
									"end": 1883,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1836,
									"end": 1883,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1836,
									"end": 1883,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1836,
									"end": 1883,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1836,
									"end": 1883,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1836,
									"end": 1883,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1836,
									"end": 1883,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1836,
									"end": 1883,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1836,
									"end": 1883,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1836,
									"end": 1883,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1912,
									"end": 1920,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1894,
									"end": 1901,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1894,
									"end": 1901,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1894,
									"end": 1921,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1894,
									"end": 1921,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1894,
									"end": 1921,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1894,
									"end": 1921,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1894,
									"end": 1921,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1894,
									"end": 1921,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1894,
									"end": 1921,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1894,
									"end": 1921,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1894,
									"end": 1921,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1894,
									"end": 1921,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1894,
									"end": 1921,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1894,
									"end": 1921,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1894,
									"end": 1921,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1894,
									"end": 1921,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1894,
									"end": 1921,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1894,
									"end": 1921,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1894,
									"end": 1921,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1894,
									"end": 1921,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1455,
									"end": 1929,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1455,
									"end": 1929,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1455,
									"end": 1929,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1455,
									"end": 1929,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1455,
									"end": 1929,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 252,
									"end": 11276,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 252,
									"end": 11276,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1822,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1822,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 951,
									"end": 957,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 959,
									"end": 965,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 967,
									"end": 973,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 975,
									"end": 981,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 983,
									"end": 989,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1032,
									"end": 1035,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 1020,
									"end": 1029,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1011,
									"end": 1018,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 1007,
									"end": 1030,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1003,
									"end": 1036,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 1000,
									"end": 1120,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1000,
									"end": 1120,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 1000,
									"end": 1120,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1039,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 1039,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 1039,
									"end": 1118,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1039,
									"end": 1118,
									"name": "tag",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 1039,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1000,
									"end": 1120,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 1000,
									"end": 1120,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1159,
									"end": 1160,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1184,
									"end": 1248,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 1240,
									"end": 1247,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 1231,
									"end": 1237,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1220,
									"end": 1229,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 1216,
									"end": 1238,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1184,
									"end": 1248,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 1184,
									"end": 1248,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1184,
									"end": 1248,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 1184,
									"end": 1248,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1174,
									"end": 1248,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 1174,
									"end": 1248,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1130,
									"end": 1258,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1297,
									"end": 1299,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1323,
									"end": 1387,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 1379,
									"end": 1386,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 1370,
									"end": 1376,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1359,
									"end": 1368,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 1355,
									"end": 1377,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1323,
									"end": 1387,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 1323,
									"end": 1387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1323,
									"end": 1387,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 1323,
									"end": 1387,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1387,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1387,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1268,
									"end": 1397,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1436,
									"end": 1438,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1462,
									"end": 1526,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 1518,
									"end": 1525,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 1509,
									"end": 1515,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1498,
									"end": 1507,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 1494,
									"end": 1516,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1462,
									"end": 1526,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 1462,
									"end": 1526,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1462,
									"end": 1526,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 1462,
									"end": 1526,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1452,
									"end": 1526,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1452,
									"end": 1526,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1407,
									"end": 1536,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1575,
									"end": 1577,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1601,
									"end": 1665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 1657,
									"end": 1664,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 1648,
									"end": 1654,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1637,
									"end": 1646,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 1633,
									"end": 1655,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1601,
									"end": 1665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 1601,
									"end": 1665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1601,
									"end": 1665,
									"name": "tag",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 1601,
									"end": 1665,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1591,
									"end": 1665,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1591,
									"end": 1665,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1546,
									"end": 1675,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1714,
									"end": 1717,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1741,
									"end": 1805,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 1797,
									"end": 1804,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 1788,
									"end": 1794,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1777,
									"end": 1786,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 1773,
									"end": 1795,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1741,
									"end": 1805,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 1741,
									"end": 1805,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1741,
									"end": 1805,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 1741,
									"end": 1805,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1731,
									"end": 1805,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1731,
									"end": 1805,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1685,
									"end": 1815,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1822,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1822,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1822,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1822,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1822,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1822,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1822,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1822,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1822,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 252,
									"end": 11276,
									"name": "tag",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 252,
									"end": 11276,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 252,
									"end": 11276,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 252,
									"end": 11276,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 252,
									"end": 11276,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 252,
									"end": 11276,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 11276,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 252,
									"end": 11276,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 11276,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122037286150b3f20ff346ca5f29aefc1ebd02c24bc8a77673463ed48ad45eddef4b64736f6c63430008140033",
									".code": [
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH",
											"source": 7,
											"value": "5FCBD285"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH",
											"source": 7,
											"value": "BFF46A4C"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH",
											"source": 7,
											"value": "BFF46A4C"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH",
											"source": 7,
											"value": "D0E7E07E"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH",
											"source": 7,
											"value": "D21220A7"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH",
											"source": 7,
											"value": "F140A35A"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH",
											"source": 7,
											"value": "5FCBD285"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH",
											"source": 7,
											"value": "64E7B85A"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH",
											"source": 7,
											"value": "729132F9"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH",
											"source": 7,
											"value": "A996944C"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH",
											"source": 7,
											"value": "443CB4BC"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH",
											"source": 7,
											"value": "443CB4BC"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH",
											"source": 7,
											"value": "5444A39D"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH",
											"source": 7,
											"value": "54B2A769"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH",
											"source": 7,
											"value": "5A76F25E"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH",
											"source": 7,
											"value": "902F1AC"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH",
											"source": 7,
											"value": "DFE1681"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH",
											"source": 7,
											"value": "41976E09"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 252,
											"end": 11276,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5495,
											"end": 5603,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 5495,
											"end": 5603,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5495,
											"end": 5603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 5495,
											"end": 5603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 5495,
											"end": 5603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5495,
											"end": 5603,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 5495,
											"end": 5603,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5495,
											"end": 5603,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5495,
											"end": 5603,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5495,
											"end": 5603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 5495,
											"end": 5603,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5495,
											"end": 5603,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5495,
											"end": 5603,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5495,
											"end": 5603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5495,
											"end": 5603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5495,
											"end": 5603,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 5495,
											"end": 5603,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5495,
											"end": 5603,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5495,
											"end": 5603,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5495,
											"end": 5603,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5495,
											"end": 5603,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5495,
											"end": 5603,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5495,
											"end": 5603,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5495,
											"end": 5603,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 310,
											"end": 331,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 310,
											"end": 331,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 310,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 310,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 310,
											"end": 331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 310,
											"end": 331,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 310,
											"end": 331,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 310,
											"end": 331,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 310,
											"end": 331,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 310,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 310,
											"end": 331,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 310,
											"end": 331,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 310,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 310,
											"end": 331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 310,
											"end": 331,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 310,
											"end": 331,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 310,
											"end": 331,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 310,
											"end": 331,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 310,
											"end": 331,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 310,
											"end": 331,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 310,
											"end": 331,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 310,
											"end": 331,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 310,
											"end": 331,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 5847,
											"end": 6294,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 5847,
											"end": 6294,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5847,
											"end": 6294,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 5847,
											"end": 6294,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5847,
											"end": 6294,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5847,
											"end": 6294,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5847,
											"end": 6294,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5847,
											"end": 6294,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5847,
											"end": 6294,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5847,
											"end": 6294,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5847,
											"end": 6294,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 5847,
											"end": 6294,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5847,
											"end": 6294,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5847,
											"end": 6294,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 5847,
											"end": 6294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5847,
											"end": 6294,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 5847,
											"end": 6294,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5847,
											"end": 6294,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 5847,
											"end": 6294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5847,
											"end": 6294,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 5847,
											"end": 6294,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5847,
											"end": 6294,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5847,
											"end": 6294,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5847,
											"end": 6294,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 5847,
											"end": 6294,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5847,
											"end": 6294,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5847,
											"end": 6294,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 5847,
											"end": 6294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5847,
											"end": 6294,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 5847,
											"end": 6294,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5847,
											"end": 6294,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5847,
											"end": 6294,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5847,
											"end": 6294,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5847,
											"end": 6294,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5847,
											"end": 6294,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5847,
											"end": 6294,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5847,
											"end": 6294,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 470,
											"end": 493,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 470,
											"end": 493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 470,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 470,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 470,
											"end": 493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 470,
											"end": 493,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 470,
											"end": 493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 470,
											"end": 493,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 470,
											"end": 493,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 470,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 470,
											"end": 493,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 470,
											"end": 493,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 470,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 470,
											"end": 493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 470,
											"end": 493,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 470,
											"end": 493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 470,
											"end": 493,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 470,
											"end": 493,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 470,
											"end": 493,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 470,
											"end": 493,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 470,
											"end": 493,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 470,
											"end": 493,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 470,
											"end": 493,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 4621,
											"end": 5335,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4621,
											"end": 5335,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4621,
											"end": 5335,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 4621,
											"end": 5335,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4621,
											"end": 5335,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4621,
											"end": 5335,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4621,
											"end": 5335,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4621,
											"end": 5335,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4621,
											"end": 5335,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4621,
											"end": 5335,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4621,
											"end": 5335,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4621,
											"end": 5335,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4621,
											"end": 5335,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4621,
											"end": 5335,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 4621,
											"end": 5335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4621,
											"end": 5335,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4621,
											"end": 5335,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4621,
											"end": 5335,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 4621,
											"end": 5335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4621,
											"end": 5335,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 4621,
											"end": 5335,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4621,
											"end": 5335,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 6747,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6450,
											"end": 6747,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 6747,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 6450,
											"end": 6747,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6450,
											"end": 6747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 6747,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 6450,
											"end": 6747,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 6747,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6450,
											"end": 6747,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 6747,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 6450,
											"end": 6747,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 6747,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 6747,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 6450,
											"end": 6747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 6747,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 6450,
											"end": 6747,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 6747,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6450,
											"end": 6747,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 6747,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 6747,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 6747,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 6747,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 6747,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 500,
											"end": 523,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 500,
											"end": 523,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 500,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 500,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 500,
											"end": 523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 500,
											"end": 523,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 500,
											"end": 523,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 500,
											"end": 523,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 523,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 500,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 500,
											"end": 523,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 500,
											"end": 523,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 500,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 500,
											"end": 523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 500,
											"end": 523,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 500,
											"end": 523,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 500,
											"end": 523,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 523,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 500,
											"end": 523,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 500,
											"end": 523,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 500,
											"end": 523,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 500,
											"end": 523,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 500,
											"end": 523,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 366,
											"end": 388,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 366,
											"end": 388,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 366,
											"end": 388,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 366,
											"end": 388,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 366,
											"end": 388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 366,
											"end": 388,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 366,
											"end": 388,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 366,
											"end": 388,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 366,
											"end": 388,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 366,
											"end": 388,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 366,
											"end": 388,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 366,
											"end": 388,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 366,
											"end": 388,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 366,
											"end": 388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 366,
											"end": 388,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 366,
											"end": 388,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 366,
											"end": 388,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 366,
											"end": 388,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 366,
											"end": 388,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 366,
											"end": 388,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 366,
											"end": 388,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 366,
											"end": 388,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 366,
											"end": 388,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3051,
											"end": 3625,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 3051,
											"end": 3625,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3051,
											"end": 3625,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 3051,
											"end": 3625,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3051,
											"end": 3625,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3051,
											"end": 3625,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3051,
											"end": 3625,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3051,
											"end": 3625,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3051,
											"end": 3625,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3051,
											"end": 3625,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3051,
											"end": 3625,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 3051,
											"end": 3625,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3051,
											"end": 3625,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3051,
											"end": 3625,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 3051,
											"end": 3625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3051,
											"end": 3625,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 3051,
											"end": 3625,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3051,
											"end": 3625,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 3051,
											"end": 3625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3051,
											"end": 3625,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 3051,
											"end": 3625,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3051,
											"end": 3625,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 9298,
											"end": 9530,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 9298,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9298,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 9298,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 9298,
											"end": 9530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9298,
											"end": 9530,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 9298,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9298,
											"end": 9530,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9298,
											"end": 9530,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9298,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 9298,
											"end": 9530,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9298,
											"end": 9530,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9298,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 9298,
											"end": 9530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9298,
											"end": 9530,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 9298,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9298,
											"end": 9530,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9298,
											"end": 9530,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9298,
											"end": 9530,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9298,
											"end": 9530,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9298,
											"end": 9530,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9298,
											"end": 9530,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9298,
											"end": 9530,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 9734,
											"end": 10031,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 9734,
											"end": 10031,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9734,
											"end": 10031,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 9734,
											"end": 10031,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 9734,
											"end": 10031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9734,
											"end": 10031,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 9734,
											"end": 10031,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9734,
											"end": 10031,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9734,
											"end": 10031,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9734,
											"end": 10031,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 9734,
											"end": 10031,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9734,
											"end": 10031,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9734,
											"end": 10031,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 9734,
											"end": 10031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9734,
											"end": 10031,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 9734,
											"end": 10031,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9734,
											"end": 10031,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9734,
											"end": 10031,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9734,
											"end": 10031,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9734,
											"end": 10031,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9734,
											"end": 10031,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9734,
											"end": 10031,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9734,
											"end": 10031,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 11088,
											"end": 11273,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 11088,
											"end": 11273,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11088,
											"end": 11273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 11088,
											"end": 11273,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11088,
											"end": 11273,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11088,
											"end": 11273,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 11088,
											"end": 11273,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11088,
											"end": 11273,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11088,
											"end": 11273,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11088,
											"end": 11273,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11088,
											"end": 11273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 11088,
											"end": 11273,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11088,
											"end": 11273,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11088,
											"end": 11273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 11088,
											"end": 11273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11088,
											"end": 11273,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 11088,
											"end": 11273,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11088,
											"end": 11273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 11088,
											"end": 11273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11088,
											"end": 11273,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 11088,
											"end": 11273,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11088,
											"end": 11273,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11088,
											"end": 11273,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11088,
											"end": 11273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 11088,
											"end": 11273,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11088,
											"end": 11273,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11088,
											"end": 11273,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11088,
											"end": 11273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 11088,
											"end": 11273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11088,
											"end": 11273,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 11088,
											"end": 11273,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11088,
											"end": 11273,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11088,
											"end": 11273,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11088,
											"end": 11273,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11088,
											"end": 11273,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11088,
											"end": 11273,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11088,
											"end": 11273,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11088,
											"end": 11273,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 7813,
											"end": 9116,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 7813,
											"end": 9116,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7813,
											"end": 9116,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 7813,
											"end": 9116,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7813,
											"end": 9116,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7813,
											"end": 9116,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 7813,
											"end": 9116,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7813,
											"end": 9116,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7813,
											"end": 9116,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7813,
											"end": 9116,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7813,
											"end": 9116,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 7813,
											"end": 9116,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7813,
											"end": 9116,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7813,
											"end": 9116,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 7813,
											"end": 9116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7813,
											"end": 9116,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 7813,
											"end": 9116,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7813,
											"end": 9116,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 7813,
											"end": 9116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7813,
											"end": 9116,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 7813,
											"end": 9116,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7813,
											"end": 9116,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 338,
											"end": 359,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 338,
											"end": 359,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 338,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 338,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 338,
											"end": 359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 338,
											"end": 359,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 338,
											"end": 359,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 338,
											"end": 359,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 338,
											"end": 359,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 338,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 338,
											"end": 359,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 338,
											"end": 359,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 338,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 338,
											"end": 359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 338,
											"end": 359,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 338,
											"end": 359,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 338,
											"end": 359,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 338,
											"end": 359,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 338,
											"end": 359,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 338,
											"end": 359,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 338,
											"end": 359,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 338,
											"end": 359,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 338,
											"end": 359,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7591,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 7032,
											"end": 7591,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7591,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 7032,
											"end": 7591,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7032,
											"end": 7591,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7591,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7591,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7591,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7591,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7591,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7591,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 7032,
											"end": 7591,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7591,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7591,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 7032,
											"end": 7591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7591,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 7032,
											"end": 7591,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7591,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 7032,
											"end": 7591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7591,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 7032,
											"end": 7591,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7591,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7032,
											"end": 7591,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7591,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 7032,
											"end": 7591,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7591,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7591,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 7032,
											"end": 7591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7591,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 7032,
											"end": 7591,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7591,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7032,
											"end": 7591,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7591,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7591,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7591,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7591,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7591,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 5495,
											"end": 5603,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 5495,
											"end": 5603,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5539,
											"end": 5546,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5548,
											"end": 5555,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5576,
											"end": 5584,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 5576,
											"end": 5584,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5586,
											"end": 5594,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5586,
											"end": 5594,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5568,
											"end": 5595,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5568,
											"end": 5595,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5568,
											"end": 5595,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5568,
											"end": 5595,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5495,
											"end": 5603,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5495,
											"end": 5603,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5495,
											"end": 5603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 310,
											"end": 331,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 310,
											"end": 331,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 310,
											"end": 331,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 331,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 310,
											"end": 331,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 310,
											"end": 331,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 310,
											"end": 331,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 310,
											"end": 331,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 310,
											"end": 331,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 310,
											"end": 331,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 310,
											"end": 331,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 310,
											"end": 331,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 310,
											"end": 331,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 310,
											"end": 331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5847,
											"end": 6294,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 5847,
											"end": 6294,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5906,
											"end": 5909,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5944,
											"end": 5950,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5944,
											"end": 5950,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5944,
											"end": 5950,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5944,
											"end": 5950,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5944,
											"end": 5950,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5944,
											"end": 5950,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5944,
											"end": 5950,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 5944,
											"end": 5950,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5944,
											"end": 5950,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5944,
											"end": 5950,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5944,
											"end": 5950,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5930,
											"end": 5950,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5930,
											"end": 5950,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5930,
											"end": 5940,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5930,
											"end": 5950,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5930,
											"end": 5950,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5930,
											"end": 5950,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5930,
											"end": 5974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5930,
											"end": 5974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 5930,
											"end": 5974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5930,
											"end": 5974,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5968,
											"end": 5974,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5968,
											"end": 5974,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5968,
											"end": 5974,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5968,
											"end": 5974,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5968,
											"end": 5974,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5968,
											"end": 5974,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5968,
											"end": 5974,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 5968,
											"end": 5974,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5968,
											"end": 5974,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5968,
											"end": 5974,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5968,
											"end": 5974,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5954,
											"end": 5974,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5954,
											"end": 5974,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5954,
											"end": 5964,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5954,
											"end": 5974,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5954,
											"end": 5974,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5954,
											"end": 5974,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5930,
											"end": 5974,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 5930,
											"end": 5974,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5922,
											"end": 5998,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 5922,
											"end": 5998,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5922,
											"end": 5998,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5922,
											"end": 5998,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5922,
											"end": 5998,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5922,
											"end": 5998,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5922,
											"end": 5998,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5922,
											"end": 5998,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5922,
											"end": 5998,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5922,
											"end": 5998,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 5922,
											"end": 5998,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5922,
											"end": 5998,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 5922,
											"end": 5998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5922,
											"end": 5998,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 5922,
											"end": 5998,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5922,
											"end": 5998,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5922,
											"end": 5998,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5922,
											"end": 5998,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5922,
											"end": 5998,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5922,
											"end": 5998,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5922,
											"end": 5998,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5922,
											"end": 5998,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5922,
											"end": 5998,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 5922,
											"end": 5998,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6011,
											"end": 6020,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6049,
											"end": 6055,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6049,
											"end": 6055,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6049,
											"end": 6055,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6049,
											"end": 6055,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6049,
											"end": 6055,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6049,
											"end": 6055,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6049,
											"end": 6055,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6049,
											"end": 6055,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6049,
											"end": 6055,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6049,
											"end": 6055,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6049,
											"end": 6055,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6035,
											"end": 6055,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6035,
											"end": 6055,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6035,
											"end": 6045,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6035,
											"end": 6055,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6035,
											"end": 6055,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6035,
											"end": 6055,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 6031,
											"end": 6201,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6096,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 6086,
											"end": 6096,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6086,
											"end": 6096,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6096,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6096,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6096,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6086,
											"end": 6096,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6096,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6096,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6096,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6086,
											"end": 6096,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6112,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6086,
											"end": 6112,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6112,
											"name": "PUSH",
											"source": 7,
											"value": "FEAF968C"
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 6086,
											"end": 6114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 6086,
											"end": 6114,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6072,
											"end": 6114,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6072,
											"end": 6114,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6072,
											"end": 6114,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6072,
											"end": 6114,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6072,
											"end": 6114,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6072,
											"end": 6114,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6072,
											"end": 6114,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6072,
											"end": 6114,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6072,
											"end": 6114,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6072,
											"end": 6114,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6072,
											"end": 6114,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6072,
											"end": 6114,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6072,
											"end": 6114,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6072,
											"end": 6114,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6072,
											"end": 6114,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 6031,
											"end": 6201,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6201,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 6031,
											"end": 6201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6171,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 6161,
											"end": 6171,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6161,
											"end": 6171,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6171,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6171,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6171,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6161,
											"end": 6171,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6171,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6171,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6171,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6161,
											"end": 6171,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6187,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6161,
											"end": 6187,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6187,
											"name": "PUSH",
											"source": 7,
											"value": "FEAF968C"
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 6161,
											"end": 6189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 6161,
											"end": 6189,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6147,
											"end": 6189,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6147,
											"end": 6189,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6147,
											"end": 6189,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6147,
											"end": 6189,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6147,
											"end": 6189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6147,
											"end": 6189,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6147,
											"end": 6189,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6147,
											"end": 6189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6147,
											"end": 6189,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6147,
											"end": 6189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6147,
											"end": 6189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6147,
											"end": 6189,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6147,
											"end": 6189,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6147,
											"end": 6189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6147,
											"end": 6189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6201,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 6031,
											"end": 6201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6226,
											"end": 6232,
											"name": "PUSH",
											"source": 7,
											"value": "2540BE400"
										},
										{
											"begin": 6218,
											"end": 6223,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6218,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 6218,
											"end": 6232,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6218,
											"end": 6232,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6218,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 6218,
											"end": 6232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6218,
											"end": 6232,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 6218,
											"end": 6232,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6211,
											"end": 6232,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6211,
											"end": 6232,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6211,
											"end": 6232,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5847,
											"end": 6294,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5847,
											"end": 6294,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5847,
											"end": 6294,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5847,
											"end": 6294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 470,
											"end": 493,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 470,
											"end": 493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 470,
											"end": 493,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 470,
											"end": 493,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 470,
											"end": 493,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 470,
											"end": 493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4621,
											"end": 5335,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 4621,
											"end": 5335,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4755,
											"end": 4769,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4780,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 4789,
											"end": 4795,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4789,
											"end": 4795,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4789,
											"end": 4795,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4789,
											"end": 4795,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4789,
											"end": 4795,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4789,
											"end": 4795,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4789,
											"end": 4795,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4789,
											"end": 4795,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4789,
											"end": 4795,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4789,
											"end": 4795,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4780,
											"end": 4788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 4780,
											"end": 4796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4780,
											"end": 4796,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 4780,
											"end": 4796,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4755,
											"end": 4797,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4755,
											"end": 4797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4808,
											"end": 4822,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4833,
											"end": 4849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 4842,
											"end": 4848,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4842,
											"end": 4848,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4842,
											"end": 4848,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4842,
											"end": 4848,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4842,
											"end": 4848,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4842,
											"end": 4848,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4842,
											"end": 4848,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4842,
											"end": 4848,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4842,
											"end": 4848,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4842,
											"end": 4848,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4842,
											"end": 4848,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4833,
											"end": 4841,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 4833,
											"end": 4849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4833,
											"end": 4849,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 4833,
											"end": 4849,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4808,
											"end": 4850,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4808,
											"end": 4850,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4958,
											"end": 4973,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5004,
											"end": 5010,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5000,
											"end": 5001,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5000,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 5000,
											"end": 5010,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5000,
											"end": 5010,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5000,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 5000,
											"end": 5010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5000,
											"end": 5010,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 5000,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 4995,
											"name": "PUSH",
											"source": 7,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4977,
											"end": 4986,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4977,
											"end": 4995,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4977,
											"end": 4995,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4977,
											"end": 4995,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4977,
											"end": 4995,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 4977,
											"end": 4995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4977,
											"end": 4995,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4977,
											"end": 4995,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4976,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 4976,
											"end": 5011,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4976,
											"end": 5011,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4976,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 4976,
											"end": 5011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4976,
											"end": 5011,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 4976,
											"end": 5011,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4958,
											"end": 5011,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4958,
											"end": 5011,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5022,
											"end": 5037,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5068,
											"end": 5074,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5064,
											"end": 5065,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5064,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 5064,
											"end": 5074,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5064,
											"end": 5074,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5064,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 5064,
											"end": 5074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5064,
											"end": 5074,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 5064,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5053,
											"end": 5059,
											"name": "PUSH",
											"source": 7,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5041,
											"end": 5050,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 5041,
											"end": 5059,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5059,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 5041,
											"end": 5059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5059,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 5041,
											"end": 5059,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5040,
											"end": 5075,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 5040,
											"end": 5075,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5040,
											"end": 5075,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5040,
											"end": 5075,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 5040,
											"end": 5075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5040,
											"end": 5075,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 5040,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5022,
											"end": 5075,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5022,
											"end": 5075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5134,
											"end": 5151,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5154,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 5192,
											"end": 5200,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 5192,
											"end": 5200,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5175,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5168,
											"end": 5175,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5168,
											"end": 5175,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5175,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5175,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5175,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5168,
											"end": 5175,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5175,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5175,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5175,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5168,
											"end": 5175,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5187,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5168,
											"end": 5187,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5187,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 5168,
											"end": 5189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5158,
											"end": 5165,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5158,
											"end": 5189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 5158,
											"end": 5189,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5158,
											"end": 5189,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5158,
											"end": 5189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 5158,
											"end": 5189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5158,
											"end": 5189,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 5158,
											"end": 5189,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5158,
											"end": 5200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 5158,
											"end": 5200,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5158,
											"end": 5200,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5158,
											"end": 5200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 5158,
											"end": 5200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5158,
											"end": 5200,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 5158,
											"end": 5200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5236,
											"end": 5244,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5236,
											"end": 5244,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5219,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5212,
											"end": 5219,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5212,
											"end": 5219,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5219,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5219,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5219,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5212,
											"end": 5219,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5219,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5219,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5219,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5212,
											"end": 5219,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5231,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5212,
											"end": 5231,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5231,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 5212,
											"end": 5233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5202,
											"end": 5209,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5202,
											"end": 5233,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 5202,
											"end": 5233,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5202,
											"end": 5233,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5202,
											"end": 5233,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 5202,
											"end": 5233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5202,
											"end": 5233,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 5202,
											"end": 5233,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5202,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 5202,
											"end": 5244,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5202,
											"end": 5244,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5202,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 5202,
											"end": 5244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5202,
											"end": 5244,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 5202,
											"end": 5244,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5154,
											"end": 5157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 5154,
											"end": 5245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5154,
											"end": 5245,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 5154,
											"end": 5245,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5134,
											"end": 5245,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5134,
											"end": 5245,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5301,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 5317,
											"end": 5326,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5301,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 5301,
											"end": 5327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5301,
											"end": 5327,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 5301,
											"end": 5327,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4679,
											"end": 5335,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4679,
											"end": 5335,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4679,
											"end": 5335,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4679,
											"end": 5335,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4679,
											"end": 5335,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4621,
											"end": 5335,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4621,
											"end": 5335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 6747,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6450,
											"end": 6747,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6496,
											"end": 6499,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6514,
											"end": 6524,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6541,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 6531,
											"end": 6541,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6531,
											"end": 6541,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6541,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6541,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6541,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6531,
											"end": 6541,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6541,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6541,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6541,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6531,
											"end": 6541,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6557,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6531,
											"end": 6557,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6557,
											"name": "PUSH",
											"source": 7,
											"value": "FEAF968C"
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 6531,
											"end": 6559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 6531,
											"end": 6559,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6512,
											"end": 6559,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6512,
											"end": 6559,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6512,
											"end": 6559,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6512,
											"end": 6559,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6512,
											"end": 6559,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6512,
											"end": 6559,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6572,
											"end": 6582,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6589,
											"end": 6599,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 6589,
											"end": 6599,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6589,
											"end": 6599,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6599,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6599,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6599,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6589,
											"end": 6599,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6599,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6599,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6599,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6589,
											"end": 6599,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6615,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6589,
											"end": 6615,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6615,
											"name": "PUSH",
											"source": 7,
											"value": "FEAF968C"
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 6589,
											"end": 6617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6570,
											"end": 6617,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6570,
											"end": 6617,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6570,
											"end": 6617,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6570,
											"end": 6617,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6570,
											"end": 6617,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6570,
											"end": 6617,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6677,
											"end": 6683,
											"name": "PUSH",
											"source": 7,
											"value": "2540BE400"
										},
										{
											"begin": 6668,
											"end": 6674,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6668,
											"end": 6683,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 6668,
											"end": 6683,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6668,
											"end": 6683,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6668,
											"end": 6683,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 6668,
											"end": 6683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6668,
											"end": 6683,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 6668,
											"end": 6683,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6656,
											"end": 6663,
											"name": "PUSH",
											"source": 7,
											"value": "5F5E100"
										},
										{
											"begin": 6645,
											"end": 6651,
											"name": "PUSH",
											"source": 7,
											"value": "2540BE400"
										},
										{
											"begin": 6636,
											"end": 6642,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6636,
											"end": 6651,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 6636,
											"end": 6651,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6636,
											"end": 6651,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6636,
											"end": 6651,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 6636,
											"end": 6651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6636,
											"end": 6651,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 6636,
											"end": 6651,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 6635,
											"end": 6664,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6664,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 6635,
											"end": 6664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6664,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 6635,
											"end": 6664,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 6635,
											"end": 6684,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6684,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 6635,
											"end": 6684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6684,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 6635,
											"end": 6684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6628,
											"end": 6684,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6628,
											"end": 6684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6628,
											"end": 6684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6628,
											"end": 6684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 6747,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 6747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 500,
											"end": 523,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 500,
											"end": 523,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 500,
											"end": 523,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 500,
											"end": 523,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 500,
											"end": 523,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 500,
											"end": 523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 366,
											"end": 388,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 366,
											"end": 388,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 366,
											"end": 388,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 366,
											"end": 388,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 366,
											"end": 388,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 366,
											"end": 388,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 366,
											"end": 388,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 366,
											"end": 388,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 366,
											"end": 388,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 366,
											"end": 388,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 366,
											"end": 388,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 366,
											"end": 388,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 366,
											"end": 388,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 366,
											"end": 388,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 366,
											"end": 388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3051,
											"end": 3625,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 3051,
											"end": 3625,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3182,
											"end": 3196,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3207,
											"end": 3223,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 3216,
											"end": 3222,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3216,
											"end": 3222,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3216,
											"end": 3222,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3216,
											"end": 3222,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3216,
											"end": 3222,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3216,
											"end": 3222,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3216,
											"end": 3222,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3216,
											"end": 3222,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3216,
											"end": 3222,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3216,
											"end": 3222,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3207,
											"end": 3215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 3207,
											"end": 3223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3207,
											"end": 3223,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 3207,
											"end": 3223,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3182,
											"end": 3224,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3182,
											"end": 3224,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3235,
											"end": 3249,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3260,
											"end": 3276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 3269,
											"end": 3275,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3269,
											"end": 3275,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3269,
											"end": 3275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3269,
											"end": 3275,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3269,
											"end": 3275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3269,
											"end": 3275,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3269,
											"end": 3275,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3269,
											"end": 3275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3269,
											"end": 3275,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3269,
											"end": 3275,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3269,
											"end": 3275,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3260,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 3260,
											"end": 3276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3260,
											"end": 3276,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 3260,
											"end": 3276,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3235,
											"end": 3277,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3235,
											"end": 3277,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3400,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3431,
											"end": 3437,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3427,
											"end": 3428,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3427,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 3427,
											"end": 3437,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3427,
											"end": 3437,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3427,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 3427,
											"end": 3437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3427,
											"end": 3437,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 3427,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3416,
											"end": 3422,
											"name": "PUSH",
											"source": 7,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3404,
											"end": 3413,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3404,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 3404,
											"end": 3422,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3404,
											"end": 3422,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3404,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 3404,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3404,
											"end": 3422,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 3404,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3403,
											"end": 3438,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 3403,
											"end": 3438,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3403,
											"end": 3438,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3403,
											"end": 3438,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 3403,
											"end": 3438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3403,
											"end": 3438,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 3403,
											"end": 3438,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3438,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3438,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3449,
											"end": 3464,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3495,
											"end": 3501,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3491,
											"end": 3492,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3491,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 3491,
											"end": 3501,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3491,
											"end": 3501,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3491,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 3491,
											"end": 3501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3491,
											"end": 3501,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 3491,
											"end": 3501,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3480,
											"end": 3486,
											"name": "PUSH",
											"source": 7,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3468,
											"end": 3477,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3468,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 3468,
											"end": 3486,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3468,
											"end": 3486,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3468,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 3468,
											"end": 3486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3468,
											"end": 3486,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 3468,
											"end": 3486,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3467,
											"end": 3502,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 3467,
											"end": 3502,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3467,
											"end": 3502,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3467,
											"end": 3502,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 3467,
											"end": 3502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3467,
											"end": 3502,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 3467,
											"end": 3502,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3449,
											"end": 3502,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3449,
											"end": 3502,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3587,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 3600,
											"end": 3607,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3609,
											"end": 3616,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3587,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 3587,
											"end": 3617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3587,
											"end": 3617,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 3587,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3106,
											"end": 3625,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3106,
											"end": 3625,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3106,
											"end": 3625,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3106,
											"end": 3625,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3051,
											"end": 3625,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3051,
											"end": 3625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9298,
											"end": 9530,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 9298,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9355,
											"end": 9362,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9394,
											"end": 9395,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9383,
											"end": 9391,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 9383,
											"end": 9391,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9383,
											"end": 9395,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9383,
											"end": 9411,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9383,
											"end": 9411,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9383,
											"end": 9411,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 9383,
											"end": 9411,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9383,
											"end": 9411,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9410,
											"end": 9411,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9399,
											"end": 9407,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9399,
											"end": 9407,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9399,
											"end": 9411,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9383,
											"end": 9411,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 9383,
											"end": 9411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9375,
											"end": 9436,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 9375,
											"end": 9436,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9375,
											"end": 9436,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9375,
											"end": 9436,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9375,
											"end": 9436,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9375,
											"end": 9436,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9375,
											"end": 9436,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9375,
											"end": 9436,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9375,
											"end": 9436,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9375,
											"end": 9436,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 9375,
											"end": 9436,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9375,
											"end": 9436,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 9375,
											"end": 9436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9375,
											"end": 9436,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 9375,
											"end": 9436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9375,
											"end": 9436,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9375,
											"end": 9436,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9375,
											"end": 9436,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9375,
											"end": 9436,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9375,
											"end": 9436,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9375,
											"end": 9436,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9375,
											"end": 9436,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9375,
											"end": 9436,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 9375,
											"end": 9436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9476,
											"end": 9484,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 9476,
											"end": 9484,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9466,
											"end": 9472,
											"name": "PUSH",
											"source": 7,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 9455,
											"end": 9463,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9455,
											"end": 9463,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9455,
											"end": 9472,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 9455,
											"end": 9472,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9455,
											"end": 9472,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9455,
											"end": 9472,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 9455,
											"end": 9472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9455,
											"end": 9472,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 9455,
											"end": 9472,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9454,
											"end": 9484,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 9454,
											"end": 9484,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9454,
											"end": 9484,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9454,
											"end": 9484,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 9454,
											"end": 9484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9454,
											"end": 9484,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 9454,
											"end": 9484,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9447,
											"end": 9484,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9447,
											"end": 9484,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9298,
											"end": 9530,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9298,
											"end": 9530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9734,
											"end": 10031,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 9734,
											"end": 10031,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9791,
											"end": 9798,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9823,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9840,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 9830,
											"end": 9840,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9830,
											"end": 9840,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9840,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9840,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9840,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 9830,
											"end": 9840,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9840,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9840,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9840,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9830,
											"end": 9840,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9856,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9830,
											"end": 9856,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9856,
											"name": "PUSH",
											"source": 7,
											"value": "FEAF968C"
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 9830,
											"end": 9858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9811,
											"end": 9858,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9811,
											"end": 9858,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9811,
											"end": 9858,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9811,
											"end": 9858,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9811,
											"end": 9858,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9811,
											"end": 9858,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9871,
											"end": 9881,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9888,
											"end": 9898,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 9888,
											"end": 9898,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9888,
											"end": 9898,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9898,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9898,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9898,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 9888,
											"end": 9898,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9898,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9898,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9898,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9888,
											"end": 9898,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9914,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9888,
											"end": 9914,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9914,
											"name": "PUSH",
											"source": 7,
											"value": "FEAF968C"
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 9888,
											"end": 9916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 9888,
											"end": 9916,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9869,
											"end": 9916,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9869,
											"end": 9916,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9869,
											"end": 9916,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9869,
											"end": 9916,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9869,
											"end": 9916,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9869,
											"end": 9916,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9971,
											"end": 9977,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9953,
											"end": 9959,
											"name": "PUSH",
											"source": 7,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 9943,
											"end": 9949,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9935,
											"end": 9959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 9935,
											"end": 9959,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9935,
											"end": 9959,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9935,
											"end": 9959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 9935,
											"end": 9959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9935,
											"end": 9959,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 9935,
											"end": 9959,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9934,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 9934,
											"end": 9978,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9934,
											"end": 9978,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9934,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 9934,
											"end": 9978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9934,
											"end": 9978,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 9934,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9927,
											"end": 9978,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9927,
											"end": 9978,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9927,
											"end": 9978,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9927,
											"end": 9978,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9734,
											"end": 10031,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9734,
											"end": 10031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11088,
											"end": 11273,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 11088,
											"end": 11273,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11150,
											"end": 11157,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11159,
											"end": 11166,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11179,
											"end": 11194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11197,
											"end": 11204,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 11197,
											"end": 11204,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11197,
											"end": 11204,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11204,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11204,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11204,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 11197,
											"end": 11204,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11204,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11204,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11204,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11197,
											"end": 11204,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11214,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11197,
											"end": 11214,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11214,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 11215,
											"end": 11219,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 11197,
											"end": 11220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 11197,
											"end": 11220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11179,
											"end": 11220,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11179,
											"end": 11220,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11247,
											"end": 11254,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 11247,
											"end": 11254,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11247,
											"end": 11254,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11247,
											"end": 11254,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11247,
											"end": 11254,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11247,
											"end": 11254,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 11247,
											"end": 11254,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 11247,
											"end": 11254,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11247,
											"end": 11254,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 11247,
											"end": 11254,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11247,
											"end": 11254,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11257,
											"end": 11264,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11231,
											"end": 11265,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11231,
											"end": 11265,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11231,
											"end": 11265,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11231,
											"end": 11265,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11231,
											"end": 11265,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11088,
											"end": 11273,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11088,
											"end": 11273,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11088,
											"end": 11273,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11088,
											"end": 11273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7813,
											"end": 9116,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 7813,
											"end": 9116,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7913,
											"end": 7919,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7913,
											"end": 7919,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7913,
											"end": 7919,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7913,
											"end": 7919,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7913,
											"end": 7919,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 7913,
											"end": 7919,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 7913,
											"end": 7919,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7913,
											"end": 7919,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7913,
											"end": 7919,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7913,
											"end": 7919,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7899,
											"end": 7919,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7899,
											"end": 7919,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7899,
											"end": 7909,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7899,
											"end": 7919,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7899,
											"end": 7919,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7899,
											"end": 7919,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7899,
											"end": 7943,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7899,
											"end": 7943,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 7899,
											"end": 7943,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7899,
											"end": 7943,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7937,
											"end": 7943,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7937,
											"end": 7943,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7937,
											"end": 7943,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7937,
											"end": 7943,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7937,
											"end": 7943,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7937,
											"end": 7943,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 7937,
											"end": 7943,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 7937,
											"end": 7943,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7937,
											"end": 7943,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7937,
											"end": 7943,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7937,
											"end": 7943,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7923,
											"end": 7943,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7923,
											"end": 7943,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7923,
											"end": 7933,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7923,
											"end": 7943,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7923,
											"end": 7943,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7923,
											"end": 7943,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7899,
											"end": 7943,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 7899,
											"end": 7943,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7891,
											"end": 7967,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 7891,
											"end": 7967,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7891,
											"end": 7967,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7891,
											"end": 7967,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7891,
											"end": 7967,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7891,
											"end": 7967,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7891,
											"end": 7967,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7891,
											"end": 7967,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7891,
											"end": 7967,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7891,
											"end": 7967,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 7891,
											"end": 7967,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7891,
											"end": 7967,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 7891,
											"end": 7967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7891,
											"end": 7967,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 7891,
											"end": 7967,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7891,
											"end": 7967,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7891,
											"end": 7967,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7891,
											"end": 7967,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7891,
											"end": 7967,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7891,
											"end": 7967,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7891,
											"end": 7967,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7891,
											"end": 7967,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7891,
											"end": 7967,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 7891,
											"end": 7967,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8045,
											"end": 8059,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8070,
											"end": 8086,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 8079,
											"end": 8085,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8079,
											"end": 8085,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8079,
											"end": 8085,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8079,
											"end": 8085,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8079,
											"end": 8085,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 8079,
											"end": 8085,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 8079,
											"end": 8085,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8079,
											"end": 8085,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 8079,
											"end": 8085,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8079,
											"end": 8085,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8070,
											"end": 8078,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 8070,
											"end": 8086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8070,
											"end": 8086,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 8070,
											"end": 8086,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8045,
											"end": 8087,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8045,
											"end": 8087,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8112,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8123,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 8132,
											"end": 8138,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8132,
											"end": 8138,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8132,
											"end": 8138,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8132,
											"end": 8138,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8132,
											"end": 8138,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8132,
											"end": 8138,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 8132,
											"end": 8138,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 8132,
											"end": 8138,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8132,
											"end": 8138,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 8132,
											"end": 8138,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8132,
											"end": 8138,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8131,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 8123,
											"end": 8139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8139,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 8123,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8140,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8140,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8153,
											"end": 8171,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8189,
											"end": 8195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8189,
											"end": 8195,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8189,
											"end": 8195,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8189,
											"end": 8195,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8189,
											"end": 8195,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8189,
											"end": 8195,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 8189,
											"end": 8195,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 8189,
											"end": 8195,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8189,
											"end": 8195,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 8189,
											"end": 8195,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8189,
											"end": 8195,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8175,
											"end": 8195,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8175,
											"end": 8195,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8175,
											"end": 8185,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8175,
											"end": 8195,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8175,
											"end": 8195,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8175,
											"end": 8195,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8153,
											"end": 8196,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8153,
											"end": 8196,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8207,
											"end": 8226,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8229,
											"end": 8242,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8229,
											"end": 8260,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 8229,
											"end": 8260,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8260,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8254,
											"end": 8260,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8260,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8260,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8260,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 8254,
											"end": 8260,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8260,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8260,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8260,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8254,
											"end": 8260,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8229,
											"end": 8260,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 8229,
											"end": 8260,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8229,
											"end": 8260,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 8229,
											"end": 8260,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8245,
											"end": 8251,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8245,
											"end": 8251,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8245,
											"end": 8251,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8245,
											"end": 8251,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8245,
											"end": 8251,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8245,
											"end": 8251,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 8245,
											"end": 8251,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 8245,
											"end": 8251,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8245,
											"end": 8251,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 8245,
											"end": 8251,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8245,
											"end": 8251,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8229,
											"end": 8260,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 8229,
											"end": 8260,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8207,
											"end": 8260,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8207,
											"end": 8260,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8271,
											"end": 8289,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8292,
											"end": 8305,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8292,
											"end": 8323,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 8292,
											"end": 8323,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8317,
											"end": 8323,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8292,
											"end": 8323,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 8292,
											"end": 8323,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8292,
											"end": 8323,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 8292,
											"end": 8323,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8308,
											"end": 8314,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8292,
											"end": 8323,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 8292,
											"end": 8323,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8271,
											"end": 8323,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8271,
											"end": 8323,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8408,
											"end": 8424,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8450,
											"end": 8460,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8440,
											"end": 8446,
											"name": "PUSH",
											"source": 7,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 8428,
											"end": 8437,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 8428,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 8428,
											"end": 8446,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8428,
											"end": 8446,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8428,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 8428,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8428,
											"end": 8446,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 8428,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8427,
											"end": 8460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 8427,
											"end": 8460,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8427,
											"end": 8460,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8427,
											"end": 8460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 8427,
											"end": 8460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8427,
											"end": 8460,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 8427,
											"end": 8460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8408,
											"end": 8460,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8408,
											"end": 8460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8545,
											"end": 8562,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8565,
											"end": 8599,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 8578,
											"end": 8586,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8588,
											"end": 8598,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 8565,
											"end": 8577,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 8565,
											"end": 8599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8565,
											"end": 8599,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 8565,
											"end": 8599,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8545,
											"end": 8599,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8545,
											"end": 8599,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8683,
											"end": 8693,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8707,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8676,
											"end": 8707,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8707,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 8708,
											"end": 8718,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 8728,
											"end": 8732,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 8735,
											"end": 8743,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 8676,
											"end": 8744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 8676,
											"end": 8744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8744,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8840,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8850,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8822,
											"end": 8850,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8850,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 8851,
											"end": 8861,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 8863,
											"end": 8872,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 8822,
											"end": 8873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 8822,
											"end": 8873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8873,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8922,
											"end": 8935,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8918,
											"end": 9109,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8918,
											"end": 9109,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 8918,
											"end": 9109,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8964,
											"end": 8972,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8952,
											"end": 8960,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 8952,
											"end": 8960,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8952,
											"end": 8972,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8952,
											"end": 8972,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8952,
											"end": 8972,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8952,
											"end": 8972,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 8952,
											"end": 8972,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8952,
											"end": 8972,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8952,
											"end": 8972,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 8952,
											"end": 8972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8952,
											"end": 8972,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 8952,
											"end": 8972,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8952,
											"end": 8972,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8952,
											"end": 8972,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8952,
											"end": 8972,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8952,
											"end": 8972,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8952,
											"end": 8972,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8952,
											"end": 8972,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 8952,
											"end": 8972,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8999,
											"end": 9008,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8987,
											"end": 8995,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8987,
											"end": 8995,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8987,
											"end": 9008,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8987,
											"end": 9008,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8987,
											"end": 9008,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8987,
											"end": 9008,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 8987,
											"end": 9008,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8987,
											"end": 9008,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8987,
											"end": 9008,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 8987,
											"end": 9008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8987,
											"end": 9008,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 8987,
											"end": 9008,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8987,
											"end": 9008,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8987,
											"end": 9008,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8987,
											"end": 9008,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8987,
											"end": 9008,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8987,
											"end": 9008,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8987,
											"end": 9008,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 8987,
											"end": 9008,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8918,
											"end": 9109,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 8918,
											"end": 9109,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8918,
											"end": 9109,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 8918,
											"end": 9109,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9053,
											"end": 9061,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9041,
											"end": 9049,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9041,
											"end": 9049,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9041,
											"end": 9061,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9041,
											"end": 9061,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9041,
											"end": 9061,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9041,
											"end": 9061,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 9041,
											"end": 9061,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9041,
											"end": 9061,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9041,
											"end": 9061,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 9041,
											"end": 9061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9041,
											"end": 9061,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 9041,
											"end": 9061,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9041,
											"end": 9061,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9041,
											"end": 9061,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9041,
											"end": 9061,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9041,
											"end": 9061,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9041,
											"end": 9061,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9041,
											"end": 9061,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 9041,
											"end": 9061,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9088,
											"end": 9097,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9076,
											"end": 9084,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 9076,
											"end": 9084,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9076,
											"end": 9097,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9076,
											"end": 9097,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9076,
											"end": 9097,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9076,
											"end": 9097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 9076,
											"end": 9097,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9076,
											"end": 9097,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9076,
											"end": 9097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 9076,
											"end": 9097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9076,
											"end": 9097,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 9076,
											"end": 9097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9076,
											"end": 9097,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9076,
											"end": 9097,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9076,
											"end": 9097,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9076,
											"end": 9097,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9076,
											"end": 9097,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9076,
											"end": 9097,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 9076,
											"end": 9097,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8918,
											"end": 9109,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 8918,
											"end": 9109,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7880,
											"end": 9116,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7880,
											"end": 9116,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7880,
											"end": 9116,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7880,
											"end": 9116,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7880,
											"end": 9116,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7880,
											"end": 9116,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7880,
											"end": 9116,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7813,
											"end": 9116,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7813,
											"end": 9116,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7813,
											"end": 9116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 338,
											"end": 359,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 338,
											"end": 359,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 338,
											"end": 359,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 338,
											"end": 359,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 338,
											"end": 359,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 338,
											"end": 359,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 338,
											"end": 359,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 338,
											"end": 359,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 338,
											"end": 359,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 338,
											"end": 359,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 338,
											"end": 359,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 338,
											"end": 359,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 338,
											"end": 359,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 338,
											"end": 359,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 338,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7591,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 7032,
											"end": 7591,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7113,
											"end": 7130,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7165,
											"end": 7171,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7165,
											"end": 7171,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7165,
											"end": 7171,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7165,
											"end": 7171,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7165,
											"end": 7171,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7165,
											"end": 7171,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 7165,
											"end": 7171,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 7165,
											"end": 7171,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7165,
											"end": 7171,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7165,
											"end": 7171,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7165,
											"end": 7171,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7151,
											"end": 7171,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7151,
											"end": 7171,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7151,
											"end": 7161,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7151,
											"end": 7171,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7151,
											"end": 7171,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7151,
											"end": 7171,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7151,
											"end": 7195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7151,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 7151,
											"end": 7195,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7151,
											"end": 7195,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7189,
											"end": 7195,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7189,
											"end": 7195,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7189,
											"end": 7195,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7189,
											"end": 7195,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7189,
											"end": 7195,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7189,
											"end": 7195,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 7189,
											"end": 7195,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 7189,
											"end": 7195,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7189,
											"end": 7195,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7189,
											"end": 7195,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7189,
											"end": 7195,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7175,
											"end": 7195,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7175,
											"end": 7195,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7175,
											"end": 7185,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7175,
											"end": 7195,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7175,
											"end": 7195,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7175,
											"end": 7195,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7151,
											"end": 7195,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 7151,
											"end": 7195,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7143,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 7143,
											"end": 7219,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7143,
											"end": 7219,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7143,
											"end": 7219,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7143,
											"end": 7219,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7143,
											"end": 7219,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7143,
											"end": 7219,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7143,
											"end": 7219,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7143,
											"end": 7219,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7143,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 7143,
											"end": 7219,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7143,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 7143,
											"end": 7219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7143,
											"end": 7219,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 7143,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7143,
											"end": 7219,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7143,
											"end": 7219,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7143,
											"end": 7219,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7143,
											"end": 7219,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7143,
											"end": 7219,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7143,
											"end": 7219,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7143,
											"end": 7219,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7143,
											"end": 7219,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 7143,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7230,
											"end": 7248,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7266,
											"end": 7272,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7266,
											"end": 7272,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7266,
											"end": 7272,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7266,
											"end": 7272,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7266,
											"end": 7272,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7266,
											"end": 7272,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 7266,
											"end": 7272,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 7266,
											"end": 7272,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7266,
											"end": 7272,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7266,
											"end": 7272,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7266,
											"end": 7272,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7252,
											"end": 7272,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7272,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7252,
											"end": 7262,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7252,
											"end": 7272,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7272,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7252,
											"end": 7272,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7230,
											"end": 7273,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7230,
											"end": 7273,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7284,
											"end": 7304,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7307,
											"end": 7320,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7307,
											"end": 7342,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 7307,
											"end": 7342,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7334,
											"end": 7342,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7334,
											"end": 7342,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7307,
											"end": 7342,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 7307,
											"end": 7342,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7307,
											"end": 7342,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 7307,
											"end": 7342,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7323,
											"end": 7331,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 7323,
											"end": 7331,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7307,
											"end": 7342,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 7307,
											"end": 7342,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7284,
											"end": 7342,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7284,
											"end": 7342,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7353,
											"end": 7374,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7377,
											"end": 7390,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7377,
											"end": 7412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 7377,
											"end": 7412,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7404,
											"end": 7412,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 7404,
											"end": 7412,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7377,
											"end": 7412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 7377,
											"end": 7412,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7377,
											"end": 7412,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 7377,
											"end": 7412,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7393,
											"end": 7401,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7393,
											"end": 7401,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7377,
											"end": 7412,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 7377,
											"end": 7412,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7353,
											"end": 7412,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7353,
											"end": 7412,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7423,
											"end": 7446,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7466,
											"end": 7470,
											"name": "PUSH",
											"source": 7,
											"value": "3E8"
										},
										{
											"begin": 7460,
											"end": 7463,
											"name": "PUSH",
											"source": 7,
											"value": "3E5"
										},
										{
											"begin": 7449,
											"end": 7457,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 7449,
											"end": 7463,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 7449,
											"end": 7463,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7449,
											"end": 7463,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7449,
											"end": 7463,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 7449,
											"end": 7463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7449,
											"end": 7463,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 7449,
											"end": 7463,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7449,
											"end": 7470,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 7449,
											"end": 7470,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7449,
											"end": 7470,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7449,
											"end": 7470,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 7449,
											"end": 7470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7449,
											"end": 7470,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 7449,
											"end": 7470,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7423,
											"end": 7470,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7423,
											"end": 7470,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7567,
											"end": 7582,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7552,
											"end": 7564,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7552,
											"end": 7582,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 7552,
											"end": 7582,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7552,
											"end": 7582,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7552,
											"end": 7582,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 7552,
											"end": 7582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7552,
											"end": 7582,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 7552,
											"end": 7582,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7535,
											"end": 7548,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7517,
											"end": 7532,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7517,
											"end": 7548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 7517,
											"end": 7548,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7517,
											"end": 7548,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7517,
											"end": 7548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 7517,
											"end": 7548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7517,
											"end": 7548,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 7517,
											"end": 7548,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7517,
											"end": 7583,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 7517,
											"end": 7583,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7517,
											"end": 7583,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7517,
											"end": 7583,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 7517,
											"end": 7583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7517,
											"end": 7583,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 7517,
											"end": 7583,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7505,
											"end": 7583,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 7505,
											"end": 7583,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7132,
											"end": 7591,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7132,
											"end": 7591,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7132,
											"end": 7591,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7132,
											"end": 7591,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7591,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7591,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7591,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7591,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10745,
											"end": 10841,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 10745,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10797,
											"end": 10803,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10824,
											"end": 10825,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10820,
											"end": 10821,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10820,
											"end": 10825,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 10820,
											"end": 10833,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 10820,
											"end": 10833,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10832,
											"end": 10833,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10820,
											"end": 10833,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 10820,
											"end": 10833,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10820,
											"end": 10833,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 10820,
											"end": 10833,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10828,
											"end": 10829,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10820,
											"end": 10833,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 10820,
											"end": 10833,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10816,
											"end": 10833,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10816,
											"end": 10833,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10745,
											"end": 10841,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10745,
											"end": 10841,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10745,
											"end": 10841,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10745,
											"end": 10841,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10745,
											"end": 10841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3769,
											"end": 4436,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 3769,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3853,
											"end": 3854,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3841,
											"end": 3850,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3841,
											"end": 3854,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 3833,
											"end": 3881,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3881,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3833,
											"end": 3881,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3881,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3833,
											"end": 3881,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3881,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3881,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3833,
											"end": 3881,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 3833,
											"end": 3881,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 3833,
											"end": 3881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3881,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 3833,
											"end": 3881,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3881,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3833,
											"end": 3881,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3881,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3881,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3881,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3881,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3881,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3881,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 3833,
											"end": 3881,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3909,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3935,
											"end": 3942,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3935,
											"end": 3942,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3935,
											"end": 3942,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3942,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3942,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3942,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3935,
											"end": 3942,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3942,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3942,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3942,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3935,
											"end": 3942,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3954,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3935,
											"end": 3954,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3954,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 3935,
											"end": 3956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3924,
											"end": 3932,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3924,
											"end": 3932,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3912,
											"end": 3921,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3912,
											"end": 3932,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 3912,
											"end": 3932,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3912,
											"end": 3932,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3912,
											"end": 3932,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 3912,
											"end": 3932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3912,
											"end": 3932,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 3912,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3912,
											"end": 3956,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 3912,
											"end": 3956,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3912,
											"end": 3956,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3912,
											"end": 3956,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 3912,
											"end": 3956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3912,
											"end": 3956,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 3912,
											"end": 3956,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3956,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3956,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3967,
											"end": 3982,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4008,
											"end": 4015,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4008,
											"end": 4015,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4008,
											"end": 4015,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4015,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4015,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4015,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4008,
											"end": 4015,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4015,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4015,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4015,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4008,
											"end": 4015,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4027,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4008,
											"end": 4027,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4027,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 4008,
											"end": 4029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3997,
											"end": 4005,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3997,
											"end": 4005,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3985,
											"end": 3994,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3985,
											"end": 4005,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 3985,
											"end": 4005,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3985,
											"end": 4005,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3985,
											"end": 4005,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 3985,
											"end": 4005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3985,
											"end": 4005,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 3985,
											"end": 4005,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3985,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 3985,
											"end": 4029,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3985,
											"end": 4029,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3985,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 3985,
											"end": 4029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3985,
											"end": 4029,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 3985,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3967,
											"end": 4029,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3967,
											"end": 4029,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4060,
											"end": 4061,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4050,
											"end": 4057,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4050,
											"end": 4061,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4050,
											"end": 4076,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4050,
											"end": 4076,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4050,
											"end": 4076,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 4050,
											"end": 4076,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4050,
											"end": 4076,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4075,
											"end": 4076,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4072,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4076,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4050,
											"end": 4076,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 4050,
											"end": 4076,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4042,
											"end": 4111,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 4042,
											"end": 4111,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4042,
											"end": 4111,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4042,
											"end": 4111,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4042,
											"end": 4111,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4042,
											"end": 4111,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4042,
											"end": 4111,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4042,
											"end": 4111,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4042,
											"end": 4111,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4042,
											"end": 4111,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 4042,
											"end": 4111,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4042,
											"end": 4111,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 4042,
											"end": 4111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4042,
											"end": 4111,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 4042,
											"end": 4111,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4042,
											"end": 4111,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4042,
											"end": 4111,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4042,
											"end": 4111,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4042,
											"end": 4111,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4042,
											"end": 4111,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4042,
											"end": 4111,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4042,
											"end": 4111,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4042,
											"end": 4111,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 4042,
											"end": 4111,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4131,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4124,
											"end": 4131,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4124,
											"end": 4131,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4131,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4131,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4131,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4124,
											"end": 4131,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4131,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4131,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4131,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4124,
											"end": 4131,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4136,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4124,
											"end": 4136,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4136,
											"name": "PUSH",
											"source": 7,
											"value": "9DC29FAC"
										},
										{
											"begin": 4137,
											"end": 4147,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4149,
											"end": 4158,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 4124,
											"end": 4159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4159,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4179,
											"end": 4185,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4179,
											"end": 4185,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4179,
											"end": 4185,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4179,
											"end": 4185,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4179,
											"end": 4185,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4179,
											"end": 4185,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4179,
											"end": 4185,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4179,
											"end": 4185,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4179,
											"end": 4185,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4179,
											"end": 4185,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4195,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4172,
											"end": 4195,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4195,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 4196,
											"end": 4206,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4208,
											"end": 4215,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 4172,
											"end": 4216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 4172,
											"end": 4216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4216,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4234,
											"end": 4240,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4234,
											"end": 4240,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4234,
											"end": 4240,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4234,
											"end": 4240,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4234,
											"end": 4240,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4234,
											"end": 4240,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4234,
											"end": 4240,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4234,
											"end": 4240,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4234,
											"end": 4240,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4234,
											"end": 4240,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4234,
											"end": 4240,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4250,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4227,
											"end": 4250,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4250,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 4251,
											"end": 4261,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4263,
											"end": 4270,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 4227,
											"end": 4271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 4227,
											"end": 4271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4296,
											"end": 4303,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4292,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4284,
											"end": 4292,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4284,
											"end": 4303,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4303,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4303,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 4284,
											"end": 4303,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4303,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 4284,
											"end": 4303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4303,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 4284,
											"end": 4303,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4303,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4303,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4303,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4303,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4303,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4303,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4303,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4326,
											"end": 4333,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4322,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4314,
											"end": 4322,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4314,
											"end": 4333,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4333,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4333,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 4314,
											"end": 4333,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4333,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 4314,
											"end": 4333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4333,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 4314,
											"end": 4333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4333,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4333,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4333,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4333,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4368,
											"end": 4378,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4351,
											"end": 4428,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4351,
											"end": 4428,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4351,
											"end": 4428,
											"name": "PUSH",
											"source": 7,
											"value": "4F7E4F53152CB2CD0E424B2FC990199F0ED4255C7A97A848131F1EEFF165F7B"
										},
										{
											"begin": 4380,
											"end": 4387,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4389,
											"end": 4396,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4398,
											"end": 4407,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4409,
											"end": 4417,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4409,
											"end": 4417,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4419,
											"end": 4427,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4419,
											"end": 4427,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4351,
											"end": 4428,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4428,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4351,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 4351,
											"end": 4428,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 4351,
											"end": 4428,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 4351,
											"end": 4428,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4351,
											"end": 4428,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4351,
											"end": 4428,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4351,
											"end": 4428,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4351,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 4351,
											"end": 4428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4351,
											"end": 4428,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 4351,
											"end": 4428,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4351,
											"end": 4428,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4428,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4351,
											"end": 4428,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4351,
											"end": 4428,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4351,
											"end": 4428,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4351,
											"end": 4428,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4351,
											"end": 4428,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 4436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 4436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3769,
											"end": 4436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3769,
											"end": 4436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2112,
											"end": 2872,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 2112,
											"end": 2872,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2195,
											"end": 2201,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2195,
											"end": 2201,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2195,
											"end": 2201,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2195,
											"end": 2201,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2195,
											"end": 2201,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2195,
											"end": 2201,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2195,
											"end": 2201,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2195,
											"end": 2201,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2195,
											"end": 2201,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2195,
											"end": 2201,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2215,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2188,
											"end": 2215,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2215,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 2216,
											"end": 2226,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2240,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 2243,
											"end": 2250,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 2188,
											"end": 2251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 2188,
											"end": 2251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2289,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2262,
											"end": 2289,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2289,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 2290,
											"end": 2300,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2310,
											"end": 2314,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 2317,
											"end": 2324,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 2262,
											"end": 2325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 2262,
											"end": 2325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2325,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2338,
											"end": 2355,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2395,
											"end": 2396,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2377,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2370,
											"end": 2377,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2370,
											"end": 2377,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2377,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2377,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2377,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2370,
											"end": 2377,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2377,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2377,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2377,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2370,
											"end": 2377,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2389,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2370,
											"end": 2389,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2389,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 2370,
											"end": 2391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2396,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2366,
											"end": 2596,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 2366,
											"end": 2596,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2425,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 2440,
											"end": 2447,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2430,
											"end": 2437,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2430,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 2430,
											"end": 2447,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2430,
											"end": 2447,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2430,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 2430,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2430,
											"end": 2447,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 2430,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2425,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 2425,
											"end": 2448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2425,
											"end": 2448,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 2425,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2413,
											"end": 2448,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2413,
											"end": 2448,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2366,
											"end": 2596,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 2366,
											"end": 2596,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2366,
											"end": 2596,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 2366,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 2531,
											"end": 2539,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2531,
											"end": 2539,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2514,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2507,
											"end": 2514,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2507,
											"end": 2514,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2514,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2514,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2514,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2507,
											"end": 2514,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2514,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2514,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2514,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2507,
											"end": 2514,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 2507,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2497,
											"end": 2504,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2497,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 2497,
											"end": 2528,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2497,
											"end": 2528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2497,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 2497,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2497,
											"end": 2528,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 2497,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2497,
											"end": 2539,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 2497,
											"end": 2539,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2497,
											"end": 2539,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2497,
											"end": 2539,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 2497,
											"end": 2539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2497,
											"end": 2539,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 2497,
											"end": 2539,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2575,
											"end": 2583,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2575,
											"end": 2583,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2558,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2551,
											"end": 2558,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2551,
											"end": 2558,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2558,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2558,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2558,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2551,
											"end": 2558,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2558,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2558,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2558,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2551,
											"end": 2558,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2570,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2551,
											"end": 2570,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2570,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 2551,
											"end": 2572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2548,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 2541,
											"end": 2572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2583,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 2541,
											"end": 2583,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2583,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2583,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 2541,
											"end": 2583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2583,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 2541,
											"end": 2583,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 2493,
											"end": 2584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2584,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 2493,
											"end": 2584,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2481,
											"end": 2584,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2481,
											"end": 2584,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2366,
											"end": 2596,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 2366,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2628,
											"end": 2629,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2616,
											"end": 2625,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2616,
											"end": 2629,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2608,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 2608,
											"end": 2665,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2608,
											"end": 2665,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2608,
											"end": 2665,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2608,
											"end": 2665,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2608,
											"end": 2665,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2608,
											"end": 2665,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2608,
											"end": 2665,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2608,
											"end": 2665,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2608,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 2608,
											"end": 2665,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2608,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 2608,
											"end": 2665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2608,
											"end": 2665,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 2608,
											"end": 2665,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2608,
											"end": 2665,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2608,
											"end": 2665,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2608,
											"end": 2665,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2608,
											"end": 2665,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2608,
											"end": 2665,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2608,
											"end": 2665,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2608,
											"end": 2665,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2608,
											"end": 2665,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 2608,
											"end": 2665,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2683,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2676,
											"end": 2683,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 2683,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2683,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2683,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2683,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2676,
											"end": 2683,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2683,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2683,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2683,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2676,
											"end": 2683,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2688,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2676,
											"end": 2688,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2688,
											"name": "PUSH",
											"source": 7,
											"value": "40C10F19"
										},
										{
											"begin": 2689,
											"end": 2699,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2710,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 2676,
											"end": 2711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2711,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2736,
											"end": 2743,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2724,
											"end": 2732,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2724,
											"end": 2732,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 2724,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2766,
											"end": 2773,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2754,
											"end": 2762,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2754,
											"end": 2762,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2773,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2754,
											"end": 2773,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2754,
											"end": 2773,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2754,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 2754,
											"end": 2773,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2754,
											"end": 2773,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2754,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 2754,
											"end": 2773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2754,
											"end": 2773,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 2754,
											"end": 2773,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2754,
											"end": 2773,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2754,
											"end": 2773,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2754,
											"end": 2773,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2754,
											"end": 2773,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2754,
											"end": 2773,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2754,
											"end": 2773,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2754,
											"end": 2773,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2804,
											"end": 2814,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2789,
											"end": 2864,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2789,
											"end": 2864,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2789,
											"end": 2864,
											"name": "PUSH",
											"source": 7,
											"value": "103E5727EE41CE8741FBDF27E5E596DEB21DBE5AE93901499306D10F28D1EF7"
										},
										{
											"begin": 2816,
											"end": 2823,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2825,
											"end": 2832,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2843,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2845,
											"end": 2853,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2845,
											"end": 2853,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2855,
											"end": 2863,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2855,
											"end": 2863,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2789,
											"end": 2864,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2789,
											"end": 2864,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2789,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 2789,
											"end": 2864,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 2789,
											"end": 2864,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 2789,
											"end": 2864,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2789,
											"end": 2864,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2789,
											"end": 2864,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2789,
											"end": 2864,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2789,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 2789,
											"end": 2864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2789,
											"end": 2864,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 2789,
											"end": 2864,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2789,
											"end": 2864,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2789,
											"end": 2864,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2789,
											"end": 2864,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2789,
											"end": 2864,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2789,
											"end": 2864,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2789,
											"end": 2864,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2789,
											"end": 2864,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 2177,
											"end": 2872,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2112,
											"end": 2872,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2112,
											"end": 2872,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2112,
											"end": 2872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10250,
											"end": 10553,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 10250,
											"end": 10553,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10295,
											"end": 10301,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10322,
											"end": 10323,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 10318,
											"end": 10319,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10318,
											"end": 10323,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 10314,
											"end": 10546,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10314,
											"end": 10546,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 10314,
											"end": 10546,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10344,
											"end": 10345,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10340,
											"end": 10345,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10340,
											"end": 10345,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10360,
											"end": 10366,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10377,
											"end": 10378,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 10373,
											"end": 10374,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 10369,
											"end": 10370,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10369,
											"end": 10374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 10369,
											"end": 10374,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10369,
											"end": 10374,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10369,
											"end": 10374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 10369,
											"end": 10374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10369,
											"end": 10374,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 10369,
											"end": 10374,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10369,
											"end": 10378,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 10369,
											"end": 10378,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10369,
											"end": 10378,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10369,
											"end": 10378,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 10369,
											"end": 10378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10369,
											"end": 10378,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 10369,
											"end": 10378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10360,
											"end": 10378,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10360,
											"end": 10378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10393,
											"end": 10485,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 10393,
											"end": 10485,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10404,
											"end": 10405,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10400,
											"end": 10401,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10400,
											"end": 10405,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 10393,
											"end": 10485,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10393,
											"end": 10485,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 10393,
											"end": 10485,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10430,
											"end": 10431,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10426,
											"end": 10431,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10426,
											"end": 10431,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10468,
											"end": 10469,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 10463,
											"end": 10464,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10459,
											"end": 10460,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10455,
											"end": 10456,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10455,
											"end": 10460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 10455,
											"end": 10460,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10455,
											"end": 10460,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10455,
											"end": 10460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 10455,
											"end": 10460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10455,
											"end": 10460,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 10455,
											"end": 10460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10455,
											"end": 10464,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 10455,
											"end": 10464,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10455,
											"end": 10464,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10455,
											"end": 10464,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 10455,
											"end": 10464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10455,
											"end": 10464,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 10455,
											"end": 10464,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10454,
											"end": 10469,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 10454,
											"end": 10469,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10454,
											"end": 10469,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10454,
											"end": 10469,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 10454,
											"end": 10469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10454,
											"end": 10469,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 10454,
											"end": 10469,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10450,
											"end": 10469,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10450,
											"end": 10469,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10393,
											"end": 10485,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 10393,
											"end": 10485,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10393,
											"end": 10485,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 10393,
											"end": 10485,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10325,
											"end": 10496,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10314,
											"end": 10546,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 10314,
											"end": 10546,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10314,
											"end": 10546,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 10314,
											"end": 10546,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10511,
											"end": 10512,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10506,
											"end": 10507,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10506,
											"end": 10512,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 10502,
											"end": 10546,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 10502,
											"end": 10546,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10533,
											"end": 10534,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 10529,
											"end": 10534,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10529,
											"end": 10534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10502,
											"end": 10546,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 10502,
											"end": 10546,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10314,
											"end": 10546,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 10314,
											"end": 10546,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10250,
											"end": 10553,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10250,
											"end": 10553,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10250,
											"end": 10553,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10250,
											"end": 10553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 214,
											"end": 546,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 214,
											"end": 546,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 335,
											"end": 339,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 358,
											"end": 376,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 350,
											"end": 376,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 350,
											"end": 376,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 386,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 454,
											"end": 455,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 443,
											"end": 452,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 439,
											"end": 456,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 430,
											"end": 436,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 386,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 386,
											"end": 457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 386,
											"end": 457,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 386,
											"end": 457,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 467,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 535,
											"end": 537,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 524,
											"end": 533,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 520,
											"end": 538,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 511,
											"end": 517,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 467,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 467,
											"end": 539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 467,
											"end": 539,
											"name": "tag",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 467,
											"end": 539,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 214,
											"end": 546,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 214,
											"end": 546,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 214,
											"end": 546,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 214,
											"end": 546,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 214,
											"end": 546,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 214,
											"end": 546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 552,
											"end": 678,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 552,
											"end": 678,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 589,
											"end": 596,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 671,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 622,
											"end": 627,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 618,
											"end": 672,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 607,
											"end": 672,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 607,
											"end": 672,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 552,
											"end": 678,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 552,
											"end": 678,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 552,
											"end": 678,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 552,
											"end": 678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 684,
											"end": 780,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 684,
											"end": 780,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 721,
											"end": 728,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 768,
											"end": 773,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 750,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 750,
											"end": 774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 750,
											"end": 774,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 750,
											"end": 774,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 739,
											"end": 774,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 739,
											"end": 774,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 684,
											"end": 780,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 684,
											"end": 780,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 684,
											"end": 780,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 684,
											"end": 780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 786,
											"end": 904,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 786,
											"end": 904,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 873,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 891,
											"end": 896,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 873,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 873,
											"end": 897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 873,
											"end": 897,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 873,
											"end": 897,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 868,
											"end": 871,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 861,
											"end": 898,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 786,
											"end": 904,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 786,
											"end": 904,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 786,
											"end": 904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 910,
											"end": 1132,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 910,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1003,
											"end": 1007,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1041,
											"end": 1043,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1030,
											"end": 1039,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1026,
											"end": 1044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1018,
											"end": 1044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1018,
											"end": 1044,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1054,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 1122,
											"end": 1123,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1111,
											"end": 1120,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1107,
											"end": 1124,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1104,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1054,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 1054,
											"end": 1125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1054,
											"end": 1125,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 1054,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 910,
											"end": 1132,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 910,
											"end": 1132,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 910,
											"end": 1132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 910,
											"end": 1132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 910,
											"end": 1132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1336,
											"name": "tag",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 1219,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1329,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 1326,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1465,
											"end": 1587,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 1465,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1538,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 1556,
											"end": 1561,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1538,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 1538,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1538,
											"end": 1562,
											"name": "tag",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 1538,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1536,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1563,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1581,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 1518,
											"end": 1581,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1577,
											"end": 1578,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1574,
											"end": 1575,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1567,
											"end": 1579,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1581,
											"name": "tag",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 1518,
											"end": 1581,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1465,
											"end": 1587,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1465,
											"end": 1587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1732,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 1593,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1677,
											"end": 1683,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1664,
											"end": 1684,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1655,
											"end": 1684,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1655,
											"end": 1684,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1693,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 1720,
											"end": 1725,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1693,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 1693,
											"end": 1726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1693,
											"end": 1726,
											"name": "tag",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 1693,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1732,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1732,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1732,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1732,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 2067,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 1738,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1803,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 1848,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1825,
											"end": 1832,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1821,
											"end": 1844,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1817,
											"end": 1849,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1814,
											"end": 1933,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1814,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 1814,
											"end": 1933,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 1852,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 1852,
											"end": 1931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1931,
											"name": "tag",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 1852,
											"end": 1931,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1814,
											"end": 1933,
											"name": "tag",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 1814,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1972,
											"end": 1973,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1997,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 2042,
											"end": 2049,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2033,
											"end": 2039,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2022,
											"end": 2031,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2018,
											"end": 2040,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1997,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 1997,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1997,
											"end": 2050,
											"name": "tag",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 1997,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1987,
											"end": 2050,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1987,
											"end": 2050,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1943,
											"end": 2060,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 2067,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 2067,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 2067,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 2067,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 2067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2073,
											"end": 2149,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 2073,
											"end": 2149,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2109,
											"end": 2116,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2138,
											"end": 2143,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2127,
											"end": 2143,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2127,
											"end": 2143,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2073,
											"end": 2149,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2073,
											"end": 2149,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2073,
											"end": 2149,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2073,
											"end": 2149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2155,
											"end": 2270,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 2155,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 2257,
											"end": 2262,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 2240,
											"end": 2263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2263,
											"name": "tag",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 2240,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2235,
											"end": 2238,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2228,
											"end": 2264,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2155,
											"end": 2270,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2155,
											"end": 2270,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2155,
											"end": 2270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2276,
											"end": 2494,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 2276,
											"end": 2494,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2371,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2407,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2394,
											"end": 2403,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2390,
											"end": 2408,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2382,
											"end": 2408,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2382,
											"end": 2408,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2418,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 2484,
											"end": 2485,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2473,
											"end": 2482,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2469,
											"end": 2486,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2460,
											"end": 2466,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2418,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 2418,
											"end": 2487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2418,
											"end": 2487,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 2418,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2276,
											"end": 2494,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2276,
											"end": 2494,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2276,
											"end": 2494,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2276,
											"end": 2494,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2276,
											"end": 2494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2500,
											"end": 2722,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 2500,
											"end": 2722,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2593,
											"end": 2597,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2631,
											"end": 2633,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2620,
											"end": 2629,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2616,
											"end": 2634,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2608,
											"end": 2634,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2608,
											"end": 2634,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 2712,
											"end": 2713,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2701,
											"end": 2710,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2697,
											"end": 2714,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2688,
											"end": 2694,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 2644,
											"end": 2715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2715,
											"name": "tag",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 2644,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2500,
											"end": 2722,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2500,
											"end": 2722,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2500,
											"end": 2722,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2500,
											"end": 2722,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2500,
											"end": 2722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2728,
											"end": 2850,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 2728,
											"end": 2850,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2801,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 2819,
											"end": 2824,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2801,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 2801,
											"end": 2825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2801,
											"end": 2825,
											"name": "tag",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 2801,
											"end": 2825,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2794,
											"end": 2799,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2791,
											"end": 2826,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2781,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 2781,
											"end": 2844,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2840,
											"end": 2841,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2837,
											"end": 2838,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2830,
											"end": 2842,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2781,
											"end": 2844,
											"name": "tag",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 2781,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2728,
											"end": 2850,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2728,
											"end": 2850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2856,
											"end": 2995,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 2856,
											"end": 2995,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2902,
											"end": 2907,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2940,
											"end": 2946,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2927,
											"end": 2947,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2918,
											"end": 2947,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2918,
											"end": 2947,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2956,
											"end": 2989,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 2983,
											"end": 2988,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2956,
											"end": 2989,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 2956,
											"end": 2989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2956,
											"end": 2989,
											"name": "tag",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 2956,
											"end": 2989,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2856,
											"end": 2995,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2856,
											"end": 2995,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2856,
											"end": 2995,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2856,
											"end": 2995,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2856,
											"end": 2995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3001,
											"end": 3330,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 3001,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3060,
											"end": 3066,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3109,
											"end": 3111,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3097,
											"end": 3106,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3095,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3084,
											"end": 3107,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3080,
											"end": 3112,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3077,
											"end": 3196,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3077,
											"end": 3196,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 3077,
											"end": 3196,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 3115,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 3115,
											"end": 3194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3194,
											"name": "tag",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 3115,
											"end": 3194,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3077,
											"end": 3196,
											"name": "tag",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 3077,
											"end": 3196,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3235,
											"end": 3236,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3260,
											"end": 3313,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 3305,
											"end": 3312,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3296,
											"end": 3302,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3285,
											"end": 3294,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3281,
											"end": 3303,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3260,
											"end": 3313,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 3260,
											"end": 3313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3260,
											"end": 3313,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 3260,
											"end": 3313,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3250,
											"end": 3313,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3250,
											"end": 3313,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3323,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3001,
											"end": 3330,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3001,
											"end": 3330,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3001,
											"end": 3330,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3001,
											"end": 3330,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3001,
											"end": 3330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3336,
											"end": 3396,
											"name": "tag",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 3336,
											"end": 3396,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3364,
											"end": 3367,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3385,
											"end": 3390,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3378,
											"end": 3390,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3378,
											"end": 3390,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3336,
											"end": 3396,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3336,
											"end": 3396,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3336,
											"end": 3396,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3336,
											"end": 3396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3402,
											"end": 3544,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 3402,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3452,
											"end": 3461,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3485,
											"end": 3538,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 3503,
											"end": 3537,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 3512,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 3530,
											"end": 3535,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3512,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 3512,
											"end": 3536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3512,
											"end": 3536,
											"name": "tag",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 3512,
											"end": 3536,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3503,
											"end": 3537,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 3503,
											"end": 3537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3503,
											"end": 3537,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 3503,
											"end": 3537,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3485,
											"end": 3538,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 3485,
											"end": 3538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3485,
											"end": 3538,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 3485,
											"end": 3538,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3472,
											"end": 3538,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3472,
											"end": 3538,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3402,
											"end": 3544,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3402,
											"end": 3544,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3402,
											"end": 3544,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3402,
											"end": 3544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3550,
											"end": 3676,
											"name": "tag",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 3550,
											"end": 3676,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3600,
											"end": 3609,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3633,
											"end": 3670,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 3664,
											"end": 3669,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3633,
											"end": 3670,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 3633,
											"end": 3670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3633,
											"end": 3670,
											"name": "tag",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 3633,
											"end": 3670,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3620,
											"end": 3670,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3620,
											"end": 3670,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3550,
											"end": 3676,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3550,
											"end": 3676,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3550,
											"end": 3676,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3550,
											"end": 3676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3682,
											"end": 3823,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 3682,
											"end": 3823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3747,
											"end": 3756,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3780,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 3811,
											"end": 3816,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3780,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 3780,
											"end": 3817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3780,
											"end": 3817,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 3780,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3767,
											"end": 3817,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3767,
											"end": 3817,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3682,
											"end": 3823,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3682,
											"end": 3823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3682,
											"end": 3823,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3682,
											"end": 3823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3829,
											"end": 3990,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 3829,
											"end": 3990,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3931,
											"end": 3983,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 3977,
											"end": 3982,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3931,
											"end": 3983,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 3931,
											"end": 3983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3931,
											"end": 3983,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 3931,
											"end": 3983,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3926,
											"end": 3929,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3919,
											"end": 3984,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3829,
											"end": 3990,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3829,
											"end": 3990,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3829,
											"end": 3990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3996,
											"end": 4248,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 3996,
											"end": 4248,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4104,
											"end": 4108,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4142,
											"end": 4144,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4131,
											"end": 4140,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4127,
											"end": 4145,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4119,
											"end": 4145,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4119,
											"end": 4145,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4155,
											"end": 4241,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 4238,
											"end": 4239,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4227,
											"end": 4236,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4223,
											"end": 4240,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4220,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4155,
											"end": 4241,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 4155,
											"end": 4241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4155,
											"end": 4241,
											"name": "tag",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 4155,
											"end": 4241,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3996,
											"end": 4248,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3996,
											"end": 4248,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3996,
											"end": 4248,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3996,
											"end": 4248,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3996,
											"end": 4248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4254,
											"end": 4586,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 4254,
											"end": 4586,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4375,
											"end": 4379,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4413,
											"end": 4415,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4402,
											"end": 4411,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4398,
											"end": 4416,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4390,
											"end": 4416,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4390,
											"end": 4416,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4426,
											"end": 4497,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 4494,
											"end": 4495,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4483,
											"end": 4492,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4479,
											"end": 4496,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4470,
											"end": 4476,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4426,
											"end": 4497,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 4426,
											"end": 4497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4426,
											"end": 4497,
											"name": "tag",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 4426,
											"end": 4497,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4507,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 4575,
											"end": 4577,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4564,
											"end": 4573,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4560,
											"end": 4578,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4551,
											"end": 4557,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4507,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 4507,
											"end": 4579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4507,
											"end": 4579,
											"name": "tag",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 4507,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4254,
											"end": 4586,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4254,
											"end": 4586,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4254,
											"end": 4586,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4254,
											"end": 4586,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4254,
											"end": 4586,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4254,
											"end": 4586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4592,
											"end": 5066,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 4592,
											"end": 5066,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4660,
											"end": 4666,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4668,
											"end": 4674,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4717,
											"end": 4719,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4705,
											"end": 4714,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4696,
											"end": 4703,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4692,
											"end": 4715,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4688,
											"end": 4720,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4685,
											"end": 4804,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4685,
											"end": 4804,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 4685,
											"end": 4804,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4723,
											"end": 4802,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 4723,
											"end": 4802,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 4723,
											"end": 4802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4723,
											"end": 4802,
											"name": "tag",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 4723,
											"end": 4802,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4685,
											"end": 4804,
											"name": "tag",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 4685,
											"end": 4804,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4843,
											"end": 4844,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4868,
											"end": 4921,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 4913,
											"end": 4920,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4904,
											"end": 4910,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4893,
											"end": 4902,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4889,
											"end": 4911,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4868,
											"end": 4921,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 4868,
											"end": 4921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4868,
											"end": 4921,
											"name": "tag",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 4868,
											"end": 4921,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4858,
											"end": 4921,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4858,
											"end": 4921,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4814,
											"end": 4931,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4970,
											"end": 4972,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4996,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 5041,
											"end": 5048,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5032,
											"end": 5038,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5021,
											"end": 5030,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5017,
											"end": 5039,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4996,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 4996,
											"end": 5049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4996,
											"end": 5049,
											"name": "tag",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 4996,
											"end": 5049,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4986,
											"end": 5049,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4986,
											"end": 5049,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4941,
											"end": 5059,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4592,
											"end": 5066,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4592,
											"end": 5066,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4592,
											"end": 5066,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4592,
											"end": 5066,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4592,
											"end": 5066,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4592,
											"end": 5066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5072,
											"end": 5241,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 5072,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5156,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5190,
											"end": 5196,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5188,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5178,
											"end": 5197,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5230,
											"end": 5234,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5225,
											"end": 5228,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5221,
											"end": 5235,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5206,
											"end": 5235,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5206,
											"end": 5235,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5072,
											"end": 5241,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5072,
											"end": 5241,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5072,
											"end": 5241,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5072,
											"end": 5241,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5072,
											"end": 5241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5247,
											"end": 5416,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 5247,
											"end": 5416,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5387,
											"end": 5408,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C696420696E70757420746F6B656E00000000000000000000000000"
										},
										{
											"begin": 5383,
											"end": 5384,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5375,
											"end": 5381,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5371,
											"end": 5385,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5364,
											"end": 5409,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5247,
											"end": 5416,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5247,
											"end": 5416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5422,
											"end": 5788,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 5422,
											"end": 5788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5564,
											"end": 5567,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5585,
											"end": 5652,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 5649,
											"end": 5651,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 5644,
											"end": 5647,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5585,
											"end": 5652,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 5585,
											"end": 5652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5585,
											"end": 5652,
											"name": "tag",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 5585,
											"end": 5652,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5578,
											"end": 5652,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5578,
											"end": 5652,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5661,
											"end": 5754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 5750,
											"end": 5753,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5661,
											"end": 5754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 5661,
											"end": 5754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5661,
											"end": 5754,
											"name": "tag",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 5661,
											"end": 5754,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5779,
											"end": 5781,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5774,
											"end": 5777,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5770,
											"end": 5782,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5763,
											"end": 5782,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5763,
											"end": 5782,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5422,
											"end": 5788,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5422,
											"end": 5788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5422,
											"end": 5788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5422,
											"end": 5788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5794,
											"end": 6213,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 5794,
											"end": 6213,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5960,
											"end": 5964,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5998,
											"end": 6000,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5987,
											"end": 5996,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5983,
											"end": 6001,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5975,
											"end": 6001,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5975,
											"end": 6001,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6047,
											"end": 6056,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6041,
											"end": 6045,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6037,
											"end": 6057,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6033,
											"end": 6034,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6022,
											"end": 6031,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6018,
											"end": 6035,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6011,
											"end": 6058,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6206,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 6201,
											"end": 6205,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6206,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 6075,
											"end": 6206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6206,
											"name": "tag",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 6075,
											"end": 6206,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6067,
											"end": 6206,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6067,
											"end": 6206,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5794,
											"end": 6213,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5794,
											"end": 6213,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5794,
											"end": 6213,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5794,
											"end": 6213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6219,
											"end": 6324,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 6219,
											"end": 6324,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6255,
											"end": 6262,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6295,
											"end": 6317,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6293,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6284,
											"end": 6318,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6273,
											"end": 6318,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6273,
											"end": 6318,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6219,
											"end": 6324,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6219,
											"end": 6324,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6219,
											"end": 6324,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6219,
											"end": 6324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6330,
											"end": 6450,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 6330,
											"end": 6450,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6402,
											"end": 6425,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 6419,
											"end": 6424,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6402,
											"end": 6425,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 6402,
											"end": 6425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6402,
											"end": 6425,
											"name": "tag",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 6402,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6395,
											"end": 6400,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6392,
											"end": 6426,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 6382,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 6382,
											"end": 6444,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6440,
											"end": 6441,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6437,
											"end": 6438,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6430,
											"end": 6442,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6382,
											"end": 6444,
											"name": "tag",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 6382,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6330,
											"end": 6450,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6330,
											"end": 6450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6456,
											"end": 6597,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 6456,
											"end": 6597,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6543,
											"end": 6549,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6537,
											"end": 6550,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6528,
											"end": 6550,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6528,
											"end": 6550,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6559,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 6585,
											"end": 6590,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6559,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 6559,
											"end": 6591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6559,
											"end": 6591,
											"name": "tag",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 6559,
											"end": 6591,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6456,
											"end": 6597,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6456,
											"end": 6597,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6456,
											"end": 6597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6456,
											"end": 6597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6456,
											"end": 6597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6603,
											"end": 6723,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 6603,
											"end": 6723,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6675,
											"end": 6698,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 6692,
											"end": 6697,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6675,
											"end": 6698,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 6675,
											"end": 6698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6675,
											"end": 6698,
											"name": "tag",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 6675,
											"end": 6698,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6668,
											"end": 6673,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6665,
											"end": 6699,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 6655,
											"end": 6717,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 6655,
											"end": 6717,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6713,
											"end": 6714,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6710,
											"end": 6711,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6703,
											"end": 6715,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6655,
											"end": 6717,
											"name": "tag",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 6655,
											"end": 6717,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6603,
											"end": 6723,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6603,
											"end": 6723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6870,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 6729,
											"end": 6870,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6785,
											"end": 6790,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6816,
											"end": 6822,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6810,
											"end": 6823,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6801,
											"end": 6823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6801,
											"end": 6823,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6832,
											"end": 6864,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 6858,
											"end": 6863,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6832,
											"end": 6864,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 6832,
											"end": 6864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6832,
											"end": 6864,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 6832,
											"end": 6864,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6870,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6870,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6870,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6870,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6876,
											"end": 7019,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 6876,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6933,
											"end": 6938,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6964,
											"end": 6970,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6958,
											"end": 6971,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6949,
											"end": 6971,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6949,
											"end": 6971,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6980,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 7007,
											"end": 7012,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6980,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 6980,
											"end": 7013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6980,
											"end": 7013,
											"name": "tag",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 6980,
											"end": 7013,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6876,
											"end": 7019,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6876,
											"end": 7019,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6876,
											"end": 7019,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6876,
											"end": 7019,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6876,
											"end": 7019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7025,
											"end": 7996,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 7025,
											"end": 7996,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7128,
											"end": 7134,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7136,
											"end": 7142,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7144,
											"end": 7150,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7152,
											"end": 7158,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7160,
											"end": 7166,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7209,
											"end": 7212,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 7197,
											"end": 7206,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7188,
											"end": 7195,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 7184,
											"end": 7207,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7180,
											"end": 7213,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 7177,
											"end": 7297,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7177,
											"end": 7297,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 7177,
											"end": 7297,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7216,
											"end": 7295,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 7216,
											"end": 7295,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 7216,
											"end": 7295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7216,
											"end": 7295,
											"name": "tag",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 7216,
											"end": 7295,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7177,
											"end": 7297,
											"name": "tag",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 7177,
											"end": 7297,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7336,
											"end": 7337,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7361,
											"end": 7424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 7416,
											"end": 7423,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 7407,
											"end": 7413,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7396,
											"end": 7405,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 7392,
											"end": 7414,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7361,
											"end": 7424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 7361,
											"end": 7424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7361,
											"end": 7424,
											"name": "tag",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 7361,
											"end": 7424,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7351,
											"end": 7424,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 7351,
											"end": 7424,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7307,
											"end": 7434,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7473,
											"end": 7475,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7499,
											"end": 7562,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 7554,
											"end": 7561,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 7545,
											"end": 7551,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7534,
											"end": 7543,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 7530,
											"end": 7552,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7499,
											"end": 7562,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 7499,
											"end": 7562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7499,
											"end": 7562,
											"name": "tag",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 7499,
											"end": 7562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7489,
											"end": 7562,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 7489,
											"end": 7562,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7444,
											"end": 7572,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7611,
											"end": 7613,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7637,
											"end": 7701,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 7693,
											"end": 7700,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 7684,
											"end": 7690,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7673,
											"end": 7682,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 7669,
											"end": 7691,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7637,
											"end": 7701,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 7637,
											"end": 7701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7637,
											"end": 7701,
											"name": "tag",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 7637,
											"end": 7701,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7627,
											"end": 7701,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7627,
											"end": 7701,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7582,
											"end": 7711,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7750,
											"end": 7752,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 7776,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 7832,
											"end": 7839,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 7823,
											"end": 7829,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7812,
											"end": 7821,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 7808,
											"end": 7830,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7776,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 7776,
											"end": 7840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7776,
											"end": 7840,
											"name": "tag",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 7776,
											"end": 7840,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7766,
											"end": 7840,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7766,
											"end": 7840,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7721,
											"end": 7850,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7889,
											"end": 7892,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 7916,
											"end": 7979,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 7971,
											"end": 7978,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 7962,
											"end": 7968,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7951,
											"end": 7960,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 7947,
											"end": 7969,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7916,
											"end": 7979,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 7916,
											"end": 7979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7916,
											"end": 7979,
											"name": "tag",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 7916,
											"end": 7979,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7906,
											"end": 7979,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7906,
											"end": 7979,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7860,
											"end": 7989,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7025,
											"end": 7996,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7025,
											"end": 7996,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 7025,
											"end": 7996,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7025,
											"end": 7996,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7025,
											"end": 7996,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 7025,
											"end": 7996,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7025,
											"end": 7996,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7025,
											"end": 7996,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7025,
											"end": 7996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8002,
											"end": 8182,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 8002,
											"end": 8182,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8050,
											"end": 8127,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8047,
											"end": 8048,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8040,
											"end": 8128,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8147,
											"end": 8151,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 8144,
											"end": 8145,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8137,
											"end": 8152,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8171,
											"end": 8175,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8168,
											"end": 8169,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8161,
											"end": 8176,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8188,
											"end": 8744,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 8188,
											"end": 8744,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8227,
											"end": 8234,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8250,
											"end": 8269,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 8267,
											"end": 8268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8250,
											"end": 8269,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 8250,
											"end": 8269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8250,
											"end": 8269,
											"name": "tag",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 8250,
											"end": 8269,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8245,
											"end": 8269,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8245,
											"end": 8269,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8283,
											"end": 8302,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 8300,
											"end": 8301,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8283,
											"end": 8302,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 8283,
											"end": 8302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8283,
											"end": 8302,
											"name": "tag",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 8283,
											"end": 8302,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8278,
											"end": 8302,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8278,
											"end": 8302,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8337,
											"end": 8338,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8334,
											"end": 8335,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8330,
											"end": 8339,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 8359,
											"end": 8388,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 8376,
											"end": 8387,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8359,
											"end": 8388,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 8359,
											"end": 8388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8359,
											"end": 8388,
											"name": "tag",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 8359,
											"end": 8388,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8348,
											"end": 8388,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8348,
											"end": 8388,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8446,
											"end": 8512,
											"name": "PUSH",
											"source": 8,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8443,
											"end": 8444,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8440,
											"end": 8513,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8433,
											"end": 8434,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8429,
											"end": 8438,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 8425,
											"end": 8514,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8422,
											"end": 8537,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8422,
											"end": 8537,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 8422,
											"end": 8537,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8517,
											"end": 8535,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 8517,
											"end": 8535,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 8517,
											"end": 8535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8517,
											"end": 8535,
											"name": "tag",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 8517,
											"end": 8535,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8422,
											"end": 8537,
											"name": "tag",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 8422,
											"end": 8537,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8687,
											"end": 8688,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8678,
											"end": 8685,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8673,
											"end": 8689,
											"name": "SDIV",
											"source": 8
										},
										{
											"begin": 8670,
											"end": 8671,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8667,
											"end": 8690,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8647,
											"end": 8648,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8640,
											"end": 8649,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8620,
											"end": 8704,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 8597,
											"end": 8737,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 8597,
											"end": 8737,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8717,
											"end": 8735,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 8717,
											"end": 8735,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 8717,
											"end": 8735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8717,
											"end": 8735,
											"name": "tag",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 8717,
											"end": 8735,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8597,
											"end": 8737,
											"name": "tag",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 8597,
											"end": 8737,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8235,
											"end": 8744,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8188,
											"end": 8744,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8188,
											"end": 8744,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8188,
											"end": 8744,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8188,
											"end": 8744,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8188,
											"end": 8744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8750,
											"end": 9160,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 8750,
											"end": 9160,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8790,
											"end": 8797,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8813,
											"end": 8833,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 8831,
											"end": 8832,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8813,
											"end": 8833,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 8813,
											"end": 8833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8813,
											"end": 8833,
											"name": "tag",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 8813,
											"end": 8833,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8808,
											"end": 8833,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8808,
											"end": 8833,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8847,
											"end": 8867,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 8865,
											"end": 8866,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8847,
											"end": 8867,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 8847,
											"end": 8867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8847,
											"end": 8867,
											"name": "tag",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 8847,
											"end": 8867,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8842,
											"end": 8867,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8842,
											"end": 8867,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8902,
											"end": 8903,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8900,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8895,
											"end": 8904,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 8924,
											"end": 8954,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 8942,
											"end": 8953,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8924,
											"end": 8954,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 8924,
											"end": 8954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8924,
											"end": 8954,
											"name": "tag",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 8924,
											"end": 8954,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8913,
											"end": 8954,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8913,
											"end": 8954,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9103,
											"end": 9104,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9094,
											"end": 9101,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 9087,
											"end": 9088,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9084,
											"end": 9106,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 9064,
											"end": 9065,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9057,
											"end": 9066,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9037,
											"end": 9120,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 9014,
											"end": 9153,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 9014,
											"end": 9153,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9133,
											"end": 9151,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 9133,
											"end": 9151,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 9133,
											"end": 9151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9133,
											"end": 9151,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 9133,
											"end": 9151,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9014,
											"end": 9153,
											"name": "tag",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 9014,
											"end": 9153,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8798,
											"end": 9160,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8750,
											"end": 9160,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8750,
											"end": 9160,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8750,
											"end": 9160,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8750,
											"end": 9160,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8750,
											"end": 9160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9166,
											"end": 9346,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 9166,
											"end": 9346,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9214,
											"end": 9291,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9211,
											"end": 9212,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9311,
											"end": 9315,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 9308,
											"end": 9309,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9301,
											"end": 9316,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9335,
											"end": 9339,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9332,
											"end": 9333,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9325,
											"end": 9340,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9352,
											"end": 9537,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 9352,
											"end": 9537,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9392,
											"end": 9393,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9409,
											"end": 9429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 9427,
											"end": 9428,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9409,
											"end": 9429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 9409,
											"end": 9429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9409,
											"end": 9429,
											"name": "tag",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 9409,
											"end": 9429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9404,
											"end": 9429,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9404,
											"end": 9429,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9443,
											"end": 9463,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 9461,
											"end": 9462,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9443,
											"end": 9463,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 9443,
											"end": 9463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9443,
											"end": 9463,
											"name": "tag",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 9443,
											"end": 9463,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9438,
											"end": 9463,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9438,
											"end": 9463,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9482,
											"end": 9483,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9472,
											"end": 9507,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 9472,
											"end": 9507,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 9487,
											"end": 9505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "tag",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9472,
											"end": 9507,
											"name": "tag",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 9472,
											"end": 9507,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9529,
											"end": 9530,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9526,
											"end": 9527,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9522,
											"end": 9531,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9531,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9517,
											"end": 9531,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9352,
											"end": 9537,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9352,
											"end": 9537,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9352,
											"end": 9537,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9352,
											"end": 9537,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9352,
											"end": 9537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9543,
											"end": 9894,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 9543,
											"end": 9894,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9613,
											"end": 9619,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9662,
											"end": 9664,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9650,
											"end": 9659,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9641,
											"end": 9648,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9637,
											"end": 9660,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9633,
											"end": 9665,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 9630,
											"end": 9749,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9630,
											"end": 9749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 9630,
											"end": 9749,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9668,
											"end": 9747,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 9668,
											"end": 9747,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 9668,
											"end": 9747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9668,
											"end": 9747,
											"name": "tag",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 9668,
											"end": 9747,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9630,
											"end": 9749,
											"name": "tag",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 9630,
											"end": 9749,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9788,
											"end": 9789,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9877,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 9869,
											"end": 9876,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9860,
											"end": 9866,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9849,
											"end": 9858,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9845,
											"end": 9867,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9813,
											"end": 9877,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 9813,
											"end": 9877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9813,
											"end": 9877,
											"name": "tag",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 9813,
											"end": 9877,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9803,
											"end": 9877,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9803,
											"end": 9877,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9759,
											"end": 9887,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9543,
											"end": 9894,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9543,
											"end": 9894,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9543,
											"end": 9894,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9543,
											"end": 9894,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9543,
											"end": 9894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9900,
											"end": 10285,
											"name": "tag",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 9900,
											"end": 10285,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9939,
											"end": 9940,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9956,
											"end": 9975,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 9973,
											"end": 9974,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9956,
											"end": 9975,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 9956,
											"end": 9975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9956,
											"end": 9975,
											"name": "tag",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 9956,
											"end": 9975,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9951,
											"end": 9975,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9951,
											"end": 9975,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9989,
											"end": 10008,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 10006,
											"end": 10007,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9989,
											"end": 10008,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 9989,
											"end": 10008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9989,
											"end": 10008,
											"name": "tag",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 9989,
											"end": 10008,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9984,
											"end": 10008,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9984,
											"end": 10008,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10027,
											"end": 10028,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10017,
											"end": 10052,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 10017,
											"end": 10052,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10032,
											"end": 10050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 10032,
											"end": 10050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 10032,
											"end": 10050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10032,
											"end": 10050,
											"name": "tag",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 10032,
											"end": 10050,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10017,
											"end": 10052,
											"name": "tag",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 10017,
											"end": 10052,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10218,
											"end": 10219,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 10215,
											"end": 10216,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10211,
											"end": 10220,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10208,
											"end": 10209,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10205,
											"end": 10221,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 10124,
											"end": 10190,
											"name": "PUSH",
											"source": 8,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10121,
											"end": 10122,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10118,
											"end": 10191,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 10101,
											"end": 10231,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10098,
											"end": 10254,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10098,
											"end": 10254,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 10098,
											"end": 10254,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10234,
											"end": 10252,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 10234,
											"end": 10252,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 10234,
											"end": 10252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10234,
											"end": 10252,
											"name": "tag",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 10234,
											"end": 10252,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10098,
											"end": 10254,
											"name": "tag",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 10098,
											"end": 10254,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10277,
											"end": 10278,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10274,
											"end": 10275,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10269,
											"end": 10279,
											"name": "SDIV",
											"source": 8
										},
										{
											"begin": 10264,
											"end": 10279,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10264,
											"end": 10279,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9900,
											"end": 10285,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9900,
											"end": 10285,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9900,
											"end": 10285,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9900,
											"end": 10285,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9900,
											"end": 10285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10291,
											"end": 10461,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 10291,
											"end": 10461,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10431,
											"end": 10453,
											"name": "PUSH",
											"source": 8,
											"value": "526573657276657320617265206E6F7420736574000000000000000000000000"
										},
										{
											"begin": 10427,
											"end": 10428,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10419,
											"end": 10425,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10415,
											"end": 10429,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10408,
											"end": 10454,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10291,
											"end": 10461,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10291,
											"end": 10461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10467,
											"end": 10833,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 10467,
											"end": 10833,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10609,
											"end": 10612,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10630,
											"end": 10697,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 10694,
											"end": 10696,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 10689,
											"end": 10692,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10630,
											"end": 10697,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 10630,
											"end": 10697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10630,
											"end": 10697,
											"name": "tag",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 10630,
											"end": 10697,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10623,
											"end": 10697,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10623,
											"end": 10697,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10706,
											"end": 10799,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 10795,
											"end": 10798,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10706,
											"end": 10799,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 10706,
											"end": 10799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10706,
											"end": 10799,
											"name": "tag",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 10706,
											"end": 10799,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10824,
											"end": 10826,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10819,
											"end": 10822,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10815,
											"end": 10827,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10808,
											"end": 10827,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10808,
											"end": 10827,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10467,
											"end": 10833,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10467,
											"end": 10833,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10467,
											"end": 10833,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10467,
											"end": 10833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10839,
											"end": 11258,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 10839,
											"end": 11258,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11005,
											"end": 11009,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11043,
											"end": 11045,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11032,
											"end": 11041,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11028,
											"end": 11046,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11020,
											"end": 11046,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11020,
											"end": 11046,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11092,
											"end": 11101,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11086,
											"end": 11090,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11082,
											"end": 11102,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11078,
											"end": 11079,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11067,
											"end": 11076,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11063,
											"end": 11080,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11056,
											"end": 11103,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11120,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 11246,
											"end": 11250,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11120,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 11120,
											"end": 11251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11120,
											"end": 11251,
											"name": "tag",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 11120,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11112,
											"end": 11251,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11112,
											"end": 11251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10839,
											"end": 11258,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10839,
											"end": 11258,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10839,
											"end": 11258,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10839,
											"end": 11258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11264,
											"end": 11706,
											"name": "tag",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 11264,
											"end": 11706,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11413,
											"end": 11417,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11451,
											"end": 11453,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 11440,
											"end": 11449,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11436,
											"end": 11454,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11428,
											"end": 11454,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11428,
											"end": 11454,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11464,
											"end": 11535,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 11532,
											"end": 11533,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11521,
											"end": 11530,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11517,
											"end": 11534,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11508,
											"end": 11514,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 11464,
											"end": 11535,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 11464,
											"end": 11535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11464,
											"end": 11535,
											"name": "tag",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 11464,
											"end": 11535,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11545,
											"end": 11617,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 11613,
											"end": 11615,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11602,
											"end": 11611,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11598,
											"end": 11616,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11589,
											"end": 11595,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11545,
											"end": 11617,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 11545,
											"end": 11617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11545,
											"end": 11617,
											"name": "tag",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 11545,
											"end": 11617,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11627,
											"end": 11699,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 11695,
											"end": 11697,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11684,
											"end": 11693,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11680,
											"end": 11698,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11671,
											"end": 11677,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11627,
											"end": 11699,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 11627,
											"end": 11699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11627,
											"end": 11699,
											"name": "tag",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 11627,
											"end": 11699,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11264,
											"end": 11706,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 11264,
											"end": 11706,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 11264,
											"end": 11706,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11264,
											"end": 11706,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11264,
											"end": 11706,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11264,
											"end": 11706,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11264,
											"end": 11706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11712,
											"end": 11802,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 11712,
											"end": 11802,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11746,
											"end": 11753,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11789,
											"end": 11794,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11782,
											"end": 11795,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11775,
											"end": 11796,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11764,
											"end": 11796,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11764,
											"end": 11796,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11712,
											"end": 11802,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11712,
											"end": 11802,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11712,
											"end": 11802,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11712,
											"end": 11802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11808,
											"end": 11924,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 11808,
											"end": 11924,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11878,
											"end": 11899,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 11893,
											"end": 11898,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11878,
											"end": 11899,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 11878,
											"end": 11899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11878,
											"end": 11899,
											"name": "tag",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 11878,
											"end": 11899,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11871,
											"end": 11876,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11868,
											"end": 11900,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 11858,
											"end": 11918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 11858,
											"end": 11918,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11914,
											"end": 11915,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11911,
											"end": 11912,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11904,
											"end": 11916,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 11858,
											"end": 11918,
											"name": "tag",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 11858,
											"end": 11918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11808,
											"end": 11924,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11808,
											"end": 11924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11930,
											"end": 12067,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 11930,
											"end": 12067,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11984,
											"end": 11989,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12015,
											"end": 12021,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12009,
											"end": 12022,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12000,
											"end": 12022,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12000,
											"end": 12022,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12031,
											"end": 12061,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 12055,
											"end": 12060,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12031,
											"end": 12061,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 12031,
											"end": 12061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12031,
											"end": 12061,
											"name": "tag",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 12031,
											"end": 12061,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11930,
											"end": 12067,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11930,
											"end": 12067,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11930,
											"end": 12067,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11930,
											"end": 12067,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11930,
											"end": 12067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12073,
											"end": 12418,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 12073,
											"end": 12418,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12140,
											"end": 12146,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12189,
											"end": 12191,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12177,
											"end": 12186,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12168,
											"end": 12175,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12164,
											"end": 12187,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12160,
											"end": 12192,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 12157,
											"end": 12276,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12157,
											"end": 12276,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 12157,
											"end": 12276,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12195,
											"end": 12274,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 12195,
											"end": 12274,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 12195,
											"end": 12274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12195,
											"end": 12274,
											"name": "tag",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 12195,
											"end": 12274,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12157,
											"end": 12276,
											"name": "tag",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 12157,
											"end": 12276,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12315,
											"end": 12316,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12340,
											"end": 12401,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 12393,
											"end": 12400,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12384,
											"end": 12390,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12373,
											"end": 12382,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12369,
											"end": 12391,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12340,
											"end": 12401,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 12340,
											"end": 12401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12340,
											"end": 12401,
											"name": "tag",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 12340,
											"end": 12401,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12330,
											"end": 12401,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12330,
											"end": 12401,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12286,
											"end": 12411,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12073,
											"end": 12418,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12073,
											"end": 12418,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12073,
											"end": 12418,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12073,
											"end": 12418,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12073,
											"end": 12418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12424,
											"end": 12615,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 12424,
											"end": 12615,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12464,
											"end": 12467,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12483,
											"end": 12503,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 12501,
											"end": 12502,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12483,
											"end": 12503,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 12483,
											"end": 12503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12483,
											"end": 12503,
											"name": "tag",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 12483,
											"end": 12503,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12478,
											"end": 12503,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12478,
											"end": 12503,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12517,
											"end": 12537,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 12535,
											"end": 12536,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12517,
											"end": 12537,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 12517,
											"end": 12537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12517,
											"end": 12537,
											"name": "tag",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 12517,
											"end": 12537,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12512,
											"end": 12537,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12512,
											"end": 12537,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12560,
											"end": 12561,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12557,
											"end": 12558,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12553,
											"end": 12562,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12546,
											"end": 12562,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12546,
											"end": 12562,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12581,
											"end": 12584,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12578,
											"end": 12579,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12575,
											"end": 12585,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 12572,
											"end": 12608,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12572,
											"end": 12608,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 12572,
											"end": 12608,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12588,
											"end": 12606,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 12588,
											"end": 12606,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 12588,
											"end": 12606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12588,
											"end": 12606,
											"name": "tag",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 12588,
											"end": 12606,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12572,
											"end": 12608,
											"name": "tag",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 12572,
											"end": 12608,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12424,
											"end": 12615,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12424,
											"end": 12615,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12424,
											"end": 12615,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12424,
											"end": 12615,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12424,
											"end": 12615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12621,
											"end": 12815,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 12621,
											"end": 12815,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12661,
											"end": 12665,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12681,
											"end": 12701,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 12699,
											"end": 12700,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12681,
											"end": 12701,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 12681,
											"end": 12701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12681,
											"end": 12701,
											"name": "tag",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 12681,
											"end": 12701,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12676,
											"end": 12701,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12676,
											"end": 12701,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12715,
											"end": 12735,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 12733,
											"end": 12734,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12715,
											"end": 12735,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 12715,
											"end": 12735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12715,
											"end": 12735,
											"name": "tag",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 12715,
											"end": 12735,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12710,
											"end": 12735,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12710,
											"end": 12735,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12759,
											"end": 12760,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12756,
											"end": 12757,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12752,
											"end": 12761,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12744,
											"end": 12761,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12744,
											"end": 12761,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12783,
											"end": 12784,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12777,
											"end": 12781,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12774,
											"end": 12785,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 12771,
											"end": 12808,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12771,
											"end": 12808,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 12771,
											"end": 12808,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12788,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 12788,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 12788,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12788,
											"end": 12806,
											"name": "tag",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 12788,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12771,
											"end": 12808,
											"name": "tag",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 12771,
											"end": 12808,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12621,
											"end": 12815,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12621,
											"end": 12815,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12621,
											"end": 12815,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12621,
											"end": 12815,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12621,
											"end": 12815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12821,
											"end": 12993,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 12821,
											"end": 12993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12961,
											"end": 12985,
											"name": "PUSH",
											"source": 8,
											"value": "496E73756666696369656E74206C697175696469747900000000000000000000"
										},
										{
											"begin": 12957,
											"end": 12958,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12949,
											"end": 12955,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12945,
											"end": 12959,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12938,
											"end": 12986,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12821,
											"end": 12993,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12821,
											"end": 12993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12999,
											"end": 13365,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 12999,
											"end": 13365,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13141,
											"end": 13144,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13162,
											"end": 13229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 13226,
											"end": 13228,
											"name": "PUSH",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 13221,
											"end": 13224,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13162,
											"end": 13229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 13162,
											"end": 13229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13162,
											"end": 13229,
											"name": "tag",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 13162,
											"end": 13229,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13155,
											"end": 13229,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13155,
											"end": 13229,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13238,
											"end": 13331,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 13327,
											"end": 13330,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13238,
											"end": 13331,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 13238,
											"end": 13331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13238,
											"end": 13331,
											"name": "tag",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 13238,
											"end": 13331,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13356,
											"end": 13358,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13351,
											"end": 13354,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13347,
											"end": 13359,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13340,
											"end": 13359,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13340,
											"end": 13359,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12999,
											"end": 13365,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12999,
											"end": 13365,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12999,
											"end": 13365,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12999,
											"end": 13365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13371,
											"end": 13790,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 13371,
											"end": 13790,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13537,
											"end": 13541,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13575,
											"end": 13577,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13564,
											"end": 13573,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13560,
											"end": 13578,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13552,
											"end": 13578,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13552,
											"end": 13578,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13624,
											"end": 13633,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13618,
											"end": 13622,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13614,
											"end": 13634,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13610,
											"end": 13611,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13599,
											"end": 13608,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13612,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13588,
											"end": 13635,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13652,
											"end": 13783,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 13778,
											"end": 13782,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13652,
											"end": 13783,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 13652,
											"end": 13783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13652,
											"end": 13783,
											"name": "tag",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 13652,
											"end": 13783,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13644,
											"end": 13783,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13644,
											"end": 13783,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13371,
											"end": 13790,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13371,
											"end": 13790,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13371,
											"end": 13790,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13371,
											"end": 13790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13796,
											"end": 13976,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 13796,
											"end": 13976,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13936,
											"end": 13968,
											"name": "PUSH",
											"source": 8,
											"value": "496E73756666696369656E74206C69717569646974792072656D6F7665640000"
										},
										{
											"begin": 13932,
											"end": 13933,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13924,
											"end": 13930,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13920,
											"end": 13934,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13913,
											"end": 13969,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13796,
											"end": 13976,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13796,
											"end": 13976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13982,
											"end": 14348,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 13982,
											"end": 14348,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14124,
											"end": 14127,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14145,
											"end": 14212,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 14209,
											"end": 14211,
											"name": "PUSH",
											"source": 8,
											"value": "1E"
										},
										{
											"begin": 14204,
											"end": 14207,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14145,
											"end": 14212,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 14145,
											"end": 14212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14145,
											"end": 14212,
											"name": "tag",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 14145,
											"end": 14212,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14138,
											"end": 14212,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14138,
											"end": 14212,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14221,
											"end": 14314,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 14310,
											"end": 14313,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14221,
											"end": 14314,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 14221,
											"end": 14314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14221,
											"end": 14314,
											"name": "tag",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 14221,
											"end": 14314,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14339,
											"end": 14341,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14334,
											"end": 14337,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14330,
											"end": 14342,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14323,
											"end": 14342,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14323,
											"end": 14342,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13982,
											"end": 14348,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13982,
											"end": 14348,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13982,
											"end": 14348,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13982,
											"end": 14348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14354,
											"end": 14773,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 14354,
											"end": 14773,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14520,
											"end": 14524,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14558,
											"end": 14560,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14547,
											"end": 14556,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14543,
											"end": 14561,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14535,
											"end": 14561,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14535,
											"end": 14561,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14607,
											"end": 14616,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14601,
											"end": 14605,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14597,
											"end": 14617,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14593,
											"end": 14594,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14582,
											"end": 14591,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14578,
											"end": 14595,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14571,
											"end": 14618,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14635,
											"end": 14766,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 14761,
											"end": 14765,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14635,
											"end": 14766,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 14635,
											"end": 14766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14635,
											"end": 14766,
											"name": "tag",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 14635,
											"end": 14766,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14627,
											"end": 14766,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14627,
											"end": 14766,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14354,
											"end": 14773,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14354,
											"end": 14773,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14354,
											"end": 14773,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14354,
											"end": 14773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14779,
											"end": 15443,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 14779,
											"end": 15443,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14984,
											"end": 14988,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15022,
											"end": 15025,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 15011,
											"end": 15020,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15007,
											"end": 15026,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14999,
											"end": 15026,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14999,
											"end": 15026,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15036,
											"end": 15107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 15104,
											"end": 15105,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15093,
											"end": 15102,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15089,
											"end": 15106,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15080,
											"end": 15086,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 15036,
											"end": 15107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 15036,
											"end": 15107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15036,
											"end": 15107,
											"name": "tag",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 15036,
											"end": 15107,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15117,
											"end": 15189,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 15185,
											"end": 15187,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15174,
											"end": 15183,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15170,
											"end": 15188,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15161,
											"end": 15167,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 15117,
											"end": 15189,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 15117,
											"end": 15189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15117,
											"end": 15189,
											"name": "tag",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 15117,
											"end": 15189,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15199,
											"end": 15271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "504"
										},
										{
											"begin": 15267,
											"end": 15269,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15256,
											"end": 15265,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15252,
											"end": 15270,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15243,
											"end": 15249,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 15199,
											"end": 15271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 15199,
											"end": 15271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15199,
											"end": 15271,
											"name": "tag",
											"source": 8,
											"value": "504"
										},
										{
											"begin": 15199,
											"end": 15271,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15281,
											"end": 15353,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 15349,
											"end": 15351,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 15338,
											"end": 15347,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15334,
											"end": 15352,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15325,
											"end": 15331,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 15281,
											"end": 15353,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 15281,
											"end": 15353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15281,
											"end": 15353,
											"name": "tag",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 15281,
											"end": 15353,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15363,
											"end": 15436,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 15431,
											"end": 15434,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 15420,
											"end": 15429,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15416,
											"end": 15435,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15407,
											"end": 15413,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15363,
											"end": 15436,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 15363,
											"end": 15436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15363,
											"end": 15436,
											"name": "tag",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 15363,
											"end": 15436,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14779,
											"end": 15443,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 14779,
											"end": 15443,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 14779,
											"end": 15443,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14779,
											"end": 15443,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14779,
											"end": 15443,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14779,
											"end": 15443,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14779,
											"end": 15443,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14779,
											"end": 15443,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14779,
											"end": 15443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15449,
											"end": 15630,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 15449,
											"end": 15630,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15589,
											"end": 15622,
											"name": "PUSH",
											"source": 8,
											"value": "496E73756666696369656E74206C69717569646974792070726F766964656400"
										},
										{
											"begin": 15585,
											"end": 15586,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15577,
											"end": 15583,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15573,
											"end": 15587,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15566,
											"end": 15623,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15449,
											"end": 15630,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15449,
											"end": 15630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15636,
											"end": 16002,
											"name": "tag",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 15636,
											"end": 16002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15778,
											"end": 15781,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15799,
											"end": 15866,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 15863,
											"end": 15865,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 15858,
											"end": 15861,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15799,
											"end": 15866,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 15799,
											"end": 15866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15799,
											"end": 15866,
											"name": "tag",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 15799,
											"end": 15866,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15792,
											"end": 15866,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15792,
											"end": 15866,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15875,
											"end": 15968,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 15964,
											"end": 15967,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15875,
											"end": 15968,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 15875,
											"end": 15968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15875,
											"end": 15968,
											"name": "tag",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 15875,
											"end": 15968,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15993,
											"end": 15995,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15988,
											"end": 15991,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15984,
											"end": 15996,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15977,
											"end": 15996,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15977,
											"end": 15996,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15636,
											"end": 16002,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15636,
											"end": 16002,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15636,
											"end": 16002,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15636,
											"end": 16002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16008,
											"end": 16427,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 16008,
											"end": 16427,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16174,
											"end": 16178,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16212,
											"end": 16214,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16201,
											"end": 16210,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16197,
											"end": 16215,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16189,
											"end": 16215,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16189,
											"end": 16215,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16261,
											"end": 16270,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16255,
											"end": 16259,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16251,
											"end": 16271,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16247,
											"end": 16248,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16236,
											"end": 16245,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16232,
											"end": 16249,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16225,
											"end": 16272,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16289,
											"end": 16420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 16415,
											"end": 16419,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16289,
											"end": 16420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 16289,
											"end": 16420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16289,
											"end": 16420,
											"name": "tag",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 16289,
											"end": 16420,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16281,
											"end": 16420,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16281,
											"end": 16420,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16008,
											"end": 16427,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16008,
											"end": 16427,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16008,
											"end": 16427,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16008,
											"end": 16427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/blockmagic_hackaton/Dex_functionalities/LPToken.sol",
								"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addLiquidityInUSD(uint256)": "64e7b85a",
							"getAmountOut(uint256,address)": "f140a35a",
							"getDAIperLinkMarketPrice()": "a996944c",
							"getDAIperLinkOurDEXPrice()": "729132f9",
							"getLPTokenDetails(address)": "bff46a4c",
							"getPrice(address)": "41976e09",
							"getPriceRatio()": "54b2a769",
							"getReserves()": "0902f1ac",
							"lpToken()": "5fcbd285",
							"removeLiquidityInUSD(uint256)": "5444a39d",
							"reserve0()": "443cb4bc",
							"reserve1()": "5a76f25e",
							"swapInUSD(uint256,address)": "d0e7e07e",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceFeed0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceFeed1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_lpToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reserve0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reserve1\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reserve0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reserve1\",\"type\":\"uint256\"}],\"name\":\"LiquidityRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"usdAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidityInUSD\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDAIperLinkMarketPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDAIperLinkOurDEXPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getLPTokenDetails\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceRatio\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpToken\",\"outputs\":[{\"internalType\":\"contract LPToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"usdAmount\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityInUSD\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"usdAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"}],\"name\":\"swapInUSD\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addLiquidityInUSD(uint256)\":{\"details\":\"External function to add liquidity in USD equivalent without enforcing ratio.\",\"params\":{\"usdAmount\":\"Total USD value of liquidity to add.\"}},\"constructor\":{\"details\":\"Constructor to initialize the pair contract with token addresses and price feeds.\",\"params\":{\"_lpToken\":\"Address of the LP token contract.\",\"_priceFeed0\":\"Address of the Chainlink price feed for token0/USD.\",\"_priceFeed1\":\"Address of the Chainlink price feed for token1/USD.\",\"_token0\":\"Address of token0.\",\"_token1\":\"Address of token1.\"}},\"getDAIperLinkMarketPrice()\":{\"details\":\"View function to get the current market price ratio of token0 to token1 using Chainlink price feeds.\",\"returns\":{\"_0\":\"uint256 Market price ratio of token0 to token1.\"}},\"getDAIperLinkOurDEXPrice()\":{\"details\":\"View function to get the price of token0 in terms of token1 using the AMM formula.\",\"returns\":{\"_0\":\"uint256 Price of token0 in terms of token1.\"}},\"getLPTokenDetails(address)\":{\"details\":\"View function to get LP token details and balance for a specific address.\",\"params\":{\"user\":\"Address of the user to check.\"},\"returns\":{\"_0\":\"(address, uint256) Address of the LP token and balance of the user.\"}},\"getPrice(address)\":{\"details\":\"View function to get the current price of a token from the Chainlink price feed.\",\"params\":{\"inputToken\":\"Address of the token to get the price for.\"},\"returns\":{\"_0\":\"int Current price of the token in USD.\"}},\"getPriceRatio()\":{\"details\":\"View function to get the price ratio between token0 and token1.\",\"returns\":{\"_0\":\"int Price ratio of token0 to token1.\"}},\"getReserves()\":{\"details\":\"View function to get the current reserves of the pool.\",\"returns\":{\"_0\":\"(uint256, uint256) Reserves of token0 and token1.\"}},\"removeLiquidityInUSD(uint256)\":{\"details\":\"External function to remove liquidity in USD equivalent without enforcing ratio.\",\"params\":{\"usdAmount\":\"Total USD value of liquidity to remove.\"}},\"swapInUSD(uint256,address)\":{\"details\":\"External function to swap tokens using USD value.\",\"params\":{\"inputToken\":\"Address of the input token.\",\"usdAmount\":\"Amount of USD to swap from inputToken to outputToken.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":\"Pair\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/blockmagic_hackaton/Dex_functionalities/LPToken.sol\":{\"keccak256\":\"0x612e79f9c478d3f30fdf0370bb075f51f6263af1f73776bf9dfa9efcd40fcf87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5f788cba7194c6ca095727f5635b2475642c61bb914d8d5915b9cd84860d2b2\",\"dweb:/ipfs/QmXqfurBngJgEyRZ5jVnfkQ3kBrTvXsLHZjg1E8vKrepBu\"]},\"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol\":{\"keccak256\":\"0xa5dd93a55c47b8bc4652299f8ce41aa9bce8ad05b445afa69ad7b40e7009c059\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fffc5a7e5f2e203201846cea35d827ff0a8a96a5743d811793378db27827bd48\",\"dweb:/ipfs/QmYni9Zh6XKwwbnjiXzTExugwQdrjmLVSmBwqi89RZbUZs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 882,
								"contract": "contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol:Pair",
								"label": "token0",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 884,
								"contract": "contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol:Pair",
								"label": "token1",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 887,
								"contract": "contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol:Pair",
								"label": "lpToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(LPToken)875"
							},
							{
								"astId": 889,
								"contract": "contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol:Pair",
								"label": "reserve0",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 891,
								"contract": "contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol:Pair",
								"label": "reserve1",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 894,
								"contract": "contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol:Pair",
								"label": "priceFeed0",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(AggregatorV3Interface)45"
							},
							{
								"astId": 897,
								"contract": "contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol:Pair",
								"label": "priceFeed1",
								"offset": 0,
								"slot": "6",
								"type": "t_contract(AggregatorV3Interface)45"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(AggregatorV3Interface)45": {
								"encoding": "inplace",
								"label": "contract AggregatorV3Interface",
								"numberOfBytes": "20"
							},
							"t_contract(LPToken)875": {
								"encoding": "inplace",
								"label": "contract LPToken",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						]
					},
					"id": 46,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "67:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "102:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "110:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "136:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "136:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:7:0"
									},
									"scope": 45,
									"src": "93:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "156:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "193:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "193:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:15:0"
									},
									"scope": 45,
									"src": "147:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "221:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "254:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:9:0"
									},
									"scope": 45,
									"src": "212:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "276:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "301:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "294:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 17,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "294:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "288:25:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "344:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "337:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 20,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "337:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "360:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "353:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "353:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "376:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "368:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "395:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "387:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "413:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "406:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 28,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "406:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:93:0"
									},
									"scope": 45,
									"src": "267:163:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "443:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "458:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "503:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "496:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 33,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "496:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "519:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "512:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 35,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "512:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "535:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "527:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "554:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "546:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "572:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "565:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 41,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:93:0"
									},
									"scope": 45,
									"src": "434:155:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 46,
							"src": "57:534:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:560:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							182
						],
						"IERC20Errors": [
							87
						],
						"IERC721Errors": [
							135
						]
					},
					"id": 183,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 47,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 48,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 87,
							"linearizedBaseContracts": [
								87
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 57,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 58,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 62,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 59,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 67,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 76,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 81,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 86,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 183,
							"src": "278:1764:1",
							"usedErrors": [
								57,
								62,
								67,
								76,
								81,
								86
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 88,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 135,
							"linearizedBaseContracts": [
								135
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 93,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 98,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 107,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 112,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 117,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 118,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 124,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 129,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 134,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 183,
							"src": "2186:2092:1",
							"usedErrors": [
								93,
								98,
								107,
								112,
								117,
								124,
								129,
								134
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 136,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 182,
							"linearizedBaseContracts": [
								182
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 147,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 152,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 157,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 164,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 169,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 174,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 181,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 183,
							"src": "4424:2107:1",
							"usedErrors": [
								147,
								152,
								157,
								164,
								169,
								174,
								181
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							831
						],
						"ERC20": [
							697
						],
						"IERC20": [
							775
						],
						"IERC20Errors": [
							87
						],
						"IERC20Metadata": [
							801
						]
					},
					"id": 698,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 184,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 186,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 698,
							"sourceUnit": 776,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 185,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 775,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 188,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 698,
							"sourceUnit": 802,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 187,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 801,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 190,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 698,
							"sourceUnit": 832,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 189,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 831,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 192,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 698,
							"sourceUnit": 183,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 191,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 87,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 194,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 831,
										"src": "1428:7:2"
									},
									"id": 195,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 196,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 775,
										"src": "1437:6:2"
									},
									"id": 197,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 198,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 801,
										"src": "1445:14:2"
									},
									"id": 199,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 200,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 87,
										"src": "1461:12:2"
									},
									"id": 201,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 193,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 697,
							"linearizedBaseContracts": [
								697,
								87,
								801,
								775,
								831
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 205,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 697,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 204,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 202,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 203,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 211,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 697,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 210,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 206,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 209,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 207,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 208,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 213,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 697,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 212,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 215,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 697,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 214,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 217,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 697,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 216,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 225,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 226,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 220,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 228,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 229,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 230,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 234,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 219,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 221,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 697,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										788
									],
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 240,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 215,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 239,
												"id": 241,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 237,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 697,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										794
									],
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 249,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 217,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 248,
												"id": 250,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 246,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 697,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										800
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 257,
												"id": 259,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 255,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 697,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										724
									],
									"body": {
										"id": 269,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 267,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 213,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 266,
												"id": 268,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 697,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										732
									],
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 278,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 280,
													"indexExpression": {
														"id": 279,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 277,
												"id": 281,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 697,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 306,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													294
												],
												"declarations": [
													{
														"constant": false,
														"id": 294,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 306,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 293,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 297,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 295,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 299,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 294,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 300,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 301,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 298,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 303,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 292,
												"id": 305,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 290,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 697,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										752
									],
									"body": {
										"id": 323,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 317,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 211,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 319,
														"indexExpression": {
															"id": 318,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 321,
													"indexExpression": {
														"id": 320,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 316,
												"id": 322,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 308,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 697,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										762
									],
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													335
												],
												"declarations": [
													{
														"constant": false,
														"id": 335,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 347,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 334,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 338,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 336,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 340,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 341,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 342,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 339,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															588,
															648
														],
														"referencedDeclaration": 588,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 333,
												"id": 346,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 325,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 331,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 697,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										774
									],
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													361
												],
												"declarations": [
													{
														"constant": false,
														"id": 361,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 379,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 360,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 364,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 362,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 366,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 367,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 368,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 365,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 370,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 372,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 373,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 374,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 371,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 359,
												"id": 378,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 357,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 697,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 390,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 383,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 391,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 394,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 404,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 403,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 399,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 398,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 397,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 396,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 62,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 402,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 405,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 408,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 406,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 409,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 419,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 418,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 414,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 413,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 412,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 411,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 67,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 417,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 421,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 422,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 423,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 420,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 697,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 503,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 437,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 440,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 438,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 441,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 474,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																449
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 449,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 474,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 448,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 453,
															"initialValue": {
																"baseExpression": {
																	"id": 450,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 452,
																"indexExpression": {
																	"id": 451,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 430,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 454,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 455,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 434,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 464,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 463,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 458,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 430,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 459,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 449,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 460,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 434,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 457,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 57,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 461,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 462,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 473,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 465,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 205,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 467,
																			"indexExpression": {
																				"id": 466,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 430,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 468,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 449,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 469,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 434,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 472,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 475,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 447,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 443,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 213,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 444,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 434,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 446,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 476,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 432,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 477,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 480,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 495,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 494,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 488,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 205,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 490,
																			"indexExpression": {
																				"id": 489,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 432,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 491,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 434,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 493,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 496,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 487,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 486,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 482,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 213,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 483,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 434,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 485,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 498,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 499,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 500,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 497,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 709,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 502,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 697,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 536,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 512,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 507,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 515,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 513,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 516,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 526,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 525,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 521,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 520,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 519,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 518,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 67,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 524,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 528,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 532,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 533,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 527,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 505,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 697,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 545,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 540,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 546,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 549,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 559,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 558,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 554,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 553,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 552,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 551,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 62,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 557,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 561,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 563,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 562,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 566,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 560,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 697,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 587,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 581,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 582,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 583,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 580,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															588,
															648
														],
														"referencedDeclaration": 648,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 697,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 600,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 601,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 604,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 614,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 613,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 609,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 608,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 607,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 606,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 81,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 612,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 615,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 616,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 619,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 629,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 628,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 624,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 623,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 622,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 621,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 86,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 627,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 630,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 211,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 633,
															"indexExpression": {
																"id": 631,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 591,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 634,
														"indexExpression": {
															"id": 632,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 635,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 638,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 597,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 646,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 645,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 640,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 591,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 641,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 593,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 642,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 595,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 639,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 718,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 644,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 596,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 697,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													659
												],
												"declarations": [
													{
														"constant": false,
														"id": 659,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 695,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 658,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 664,
												"initialValue": {
													"arguments": [
														{
															"id": 661,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 662,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 660,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 665,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 659,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 667,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 666,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 669,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 670,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 694,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 693,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 672,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 673,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 682,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 681,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 676,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 653,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 677,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 659,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 678,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 655,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 675,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 76,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 679,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 680,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 692,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 684,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 651,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 685,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 653,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 688,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 686,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 659,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 687,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 655,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 689,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 683,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				588,
																				648
																			],
																			"referencedDeclaration": 648,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 691,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 697,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 698,
							"src": "1401:9741:2",
							"usedErrors": [
								57,
								62,
								67,
								76,
								81,
								86
							],
							"usedEvents": [
								709,
								718
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							775
						]
					},
					"id": 776,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 699,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 700,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 775,
							"linearizedBaseContracts": [
								775
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 701,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 709,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 705,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 718,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 724,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 775,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 725,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 732,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 775,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 739,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 775,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 752,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 775,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 762,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 759,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 775,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 763,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 774,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 771,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 775,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 776,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								709,
								718
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							775
						],
						"IERC20Metadata": [
							801
						]
					},
					"id": 802,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 777,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 779,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 802,
							"sourceUnit": 776,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 778,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 775,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 781,
										"name": "IERC20",
										"nameLocations": [
											"305:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 775,
										"src": "305:6:4"
									},
									"id": 782,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 780,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 801,
							"linearizedBaseContracts": [
								801,
								775
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 783,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 788,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:4"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "416:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 785,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:4"
									},
									"scope": 801,
									"src": "377:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 789,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 794,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:4"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "539:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 791,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:4"
									},
									"scope": 801,
									"src": "498:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 795,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 800,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 797,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 801,
									"src": "630:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 802,
							"src": "277:405:4",
							"usedErrors": [],
							"usedEvents": [
								709,
								718
							]
						}
					],
					"src": "125:558:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							831
						]
					},
					"id": 832,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 803,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 804,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 831,
							"linearizedBaseContracts": [
								831
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 812,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 809,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 808,
												"id": 811,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 831,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 821,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 818,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 817,
												"id": 820,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 815,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 831,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 829,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 826,
												"id": 828,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 831,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 832,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"contracts/blockmagic_hackaton/Dex_functionalities/LPToken.sol": {
				"ast": {
					"absolutePath": "contracts/blockmagic_hackaton/Dex_functionalities/LPToken.sol",
					"exportedSymbols": {
						"Context": [
							831
						],
						"ERC20": [
							697
						],
						"IERC20": [
							775
						],
						"IERC20Errors": [
							87
						],
						"IERC20Metadata": [
							801
						],
						"LPToken": [
							875
						]
					},
					"id": 876,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 833,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 834,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 876,
							"sourceUnit": 698,
							"src": "61:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 835,
										"name": "ERC20",
										"nameLocations": [
											"140:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 697,
										"src": "140:5:6"
									},
									"id": 836,
									"nodeType": "InheritanceSpecifier",
									"src": "140:5:6"
								}
							],
							"canonicalName": "LPToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 875,
							"linearizedBaseContracts": [
								875,
								697,
								87,
								801,
								775,
								831
							],
							"name": "LPToken",
							"nameLocation": "129:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 847,
										"nodeType": "Block",
										"src": "227:2:6",
										"statements": []
									},
									"id": 848,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 843,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 838,
													"src": "213:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 844,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 840,
													"src": "219:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 845,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 842,
												"name": "ERC20",
												"nameLocations": [
													"207:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 697,
												"src": "207:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "207:19:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "179:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "165:18:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 837,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "165:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "199:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "185:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 839,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "185:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "164:42:6"
									},
									"returnParameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "227:0:6"
									},
									"scope": 875,
									"src": "153:76:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 860,
										"nodeType": "Block",
										"src": "288:36:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 856,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "305:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 857,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "309:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 855,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 537,
														"src": "299:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "299:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 859,
												"nodeType": "ExpressionStatement",
												"src": "299:17:6"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 861,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "246:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "259:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "251:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "251:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "271:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "263:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "263:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "250:28:6"
									},
									"returnParameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "288:0:6"
									},
									"scope": 875,
									"src": "237:87:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 873,
										"nodeType": "Block",
										"src": "385:38:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 869,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "402:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 870,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "408:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 868,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "396:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "396:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 872,
												"nodeType": "ExpressionStatement",
												"src": "396:19:6"
											}
										]
									},
									"functionSelector": "9dc29fac",
									"id": 874,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "341:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "354:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "346:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "368:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "360:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "360:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:30:6"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "385:0:6"
									},
									"scope": 875,
									"src": "332:91:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 876,
							"src": "120:306:6",
							"usedErrors": [
								57,
								62,
								67,
								76,
								81,
								86
							],
							"usedEvents": [
								709,
								718
							]
						}
					],
					"src": "33:395:6"
				},
				"id": 6
			},
			"contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol": {
				"ast": {
					"absolutePath": "contracts/blockmagic_hackaton/Dex_functionalities/Pair_v6_LP.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						],
						"Context": [
							831
						],
						"ERC20": [
							697
						],
						"IERC20": [
							775
						],
						"IERC20Errors": [
							87
						],
						"IERC20Metadata": [
							801
						],
						"LPToken": [
							875
						],
						"Pair": [
							1737
						]
					},
					"id": 1738,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 877,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:7"
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"id": 878,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1738,
							"sourceUnit": 46,
							"src": "61:76:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 879,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1738,
							"sourceUnit": 776,
							"src": "139:56:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/blockmagic_hackaton/Dex_functionalities/LPToken.sol",
							"file": "./LPToken.sol",
							"id": 880,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1738,
							"sourceUnit": 876,
							"src": "197:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Pair",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1737,
							"linearizedBaseContracts": [
								1737
							],
							"name": "Pair",
							"nameLocation": "261:4:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "0dfe1681",
									"id": 882,
									"mutability": "mutable",
									"name": "token0",
									"nameLocation": "325:6:7",
									"nodeType": "VariableDeclaration",
									"scope": 1737,
									"src": "310:21:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 881,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "310:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d21220a7",
									"id": 884,
									"mutability": "mutable",
									"name": "token1",
									"nameLocation": "353:6:7",
									"nodeType": "VariableDeclaration",
									"scope": 1737,
									"src": "338:21:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 883,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "338:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5fcbd285",
									"id": 887,
									"mutability": "mutable",
									"name": "lpToken",
									"nameLocation": "381:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1737,
									"src": "366:22:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_LPToken_$875",
										"typeString": "contract LPToken"
									},
									"typeName": {
										"id": 886,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 885,
											"name": "LPToken",
											"nameLocations": [
												"366:7:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 875,
											"src": "366:7:7"
										},
										"referencedDeclaration": 875,
										"src": "366:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_LPToken_$875",
											"typeString": "contract LPToken"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "443cb4bc",
									"id": 889,
									"mutability": "mutable",
									"name": "reserve0",
									"nameLocation": "485:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 1737,
									"src": "470:23:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 888,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "470:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5a76f25e",
									"id": 891,
									"mutability": "mutable",
									"name": "reserve1",
									"nameLocation": "515:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 1737,
									"src": "500:23:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 890,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "500:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 894,
									"mutability": "mutable",
									"name": "priceFeed0",
									"nameLocation": "608:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1737,
									"src": "577:41:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 893,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 892,
											"name": "AggregatorV3Interface",
											"nameLocations": [
												"577:21:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 45,
											"src": "577:21:7"
										},
										"referencedDeclaration": 45,
										"src": "577:21:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 897,
									"mutability": "mutable",
									"name": "priceFeed1",
									"nameLocation": "656:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1737,
									"src": "625:41:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 896,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 895,
											"name": "AggregatorV3Interface",
											"nameLocations": [
												"625:21:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 45,
											"src": "625:21:7"
										},
										"referencedDeclaration": 45,
										"src": "625:21:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "0103e5727ee41ce8741fbdf27e5e596deb21dbe5ae93901499306d10f28d1ef7",
									"id": 911,
									"name": "LiquidityAdded",
									"nameLocation": "721:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"indexed": true,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "752:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "736:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "736:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "770:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "762:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "762:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "787:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "779:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "779:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "804:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "796:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve0",
												"nameLocation": "823:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "815:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "815:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve1",
												"nameLocation": "841:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "833:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "735:115:7"
									},
									"src": "715:136:7"
								},
								{
									"anonymous": false,
									"eventSelector": "04f7e4f53152cb2cd0e424b2fc990199f0ed4255c7a97a848131f1eeff165f7b",
									"id": 925,
									"name": "LiquidityRemoved",
									"nameLocation": "902:16:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"indexed": true,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "935:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "919:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "919:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "953:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "945:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "945:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "970:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "962:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "987:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "979:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "979:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 921,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve0",
												"nameLocation": "1006:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "998:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "998:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve1",
												"nameLocation": "1024:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "1016:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1016:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "918:115:7"
									},
									"src": "896:138:7"
								},
								{
									"body": {
										"id": 965,
										"nodeType": "Block",
										"src": "1713:216:7",
										"statements": [
											{
												"expression": {
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 939,
														"name": "token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "1724:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 940,
														"name": "_token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "1733:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1724:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 942,
												"nodeType": "ExpressionStatement",
												"src": "1724:16:7"
											},
											{
												"expression": {
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 943,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "1751:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 944,
														"name": "_token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "1760:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1751:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 946,
												"nodeType": "ExpressionStatement",
												"src": "1751:16:7"
											},
											{
												"expression": {
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 947,
														"name": "priceFeed0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "1778:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 949,
																"name": "_priceFeed0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 932,
																"src": "1813:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 948,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "1791:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 950,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1791:34:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "1778:47:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 952,
												"nodeType": "ExpressionStatement",
												"src": "1778:47:7"
											},
											{
												"expression": {
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 953,
														"name": "priceFeed1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "1836:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 955,
																"name": "_priceFeed1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 934,
																"src": "1871:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 954,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "1849:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 956,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1849:34:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "1836:47:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 958,
												"nodeType": "ExpressionStatement",
												"src": "1836:47:7"
											},
											{
												"expression": {
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 959,
														"name": "lpToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "1894:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_LPToken_$875",
															"typeString": "contract LPToken"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 961,
																"name": "_lpToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 936,
																"src": "1912:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 960,
															"name": "LPToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "1904:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LPToken_$875_$",
																"typeString": "type(contract LPToken)"
															}
														},
														"id": 962,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1904:17:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_LPToken_$875",
															"typeString": "contract LPToken"
														}
													},
													"src": "1894:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_LPToken_$875",
														"typeString": "contract LPToken"
													}
												},
												"id": 964,
												"nodeType": "ExpressionStatement",
												"src": "1894:27:7"
											}
										]
									},
									"documentation": {
										"id": 926,
										"nodeType": "StructuredDocumentation",
										"src": "1042:407:7",
										"text": " @dev Constructor to initialize the pair contract with token addresses and price feeds.\n @param _token0 Address of token0.\n @param _token1 Address of token1.\n @param _priceFeed0 Address of the Chainlink price feed for token0/USD.\n @param _priceFeed1 Address of the Chainlink price feed for token1/USD.\n @param _lpToken Address of the LP token contract."
									},
									"id": 966,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "_token0",
												"nameLocation": "1485:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "1477:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1477:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "_token1",
												"nameLocation": "1511:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "1503:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "_priceFeed0",
												"nameLocation": "1537:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "1529:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1529:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "_priceFeed1",
												"nameLocation": "1596:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "1588:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1588:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "_lpToken",
												"nameLocation": "1656:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "1648:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 935,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1648:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1466:246:7"
									},
									"returnParameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1713:0:7"
									},
									"scope": 1737,
									"src": "1455:474:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1071,
										"nodeType": "Block",
										"src": "2177:695:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 978,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2216:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2220:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2216:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 982,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2236:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Pair_$1737",
																		"typeString": "contract Pair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Pair_$1737",
																		"typeString": "contract Pair"
																	}
																],
																"id": 981,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2228:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 980,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2228:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2228:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 984,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "2243:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 975,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 882,
																	"src": "2195:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 974,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 775,
																"src": "2188:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$775_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2188:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$775",
																"typeString": "contract IERC20"
															}
														},
														"id": 977,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2203:12:7",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 774,
														"src": "2188:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2188:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 986,
												"nodeType": "ExpressionStatement",
												"src": "2188:63:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 991,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2290:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2294:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2290:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 995,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2310:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Pair_$1737",
																		"typeString": "contract Pair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Pair_$1737",
																		"typeString": "contract Pair"
																	}
																],
																"id": 994,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2302:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 993,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2302:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2302:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 997,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "2317:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 988,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 884,
																	"src": "2269:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 987,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 775,
																"src": "2262:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$775_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2262:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$775",
																"typeString": "contract IERC20"
															}
														},
														"id": 990,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2277:12:7",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 774,
														"src": "2262:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2262:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 999,
												"nodeType": "ExpressionStatement",
												"src": "2262:63:7"
											},
											{
												"assignments": [
													1001
												],
												"declarations": [
													{
														"constant": false,
														"id": 1001,
														"mutability": "mutable",
														"name": "liquidity",
														"nameLocation": "2346:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1071,
														"src": "2338:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1000,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2338:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1002,
												"nodeType": "VariableDeclarationStatement",
												"src": "2338:17:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1003,
																"name": "lpToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 887,
																"src": "2370:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_LPToken_$875",
																	"typeString": "contract LPToken"
																}
															},
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2378:11:7",
															"memberName": "totalSupply",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 270,
															"src": "2370:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																"typeString": "function () view external returns (uint256)"
															}
														},
														"id": 1005,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2370:21:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1006,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2395:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2370:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1036,
													"nodeType": "Block",
													"src": "2466:130:7",
													"statements": [
														{
															"expression": {
																"id": 1034,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1017,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1001,
																	"src": "2481:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1025,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1023,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1019,
																					"name": "amount0",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 969,
																					"src": "2497:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"expression": {
																							"id": 1020,
																							"name": "lpToken",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 887,
																							"src": "2507:7:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_LPToken_$875",
																								"typeString": "contract LPToken"
																							}
																						},
																						"id": 1021,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "2515:11:7",
																						"memberName": "totalSupply",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 270,
																						"src": "2507:19:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																							"typeString": "function () view external returns (uint256)"
																						}
																					},
																					"id": 1022,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2507:21:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2497:31:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1024,
																				"name": "reserve0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 889,
																				"src": "2531:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2497:42:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1032,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1030,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1026,
																					"name": "amount1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 971,
																					"src": "2541:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"expression": {
																							"id": 1027,
																							"name": "lpToken",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 887,
																							"src": "2551:7:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_LPToken_$875",
																								"typeString": "contract LPToken"
																							}
																						},
																						"id": 1028,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "2559:11:7",
																						"memberName": "totalSupply",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 270,
																						"src": "2551:19:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																							"typeString": "function () view external returns (uint256)"
																						}
																					},
																					"id": 1029,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2551:21:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2541:31:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1031,
																				"name": "reserve1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 891,
																				"src": "2575:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2541:42:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1018,
																		"name": "min",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1711,
																		"src": "2493:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2493:91:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2481:103:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1035,
															"nodeType": "ExpressionStatement",
															"src": "2481:103:7"
														}
													]
												},
												"id": 1037,
												"nodeType": "IfStatement",
												"src": "2366:230:7",
												"trueBody": {
													"id": 1016,
													"nodeType": "Block",
													"src": "2398:62:7",
													"statements": [
														{
															"expression": {
																"id": 1014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1008,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1001,
																	"src": "2413:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1010,
																				"name": "amount0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 969,
																				"src": "2430:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1011,
																				"name": "amount1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 971,
																				"src": "2440:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2430:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1009,
																		"name": "sqrt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1691,
																		"src": "2425:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2425:23:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2413:35:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1015,
															"nodeType": "ExpressionStatement",
															"src": "2413:35:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1039,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1001,
																"src": "2616:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2628:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2616:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74206c69717569646974792070726f7669646564",
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2631:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_20ad566edbd5d53cb1cde2112f5439aeea9b1d035ff04f86720a4c46f6412c00",
																"typeString": "literal_string \"Insufficient liquidity provided\""
															},
															"value": "Insufficient liquidity provided"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_20ad566edbd5d53cb1cde2112f5439aeea9b1d035ff04f86720a4c46f6412c00",
																"typeString": "literal_string \"Insufficient liquidity provided\""
															}
														],
														"id": 1038,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2608:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2608:57:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1044,
												"nodeType": "ExpressionStatement",
												"src": "2608:57:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1048,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2689:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2693:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2689:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1050,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1001,
															"src": "2701:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1045,
															"name": "lpToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "2676:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_LPToken_$875",
																"typeString": "contract LPToken"
															}
														},
														"id": 1047,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2684:4:7",
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 861,
														"src": "2676:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2676:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1052,
												"nodeType": "ExpressionStatement",
												"src": "2676:35:7"
											},
											{
												"expression": {
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1053,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "2724:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1054,
														"name": "amount0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "2736:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2724:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1056,
												"nodeType": "ExpressionStatement",
												"src": "2724:19:7"
											},
											{
												"expression": {
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1057,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 891,
														"src": "2754:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1058,
														"name": "amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "2766:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2754:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1060,
												"nodeType": "ExpressionStatement",
												"src": "2754:19:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1062,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2804:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2808:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2804:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1064,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "2816:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1065,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "2825:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1066,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1001,
															"src": "2834:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1067,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "2845:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1068,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "2855:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1061,
														"name": "LiquidityAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "2789:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2789:75:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1070,
												"nodeType": "EmitStatement",
												"src": "2784:80:7"
											}
										]
									},
									"documentation": {
										"id": 967,
										"nodeType": "StructuredDocumentation",
										"src": "1937:169:7",
										"text": " @dev Internal function to add liquidity to the pool.\n @param amount0 Amount of token0 to add.\n @param amount1 Amount of token1 to add."
									},
									"id": 1072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "2121:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2142:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "2134:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2134:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2159:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "2151:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2151:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2133:34:7"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2177:0:7"
									},
									"scope": 1737,
									"src": "2112:760:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1129,
										"nodeType": "Block",
										"src": "3106:519:7",
										"statements": [
											{
												"assignments": [
													1079
												],
												"declarations": [
													{
														"constant": false,
														"id": 1079,
														"mutability": "mutable",
														"name": "price0",
														"nameLocation": "3190:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1129,
														"src": "3182:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1078,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3182:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1086,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1083,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 882,
																	"src": "3216:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1082,
																"name": "getPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1357,
																"src": "3207:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_int256_$",
																	"typeString": "function (address) view returns (int256)"
																}
															},
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3207:16:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1081,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3199:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1080,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3199:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3199:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3182:42:7"
											},
											{
												"assignments": [
													1088
												],
												"declarations": [
													{
														"constant": false,
														"id": 1088,
														"mutability": "mutable",
														"name": "price1",
														"nameLocation": "3243:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1129,
														"src": "3235:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1087,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3235:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1095,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1092,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 884,
																	"src": "3269:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1091,
																"name": "getPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1357,
																"src": "3260:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_int256_$",
																	"typeString": "function (address) view returns (int256)"
																}
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3260:16:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1090,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3252:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1089,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3252:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3252:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3235:42:7"
											},
											{
												"assignments": [
													1097
												],
												"declarations": [
													{
														"constant": false,
														"id": 1097,
														"mutability": "mutable",
														"name": "amount0",
														"nameLocation": "3393:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1129,
														"src": "3385:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1096,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3385:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1109,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1098,
																	"name": "usdAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "3404:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 1101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1099,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3416:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 1100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3420:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "3416:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																},
																"src": "3404:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1103,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3403:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3427:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1105,
																	"name": "price0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1079,
																	"src": "3431:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3427:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1107,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3426:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3403:35:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3385:53:7"
											},
											{
												"assignments": [
													1111
												],
												"declarations": [
													{
														"constant": false,
														"id": 1111,
														"mutability": "mutable",
														"name": "amount1",
														"nameLocation": "3457:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1129,
														"src": "3449:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1110,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3449:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1123,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1112,
																	"name": "usdAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "3468:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 1115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1113,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3480:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 1114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3484:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "3480:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																},
																"src": "3468:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1117,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3467:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3491:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1119,
																	"name": "price1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1088,
																	"src": "3495:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3491:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1121,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3490:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3467:35:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3449:53:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1125,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "3600:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1126,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "3609:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1124,
														"name": "addLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "3587:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3587:30:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1128,
												"nodeType": "ExpressionStatement",
												"src": "3587:30:7"
											}
										]
									},
									"documentation": {
										"id": 1073,
										"nodeType": "StructuredDocumentation",
										"src": "2880:165:7",
										"text": " @dev External function to add liquidity in USD equivalent without enforcing ratio.\n @param usdAmount Total USD value of liquidity to add."
									},
									"functionSelector": "64e7b85a",
									"id": 1130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityInUSD",
									"nameLocation": "3060:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "usdAmount",
												"nameLocation": "3086:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "3078:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3078:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3077:19:7"
									},
									"returnParameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3106:0:7"
									},
									"scope": 1737,
									"src": "3051:574:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1218,
										"nodeType": "Block",
										"src": "3822:614:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1137,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1133,
																"src": "3841:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3853:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3841:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74206c6971756964697479",
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3856:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad",
																"typeString": "literal_string \"Insufficient liquidity\""
															},
															"value": "Insufficient liquidity"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad",
																"typeString": "literal_string \"Insufficient liquidity\""
															}
														],
														"id": 1136,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3833:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3833:48:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1142,
												"nodeType": "ExpressionStatement",
												"src": "3833:48:7"
											},
											{
												"assignments": [
													1144
												],
												"declarations": [
													{
														"constant": false,
														"id": 1144,
														"mutability": "mutable",
														"name": "amount0",
														"nameLocation": "3902:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1218,
														"src": "3894:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1143,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3894:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1152,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1145,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "3912:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1146,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "3924:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3912:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1148,
																"name": "lpToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 887,
																"src": "3935:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_LPToken_$875",
																	"typeString": "contract LPToken"
																}
															},
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3943:11:7",
															"memberName": "totalSupply",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 270,
															"src": "3935:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																"typeString": "function () view external returns (uint256)"
															}
														},
														"id": 1150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3935:21:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3912:44:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3894:62:7"
											},
											{
												"assignments": [
													1154
												],
												"declarations": [
													{
														"constant": false,
														"id": 1154,
														"mutability": "mutable",
														"name": "amount1",
														"nameLocation": "3975:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1218,
														"src": "3967:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1153,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3967:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1162,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1155,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "3985:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1156,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "3997:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3985:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1158,
																"name": "lpToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 887,
																"src": "4008:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_LPToken_$875",
																	"typeString": "contract LPToken"
																}
															},
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4016:11:7",
															"memberName": "totalSupply",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 270,
															"src": "4008:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																"typeString": "function () view external returns (uint256)"
															}
														},
														"id": 1160,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4008:21:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3985:44:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3967:62:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1164,
																	"name": "amount0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1144,
																	"src": "4050:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4060:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4050:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1167,
																	"name": "amount1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1154,
																	"src": "4065:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4075:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4065:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4050:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74206c69717569646974792072656d6f766564",
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4078:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_27d5f3f66243758e6691dcd57e9bf312a7560459ee4acdda4b073260b5a54fc4",
																"typeString": "literal_string \"Insufficient liquidity removed\""
															},
															"value": "Insufficient liquidity removed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_27d5f3f66243758e6691dcd57e9bf312a7560459ee4acdda4b073260b5a54fc4",
																"typeString": "literal_string \"Insufficient liquidity removed\""
															}
														],
														"id": 1163,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4042:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4042:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1173,
												"nodeType": "ExpressionStatement",
												"src": "4042:69:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1177,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4137:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4141:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4137:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1179,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "4149:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1174,
															"name": "lpToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "4124:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_LPToken_$875",
																"typeString": "contract LPToken"
															}
														},
														"id": 1176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4132:4:7",
														"memberName": "burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 874,
														"src": "4124:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4124:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1181,
												"nodeType": "ExpressionStatement",
												"src": "4124:35:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1186,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4196:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4200:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4196:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1188,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1144,
															"src": "4208:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1183,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 882,
																	"src": "4179:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1182,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 775,
																"src": "4172:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$775_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4172:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$775",
																"typeString": "contract IERC20"
															}
														},
														"id": 1185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4187:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 742,
														"src": "4172:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4172:44:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1190,
												"nodeType": "ExpressionStatement",
												"src": "4172:44:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1195,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4251:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4255:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4251:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1197,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "4263:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1192,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 884,
																	"src": "4234:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1191,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 775,
																"src": "4227:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$775_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4227:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$775",
																"typeString": "contract IERC20"
															}
														},
														"id": 1194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4242:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 742,
														"src": "4227:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4227:44:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1199,
												"nodeType": "ExpressionStatement",
												"src": "4227:44:7"
											},
											{
												"expression": {
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1200,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "4284:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1201,
														"name": "amount0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "4296:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4284:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1203,
												"nodeType": "ExpressionStatement",
												"src": "4284:19:7"
											},
											{
												"expression": {
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1204,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 891,
														"src": "4314:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1205,
														"name": "amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1154,
														"src": "4326:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4314:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1207,
												"nodeType": "ExpressionStatement",
												"src": "4314:19:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1209,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4368:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4372:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4368:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1211,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1144,
															"src": "4380:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1212,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "4389:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1213,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "4398:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1214,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "4409:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1215,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "4419:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1208,
														"name": "LiquidityRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "4351:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4351:77:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1217,
												"nodeType": "EmitStatement",
												"src": "4346:82:7"
											}
										]
									},
									"documentation": {
										"id": 1131,
										"nodeType": "StructuredDocumentation",
										"src": "3633:130:7",
										"text": " @dev Internal function to remove liquidity from the pool.\n @param liquidity Total liquidity to remove."
									},
									"id": 1219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "3778:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "3802:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "3794:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3794:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3793:19:7"
									},
									"returnParameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3822:0:7"
									},
									"scope": 1737,
									"src": "3769:667:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1294,
										"nodeType": "Block",
										"src": "4679:656:7",
										"statements": [
											{
												"assignments": [
													1226
												],
												"declarations": [
													{
														"constant": false,
														"id": 1226,
														"mutability": "mutable",
														"name": "price0",
														"nameLocation": "4763:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1294,
														"src": "4755:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1225,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4755:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1233,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1230,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 882,
																	"src": "4789:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1229,
																"name": "getPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1357,
																"src": "4780:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_int256_$",
																	"typeString": "function (address) view returns (int256)"
																}
															},
															"id": 1231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4780:16:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1228,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4772:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1227,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4772:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4772:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4755:42:7"
											},
											{
												"assignments": [
													1235
												],
												"declarations": [
													{
														"constant": false,
														"id": 1235,
														"mutability": "mutable",
														"name": "price1",
														"nameLocation": "4816:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1294,
														"src": "4808:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1234,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4808:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1242,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1239,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 884,
																	"src": "4842:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1238,
																"name": "getPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1357,
																"src": "4833:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_int256_$",
																	"typeString": "function (address) view returns (int256)"
																}
															},
															"id": 1240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4833:16:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1237,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4825:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1236,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4825:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4825:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4808:42:7"
											},
											{
												"assignments": [
													1244
												],
												"declarations": [
													{
														"constant": false,
														"id": 1244,
														"mutability": "mutable",
														"name": "amount0",
														"nameLocation": "4966:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1294,
														"src": "4958:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1243,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4958:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1256,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1245,
																	"name": "usdAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1222,
																	"src": "4977:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 1248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4989:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 1247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4993:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "4989:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																},
																"src": "4977:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1250,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4976:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5000:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1252,
																	"name": "price0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1226,
																	"src": "5004:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5000:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1254,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4999:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4976:35:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4958:53:7"
											},
											{
												"assignments": [
													1258
												],
												"declarations": [
													{
														"constant": false,
														"id": 1258,
														"mutability": "mutable",
														"name": "amount1",
														"nameLocation": "5030:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1294,
														"src": "5022:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1257,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5022:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1270,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1259,
																	"name": "usdAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1222,
																	"src": "5041:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 1262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5053:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 1261,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5057:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "5053:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																},
																"src": "5041:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1264,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5040:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5064:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1266,
																	"name": "price1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1235,
																	"src": "5068:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5064:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1268,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5063:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5040:35:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5022:53:7"
											},
											{
												"assignments": [
													1272
												],
												"declarations": [
													{
														"constant": false,
														"id": 1272,
														"mutability": "mutable",
														"name": "liquidity",
														"nameLocation": "5142:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1294,
														"src": "5134:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1271,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5134:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1289,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1274,
																	"name": "amount0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1244,
																	"src": "5158:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 1275,
																			"name": "lpToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 887,
																			"src": "5168:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_LPToken_$875",
																				"typeString": "contract LPToken"
																			}
																		},
																		"id": 1276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5176:11:7",
																		"memberName": "totalSupply",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 270,
																		"src": "5168:19:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																			"typeString": "function () view external returns (uint256)"
																		}
																	},
																	"id": 1277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5168:21:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5158:31:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1279,
																"name": "reserve0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 889,
																"src": "5192:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5158:42:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1281,
																	"name": "amount1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1258,
																	"src": "5202:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 1282,
																			"name": "lpToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 887,
																			"src": "5212:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_LPToken_$875",
																				"typeString": "contract LPToken"
																			}
																		},
																		"id": 1283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5220:11:7",
																		"memberName": "totalSupply",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 270,
																		"src": "5212:19:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																			"typeString": "function () view external returns (uint256)"
																		}
																	},
																	"id": 1284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5212:21:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5202:31:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1286,
																"name": "reserve1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 891,
																"src": "5236:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5202:42:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1273,
														"name": "min",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1711,
														"src": "5154:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5154:91:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5134:111:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1291,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1272,
															"src": "5317:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1290,
														"name": "removeLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1219,
														"src": "5301:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5301:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1293,
												"nodeType": "ExpressionStatement",
												"src": "5301:26:7"
											}
										]
									},
									"documentation": {
										"id": 1220,
										"nodeType": "StructuredDocumentation",
										"src": "4444:171:7",
										"text": " @dev External function to remove liquidity in USD equivalent without enforcing ratio.\n @param usdAmount Total USD value of liquidity to remove."
									},
									"functionSelector": "5444a39d",
									"id": 1295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityInUSD",
									"nameLocation": "4630:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "usdAmount",
												"nameLocation": "4659:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "4651:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4651:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4650:19:7"
									},
									"returnParameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4679:0:7"
									},
									"scope": 1737,
									"src": "4621:714:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1307,
										"nodeType": "Block",
										"src": "5557:46:7",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 1303,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "5576:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1304,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "5586:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1305,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5575:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 1302,
												"id": 1306,
												"nodeType": "Return",
												"src": "5568:27:7"
											}
										]
									},
									"documentation": {
										"id": 1296,
										"nodeType": "StructuredDocumentation",
										"src": "5343:146:7",
										"text": " @dev View function to get the current reserves of the pool.\n @return (uint256, uint256) Reserves of token0 and token1."
									},
									"functionSelector": "0902f1ac",
									"id": 1308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nameLocation": "5504:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5515:2:7"
									},
									"returnParameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "5539:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5539:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "5548:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5548:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5538:18:7"
									},
									"scope": 1737,
									"src": "5495:108:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1356,
										"nodeType": "Block",
										"src": "5911:383:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1317,
																	"name": "inputToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1311,
																	"src": "5930:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1318,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 882,
																	"src": "5944:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5930:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1320,
																	"name": "inputToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1311,
																	"src": "5954:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1321,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 884,
																	"src": "5968:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5954:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5930:44:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420696e70757420746f6b656e",
															"id": 1324,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5976:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_84f0c120f9c89279530f293487f2886c10a3854abff7bba8786124cc26b0c21a",
																"typeString": "literal_string \"Invalid input token\""
															},
															"value": "Invalid input token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_84f0c120f9c89279530f293487f2886c10a3854abff7bba8786124cc26b0c21a",
																"typeString": "literal_string \"Invalid input token\""
															}
														],
														"id": 1316,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5922:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5922:76:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1326,
												"nodeType": "ExpressionStatement",
												"src": "5922:76:7"
											},
											{
												"assignments": [
													1328
												],
												"declarations": [
													{
														"constant": false,
														"id": 1328,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "6015:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 1356,
														"src": "6011:9:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1327,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "6011:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1329,
												"nodeType": "VariableDeclarationStatement",
												"src": "6011:9:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1330,
														"name": "inputToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1311,
														"src": "6035:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1331,
														"name": "token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "6049:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6035:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1348,
													"nodeType": "Block",
													"src": "6132:69:7",
													"statements": [
														{
															"expression": {
																"id": 1346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		null,
																		{
																			"id": 1341,
																			"name": "price",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1328,
																			"src": "6149:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		null,
																		null,
																		null
																	],
																	"id": 1342,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "6147:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$_t_int256_$__$__$__$",
																		"typeString": "tuple(,int256,,,)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 1343,
																			"name": "priceFeed1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 897,
																			"src": "6161:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																				"typeString": "contract AggregatorV3Interface"
																			}
																		},
																		"id": 1344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6172:15:7",
																		"memberName": "latestRoundData",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "6161:26:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
																			"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
																		}
																	},
																	"id": 1345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6161:28:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
																		"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
																	}
																},
																"src": "6147:42:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1347,
															"nodeType": "ExpressionStatement",
															"src": "6147:42:7"
														}
													]
												},
												"id": 1349,
												"nodeType": "IfStatement",
												"src": "6031:170:7",
												"trueBody": {
													"id": 1340,
													"nodeType": "Block",
													"src": "6057:69:7",
													"statements": [
														{
															"expression": {
																"id": 1338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		null,
																		{
																			"id": 1333,
																			"name": "price",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1328,
																			"src": "6074:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		null,
																		null,
																		null
																	],
																	"id": 1334,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "6072:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$_t_int256_$__$__$__$",
																		"typeString": "tuple(,int256,,,)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 1335,
																			"name": "priceFeed0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 894,
																			"src": "6086:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																				"typeString": "contract AggregatorV3Interface"
																			}
																		},
																		"id": 1336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6097:15:7",
																		"memberName": "latestRoundData",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "6086:26:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
																			"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
																		}
																	},
																	"id": 1337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6086:28:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
																		"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
																	}
																},
																"src": "6072:42:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1339,
															"nodeType": "ExpressionStatement",
															"src": "6072:42:7"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1350,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1328,
														"src": "6218:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_10000000000_by_1",
															"typeString": "int_const 10000000000"
														},
														"id": 1353,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6226:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "3130",
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6230:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"src": "6226:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000000000_by_1",
															"typeString": "int_const 10000000000"
														}
													},
													"src": "6218:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1315,
												"id": 1355,
												"nodeType": "Return",
												"src": "6211:21:7"
											}
										]
									},
									"documentation": {
										"id": 1309,
										"nodeType": "StructuredDocumentation",
										"src": "5611:230:7",
										"text": " @dev View function to get the current price of a token from the Chainlink price feed.\n @param inputToken Address of the token to get the price for.\n @return int Current price of the token in USD."
									},
									"functionSelector": "41976e09",
									"id": 1357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPrice",
									"nameLocation": "5856:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "inputToken",
												"nameLocation": "5873:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "5865:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5865:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5864:20:7"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "5906:3:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1313,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "5906:3:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5905:5:7"
									},
									"scope": 1737,
									"src": "5847:447:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1394,
										"nodeType": "Block",
										"src": "6501:246:7",
										"statements": [
											{
												"assignments": [
													null,
													1364,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1364,
														"mutability": "mutable",
														"name": "price0",
														"nameLocation": "6518:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1394,
														"src": "6514:10:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1363,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "6514:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 1368,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1365,
															"name": "priceFeed0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "6531:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 1366,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6542:15:7",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "6531:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 1367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6531:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6512:47:7"
											},
											{
												"assignments": [
													null,
													1370,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1370,
														"mutability": "mutable",
														"name": "price1",
														"nameLocation": "6576:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1394,
														"src": "6572:10:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1369,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "6572:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 1374,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1371,
															"name": "priceFeed1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "6589:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 1372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6600:15:7",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "6589:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6589:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6570:47:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1385,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 1379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1375,
																		"name": "price0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1364,
																		"src": "6636:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_rational_10000000000_by_1",
																			"typeString": "int_const 10000000000"
																		},
																		"id": 1378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 1376,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6645:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"hexValue": "3130",
																			"id": 1377,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6649:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "6645:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000000000_by_1",
																			"typeString": "int_const 10000000000"
																		}
																	},
																	"src": "6636:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 1380,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6635:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_100000000_by_1",
																		"typeString": "int_const 100000000"
																	},
																	"id": 1383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1381,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6656:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "38",
																		"id": 1382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6662:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	"src": "6656:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100000000_by_1",
																		"typeString": "int_const 100000000"
																	}
																}
															],
															"id": 1384,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6655:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100000000_by_1",
																"typeString": "int_const 100000000"
															}
														},
														"src": "6635:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1386,
																	"name": "price1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1370,
																	"src": "6668:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_10000000000_by_1",
																		"typeString": "int_const 10000000000"
																	},
																	"id": 1389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6677:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3130",
																		"id": 1388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6681:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"src": "6677:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000000000_by_1",
																		"typeString": "int_const 10000000000"
																	}
																},
																"src": "6668:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1391,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6667:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "6635:49:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1362,
												"id": 1393,
												"nodeType": "Return",
												"src": "6628:56:7"
											}
										]
									},
									"documentation": {
										"id": 1358,
										"nodeType": "StructuredDocumentation",
										"src": "6302:142:7",
										"text": " @dev View function to get the price ratio between token0 and token1.\n @return int Price ratio of token0 to token1."
									},
									"functionSelector": "54b2a769",
									"id": 1395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPriceRatio",
									"nameLocation": "6459:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6472:2:7"
									},
									"returnParameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "6496:3:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1360,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "6496:3:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6495:5:7"
									},
									"scope": 1737,
									"src": "6450:297:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1455,
										"nodeType": "Block",
										"src": "7132:459:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1405,
																	"name": "inputToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1399,
																	"src": "7151:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1406,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 882,
																	"src": "7165:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7151:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1408,
																	"name": "inputToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1399,
																	"src": "7175:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1409,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 884,
																	"src": "7189:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7175:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7151:44:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420696e70757420746f6b656e",
															"id": 1412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7197:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_84f0c120f9c89279530f293487f2886c10a3854abff7bba8786124cc26b0c21a",
																"typeString": "literal_string \"Invalid input token\""
															},
															"value": "Invalid input token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_84f0c120f9c89279530f293487f2886c10a3854abff7bba8786124cc26b0c21a",
																"typeString": "literal_string \"Invalid input token\""
															}
														],
														"id": 1404,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7143:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7143:76:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1414,
												"nodeType": "ExpressionStatement",
												"src": "7143:76:7"
											},
											{
												"assignments": [
													1416
												],
												"declarations": [
													{
														"constant": false,
														"id": 1416,
														"mutability": "mutable",
														"name": "isInputToken0",
														"nameLocation": "7235:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1455,
														"src": "7230:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1415,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7230:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1421,
												"initialValue": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1417,
																"name": "inputToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1399,
																"src": "7252:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1418,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 882,
																"src": "7266:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7252:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1420,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7251:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7230:43:7"
											},
											{
												"assignments": [
													1423
												],
												"declarations": [
													{
														"constant": false,
														"id": 1423,
														"mutability": "mutable",
														"name": "inputReserve",
														"nameLocation": "7292:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1455,
														"src": "7284:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1422,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7284:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1428,
												"initialValue": {
													"condition": {
														"id": 1424,
														"name": "isInputToken0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1416,
														"src": "7307:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1426,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 891,
														"src": "7334:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "7307:35:7",
													"trueExpression": {
														"id": 1425,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "7323:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7284:58:7"
											},
											{
												"assignments": [
													1430
												],
												"declarations": [
													{
														"constant": false,
														"id": 1430,
														"mutability": "mutable",
														"name": "outputReserve",
														"nameLocation": "7361:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1455,
														"src": "7353:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1429,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7353:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1435,
												"initialValue": {
													"condition": {
														"id": 1431,
														"name": "isInputToken0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1416,
														"src": "7377:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1433,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "7404:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "7377:35:7",
													"trueExpression": {
														"id": 1432,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 891,
														"src": "7393:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7353:59:7"
											},
											{
												"assignments": [
													1437
												],
												"declarations": [
													{
														"constant": false,
														"id": 1437,
														"mutability": "mutable",
														"name": "amountInWithFee",
														"nameLocation": "7431:15:7",
														"nodeType": "VariableDeclaration",
														"scope": 1455,
														"src": "7423:23:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1436,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7423:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1443,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1438,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1397,
															"src": "7449:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "393937",
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7460:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_997_by_1",
																"typeString": "int_const 997"
															},
															"value": "997"
														},
														"src": "7449:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 1441,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7466:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "7449:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7423:47:7"
											},
											{
												"expression": {
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1444,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1402,
														"src": "7505:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1445,
																"name": "amountInWithFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1437,
																"src": "7517:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1446,
																"name": "outputReserve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1430,
																"src": "7535:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7517:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1448,
																		"name": "inputReserve",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1423,
																		"src": "7552:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1449,
																		"name": "amountInWithFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1437,
																		"src": "7567:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7552:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1451,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7551:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7517:66:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7505:78:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1454,
												"nodeType": "ExpressionStatement",
												"src": "7505:78:7"
											}
										]
									},
									"functionSelector": "f140a35a",
									"id": 1456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "7041:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "7062:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "7054:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7054:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "inputToken",
												"nameLocation": "7080:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "7072:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7072:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7053:38:7"
									},
									"returnParameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "7121:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "7113:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7113:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7112:19:7"
									},
									"scope": 1737,
									"src": "7032:559:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1574,
										"nodeType": "Block",
										"src": "7880:1236:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1465,
																	"name": "inputToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1461,
																	"src": "7899:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1466,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 882,
																	"src": "7913:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7899:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1468,
																	"name": "inputToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1461,
																	"src": "7923:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1469,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 884,
																	"src": "7937:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7923:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7899:44:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420696e70757420746f6b656e",
															"id": 1472,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7945:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_84f0c120f9c89279530f293487f2886c10a3854abff7bba8786124cc26b0c21a",
																"typeString": "literal_string \"Invalid input token\""
															},
															"value": "Invalid input token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_84f0c120f9c89279530f293487f2886c10a3854abff7bba8786124cc26b0c21a",
																"typeString": "literal_string \"Invalid input token\""
															}
														],
														"id": 1464,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7891:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7891:76:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1474,
												"nodeType": "ExpressionStatement",
												"src": "7891:76:7"
											},
											{
												"assignments": [
													1476
												],
												"declarations": [
													{
														"constant": false,
														"id": 1476,
														"mutability": "mutable",
														"name": "price0",
														"nameLocation": "8053:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1574,
														"src": "8045:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1475,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8045:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1483,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1480,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 882,
																	"src": "8079:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1479,
																"name": "getPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1357,
																"src": "8070:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_int256_$",
																	"typeString": "function (address) view returns (int256)"
																}
															},
															"id": 1481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8070:16:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1478,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8062:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1477,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8062:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8062:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8045:42:7"
											},
											{
												"assignments": [
													1485
												],
												"declarations": [
													{
														"constant": false,
														"id": 1485,
														"mutability": "mutable",
														"name": "price1",
														"nameLocation": "8106:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1574,
														"src": "8098:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1484,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8098:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1492,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1489,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 884,
																	"src": "8132:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1488,
																"name": "getPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1357,
																"src": "8123:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_int256_$",
																	"typeString": "function (address) view returns (int256)"
																}
															},
															"id": 1490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8123:16:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1487,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8115:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1486,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8115:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8115:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8098:42:7"
											},
											{
												"assignments": [
													1494
												],
												"declarations": [
													{
														"constant": false,
														"id": 1494,
														"mutability": "mutable",
														"name": "isInputToken0",
														"nameLocation": "8158:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1574,
														"src": "8153:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1493,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8153:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1499,
												"initialValue": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1495,
																"name": "inputToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1461,
																"src": "8175:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1496,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 882,
																"src": "8189:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8175:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1498,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "8174:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8153:43:7"
											},
											{
												"assignments": [
													1501
												],
												"declarations": [
													{
														"constant": false,
														"id": 1501,
														"mutability": "mutable",
														"name": "outputToken",
														"nameLocation": "8215:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1574,
														"src": "8207:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1500,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8207:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1506,
												"initialValue": {
													"condition": {
														"id": 1502,
														"name": "isInputToken0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "8229:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1504,
														"name": "token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "8254:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8229:31:7",
													"trueExpression": {
														"id": 1503,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "8245:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8207:53:7"
											},
											{
												"assignments": [
													1508
												],
												"declarations": [
													{
														"constant": false,
														"id": 1508,
														"mutability": "mutable",
														"name": "inputPrice",
														"nameLocation": "8279:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1574,
														"src": "8271:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1507,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8271:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1513,
												"initialValue": {
													"condition": {
														"id": 1509,
														"name": "isInputToken0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "8292:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1511,
														"name": "price1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1485,
														"src": "8317:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8292:31:7",
													"trueExpression": {
														"id": 1510,
														"name": "price0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1476,
														"src": "8308:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8271:52:7"
											},
											{
												"assignments": [
													1515
												],
												"declarations": [
													{
														"constant": false,
														"id": 1515,
														"mutability": "mutable",
														"name": "amountIn",
														"nameLocation": "8416:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 1574,
														"src": "8408:16:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1514,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8408:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1524,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1516,
																	"name": "usdAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1459,
																	"src": "8428:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 1519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8440:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 1518,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8444:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "8440:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																},
																"src": "8428:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1521,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8427:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1522,
														"name": "inputPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1508,
														"src": "8450:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8427:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8408:52:7"
											},
											{
												"assignments": [
													1526
												],
												"declarations": [
													{
														"constant": false,
														"id": 1526,
														"mutability": "mutable",
														"name": "amountOut",
														"nameLocation": "8553:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1574,
														"src": "8545:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1525,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8545:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1531,
												"initialValue": {
													"arguments": [
														{
															"id": 1528,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1515,
															"src": "8578:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1529,
															"name": "inputToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1461,
															"src": "8588:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1527,
														"name": "getAmountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1456,
														"src": "8565:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (uint256,address) view returns (uint256)"
														}
													},
													"id": 1530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8565:34:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8545:54:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1536,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8708:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8712:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8708:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1540,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8728:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Pair_$1737",
																		"typeString": "contract Pair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Pair_$1737",
																		"typeString": "contract Pair"
																	}
																],
																"id": 1539,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8720:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1538,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8720:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8720:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1542,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1515,
															"src": "8735:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1533,
																	"name": "inputToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1461,
																	"src": "8683:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1532,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 775,
																"src": "8676:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$775_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8676:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$775",
																"typeString": "contract IERC20"
															}
														},
														"id": 1535,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8695:12:7",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 774,
														"src": "8676:31:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8676:68:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1544,
												"nodeType": "ExpressionStatement",
												"src": "8676:68:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1549,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8851:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8855:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8851:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1551,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "8863:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1546,
																	"name": "outputToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1501,
																	"src": "8829:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1545,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 775,
																"src": "8822:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$775_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8822:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$775",
																"typeString": "contract IERC20"
															}
														},
														"id": 1548,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8842:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 742,
														"src": "8822:28:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8822:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1553,
												"nodeType": "ExpressionStatement",
												"src": "8822:51:7"
											},
											{
												"condition": {
													"id": 1554,
													"name": "isInputToken0",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1494,
													"src": "8922:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1572,
													"nodeType": "Block",
													"src": "9026:83:7",
													"statements": [
														{
															"expression": {
																"id": 1566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1564,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 891,
																	"src": "9041:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1565,
																	"name": "amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1515,
																	"src": "9053:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9041:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1567,
															"nodeType": "ExpressionStatement",
															"src": "9041:20:7"
														},
														{
															"expression": {
																"id": 1570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1568,
																	"name": "reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 889,
																	"src": "9076:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 1569,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1526,
																	"src": "9088:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9076:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1571,
															"nodeType": "ExpressionStatement",
															"src": "9076:21:7"
														}
													]
												},
												"id": 1573,
												"nodeType": "IfStatement",
												"src": "8918:191:7",
												"trueBody": {
													"id": 1563,
													"nodeType": "Block",
													"src": "8937:83:7",
													"statements": [
														{
															"expression": {
																"id": 1557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1555,
																	"name": "reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 889,
																	"src": "8952:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1556,
																	"name": "amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1515,
																	"src": "8964:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8952:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1558,
															"nodeType": "ExpressionStatement",
															"src": "8952:20:7"
														},
														{
															"expression": {
																"id": 1561,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1559,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 891,
																	"src": "8987:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 1560,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1526,
																	"src": "8999:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8987:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1562,
															"nodeType": "ExpressionStatement",
															"src": "8987:21:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1457,
										"nodeType": "StructuredDocumentation",
										"src": "7599:208:7",
										"text": " @dev External function to swap tokens using USD value.\n @param usdAmount Amount of USD to swap from inputToken to outputToken.\n @param inputToken Address of the input token."
									},
									"functionSelector": "d0e7e07e",
									"id": 1575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapInUSD",
									"nameLocation": "7822:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "usdAmount",
												"nameLocation": "7840:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "7832:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7832:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "inputToken",
												"nameLocation": "7859:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "7851:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7851:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7831:39:7"
									},
									"returnParameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7880:0:7"
									},
									"scope": 1737,
									"src": "7813:1303:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1601,
										"nodeType": "Block",
										"src": "9364:166:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1582,
																	"name": "reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 889,
																	"src": "9383:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9394:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "9383:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1585,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 891,
																	"src": "9399:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9410:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "9399:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "9383:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526573657276657320617265206e6f7420736574",
															"id": 1589,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9413:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8383d29ebbe792827fefa7997bfaff9ad7589c06cb05191eef1178dddc2412a2",
																"typeString": "literal_string \"Reserves are not set\""
															},
															"value": "Reserves are not set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8383d29ebbe792827fefa7997bfaff9ad7589c06cb05191eef1178dddc2412a2",
																"typeString": "literal_string \"Reserves are not set\""
															}
														],
														"id": 1581,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9375:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9375:61:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1591,
												"nodeType": "ExpressionStatement",
												"src": "9375:61:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1592,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 891,
																	"src": "9455:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 1595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9466:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 1594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9470:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "9466:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																},
																"src": "9455:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1597,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9454:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1598,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "9476:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9454:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1580,
												"id": 1600,
												"nodeType": "Return",
												"src": "9447:37:7"
											}
										]
									},
									"documentation": {
										"id": 1576,
										"nodeType": "StructuredDocumentation",
										"src": "9124:168:7",
										"text": " @dev View function to get the price of token0 in terms of token1 using the AMM formula.\n @return uint256 Price of token0 in terms of token1."
									},
									"functionSelector": "729132f9",
									"id": 1602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDAIperLinkOurDEXPrice",
									"nameLocation": "9307:24:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9331:2:7"
									},
									"returnParameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "9355:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9355:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9354:9:7"
									},
									"scope": 1737,
									"src": "9298:232:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1635,
										"nodeType": "Block",
										"src": "9800:231:7",
										"statements": [
											{
												"assignments": [
													null,
													1609,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1609,
														"mutability": "mutable",
														"name": "price0",
														"nameLocation": "9817:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1635,
														"src": "9813:10:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1608,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "9813:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 1613,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1610,
															"name": "priceFeed0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "9830:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 1611,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9841:15:7",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "9830:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 1612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9830:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9811:47:7"
											},
											{
												"assignments": [
													null,
													1615,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1615,
														"mutability": "mutable",
														"name": "price1",
														"nameLocation": "9875:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1635,
														"src": "9871:10:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1614,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "9871:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 1619,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1616,
															"name": "priceFeed1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "9888:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 1617,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9899:15:7",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "9888:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 1618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9888:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9869:47:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1622,
																			"name": "price0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1609,
																			"src": "9943:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 1621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9935:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1620,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9935:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9935:15:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 1626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9953:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 1625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9957:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "9953:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																},
																"src": "9935:24:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1628,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9934:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"arguments": [
															{
																"id": 1631,
																"name": "price1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1615,
																"src": "9971:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9963:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1629,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9963:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1632,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9963:15:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9934:44:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1607,
												"id": 1634,
												"nodeType": "Return",
												"src": "9927:51:7"
											}
										]
									},
									"documentation": {
										"id": 1603,
										"nodeType": "StructuredDocumentation",
										"src": "9538:190:7",
										"text": " @dev View function to get the current market price ratio of token0 to token1 using Chainlink price feeds.\n @return uint256 Market price ratio of token0 to token1."
									},
									"functionSelector": "a996944c",
									"id": 1636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDAIperLinkMarketPrice",
									"nameLocation": "9743:24:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9767:2:7"
									},
									"returnParameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "9791:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9791:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9790:9:7"
									},
									"scope": 1737,
									"src": "9734:297:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1690,
										"nodeType": "Block",
										"src": "10303:250:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1644,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1639,
														"src": "10318:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "33",
														"id": 1645,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10322:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "10318:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1682,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1680,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1639,
															"src": "10506:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10511:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "10506:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1688,
													"nodeType": "IfStatement",
													"src": "10502:44:7",
													"trueBody": {
														"id": 1687,
														"nodeType": "Block",
														"src": "10514:32:7",
														"statements": [
															{
																"expression": {
																	"id": 1685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1683,
																		"name": "z",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1642,
																		"src": "10529:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "31",
																		"id": 1684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10533:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10529:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1686,
																"nodeType": "ExpressionStatement",
																"src": "10529:5:7"
															}
														]
													}
												},
												"id": 1689,
												"nodeType": "IfStatement",
												"src": "10314:232:7",
												"trueBody": {
													"id": 1679,
													"nodeType": "Block",
													"src": "10325:171:7",
													"statements": [
														{
															"expression": {
																"id": 1649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1647,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1642,
																	"src": "10340:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1648,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1639,
																	"src": "10344:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10340:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1650,
															"nodeType": "ExpressionStatement",
															"src": "10340:5:7"
														},
														{
															"assignments": [
																1652
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1652,
																	"mutability": "mutable",
																	"name": "x",
																	"nameLocation": "10365:1:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1679,
																	"src": "10360:6:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1651,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "10360:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1658,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1653,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1639,
																		"src": "10369:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 1654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10373:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "10369:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10377:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10369:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10360:18:7"
														},
														{
															"body": {
																"id": 1677,
																"nodeType": "Block",
																"src": "10407:78:7",
																"statements": [
																	{
																		"expression": {
																			"id": 1664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1662,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1642,
																				"src": "10426:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1663,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1652,
																				"src": "10430:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10426:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1665,
																		"nodeType": "ExpressionStatement",
																		"src": "10426:5:7"
																	},
																	{
																		"expression": {
																			"id": 1675,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1666,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1652,
																				"src": "10450:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1674,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1671,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1669,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1667,
																									"name": "y",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1639,
																									"src": "10455:1:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "/",
																								"rightExpression": {
																									"id": 1668,
																									"name": "x",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1652,
																									"src": "10459:1:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "10455:5:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"id": 1670,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1652,
																								"src": "10463:1:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "10455:9:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1672,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "10454:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 1673,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "10468:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "10454:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10450:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1676,
																		"nodeType": "ExpressionStatement",
																		"src": "10450:19:7"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1659,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1652,
																	"src": "10400:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1660,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1642,
																	"src": "10404:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10400:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1678,
															"nodeType": "WhileStatement",
															"src": "10393:92:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1637,
										"nodeType": "StructuredDocumentation",
										"src": "10039:205:7",
										"text": " @dev Helper function to compute square root (required for LP token minting).\n @param y The number to compute the square root of.\n @return z The square root of the number."
									},
									"id": 1691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10259:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "10269:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "10264:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1638,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10264:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10263:8:7"
									},
									"returnParameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "10300:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "10295:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1641,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10295:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10294:8:7"
									},
									"scope": 1737,
									"src": "10250:303:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1710,
										"nodeType": "Block",
										"src": "10805:36:7",
										"statements": [
											{
												"expression": {
													"id": 1708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1701,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1699,
														"src": "10816:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1702,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1694,
																"src": "10820:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1703,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1696,
																"src": "10824:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10820:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"id": 1706,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1696,
															"src": "10832:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1707,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "10820:13:7",
														"trueExpression": {
															"id": 1705,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1694,
															"src": "10828:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10816:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1709,
												"nodeType": "ExpressionStatement",
												"src": "10816:17:7"
											}
										]
									},
									"documentation": {
										"id": 1692,
										"nodeType": "StructuredDocumentation",
										"src": "10561:178:7",
										"text": " @dev Helper function to find the minimum of two numbers.\n @param x First number.\n @param y Second number.\n @return z Minimum of x and y."
									},
									"id": 1711,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "10754:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "10763:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "10758:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1693,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10758:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1696,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "10771:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "10766:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1695,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10766:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10757:16:7"
									},
									"returnParameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "10802:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "10797:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1698,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10797:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10796:8:7"
									},
									"scope": 1737,
									"src": "10745:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1735,
										"nodeType": "Block",
										"src": "11168:105:7",
										"statements": [
											{
												"assignments": [
													1722
												],
												"declarations": [
													{
														"constant": false,
														"id": 1722,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "11187:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1735,
														"src": "11179:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1721,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11179:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1727,
												"initialValue": {
													"arguments": [
														{
															"id": 1725,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1714,
															"src": "11215:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1723,
															"name": "lpToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "11197:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_LPToken_$875",
																"typeString": "contract LPToken"
															}
														},
														"id": 1724,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11205:9:7",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 283,
														"src": "11197:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11197:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11179:41:7"
											},
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"id": 1730,
																	"name": "lpToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 887,
																	"src": "11247:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LPToken_$875",
																		"typeString": "contract LPToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LPToken_$875",
																		"typeString": "contract LPToken"
																	}
																],
																"id": 1729,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11239:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1728,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11239:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11239:16:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1732,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1722,
															"src": "11257:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1733,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "11238:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,uint256)"
													}
												},
												"functionReturnParameters": 1720,
												"id": 1734,
												"nodeType": "Return",
												"src": "11231:34:7"
											}
										]
									},
									"documentation": {
										"id": 1712,
										"nodeType": "StructuredDocumentation",
										"src": "10849:233:7",
										"text": " @dev View function to get LP token details and balance for a specific address.\n @param user Address of the user to check.\n @return (address, uint256) Address of the LP token and balance of the user."
									},
									"functionSelector": "bff46a4c",
									"id": 1736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLPTokenDetails",
									"nameLocation": "11097:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "11123:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "11115:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11115:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11114:14:7"
									},
									"returnParameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "11150:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11150:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "11159:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11159:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11149:18:7"
									},
									"scope": 1737,
									"src": "11088:185:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1738,
							"src": "252:11024:7",
							"usedErrors": [],
							"usedEvents": [
								911,
								925
							]
						}
					],
					"src": "33:11247:7"
				},
				"id": 7
			}
		}
	}
}